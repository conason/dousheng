Index: kitex_gen/relation/script/bootstrap.sh
===================================================================
diff --git a/kitex_gen/relation/script/bootstrap.sh b/kitex_gen/relation/script/bootstrap.sh
--- a/kitex_gen/relation/script/bootstrap.sh	
+++ b/kitex_gen/relation/script/bootstrap.sh	
@@ -1,22 +1,0 @@
-#! /usr/bin/env bash
-CURDIR=$(cd $(dirname $0); pwd)
-
-if [ "X$1" != "X" ]; then
-    RUNTIME_ROOT=$1
-else
-    RUNTIME_ROOT=${CURDIR}
-fi
-
-export KITEX_RUNTIME_ROOT=$RUNTIME_ROOT
-export KITEX_LOG_DIR="$RUNTIME_ROOT/log"
-
-if [ ! -d "$KITEX_LOG_DIR/app" ]; then
-    mkdir -p "$KITEX_LOG_DIR/app"
-fi
-
-if [ ! -d "$KITEX_LOG_DIR/rpc" ]; then
-    mkdir -p "$KITEX_LOG_DIR/rpc"
-fi
-
-exec "$CURDIR/bin/relation"
-
Index: kitex_gen/relation/relationsvr/relationsvr.go
===================================================================
diff --git a/kitex_gen/relation/relationsvr/relationsvr.go b/kitex_gen/relation/relationsvr/relationsvr.go
--- a/kitex_gen/relation/relationsvr/relationsvr.go	
+++ b/kitex_gen/relation/relationsvr/relationsvr.go	
@@ -1,672 +1,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package relationsvr
-
-import (
-	"context"
-	relation "dousheng/kitex_gen/relation"
-	"fmt"
-	client "github.com/cloudwego/kitex/client"
-	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
-	streaming "github.com/cloudwego/kitex/pkg/streaming"
-	proto "google.golang.org/protobuf/proto"
-)
-
-func serviceInfo() *kitex.ServiceInfo {
-	return relationSvrServiceInfo
-}
-
-var relationSvrServiceInfo = NewServiceInfo()
-
-func NewServiceInfo() *kitex.ServiceInfo {
-	serviceName := "RelationSvr"
-	handlerType := (*relation.RelationSvr)(nil)
-	methods := map[string]kitex.MethodInfo{
-		"Sub":        kitex.NewMethodInfo(subHandler, newSubArgs, newSubResult, false),
-		"SubList":    kitex.NewMethodInfo(subListHandler, newSubListArgs, newSubListResult, false),
-		"FansList":   kitex.NewMethodInfo(fansListHandler, newFansListArgs, newFansListResult, false),
-		"FriendList": kitex.NewMethodInfo(friendListHandler, newFriendListArgs, newFriendListResult, false),
-	}
-	extra := map[string]interface{}{
-		"PackageName": "relation",
-	}
-	svcInfo := &kitex.ServiceInfo{
-		ServiceName:     serviceName,
-		HandlerType:     handlerType,
-		Methods:         methods,
-		PayloadCodec:    kitex.Protobuf,
-		KiteXGenVersion: "v0.4.4",
-		Extra:           extra,
-	}
-	return svcInfo
-}
-
-func subHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationActionRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).Sub(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *SubArgs:
-		success, err := handler.(relation.RelationSvr).Sub(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*SubResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newSubArgs() interface{} {
-	return &SubArgs{}
-}
-
-func newSubResult() interface{} {
-	return &SubResult{}
-}
-
-type SubArgs struct {
-	Req *relation.DouyinRelationActionRequest
-}
-
-func (p *SubArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationActionRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *SubArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *SubArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *SubArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in SubArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *SubArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationActionRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var SubArgs_Req_DEFAULT *relation.DouyinRelationActionRequest
-
-func (p *SubArgs) GetReq() *relation.DouyinRelationActionRequest {
-	if !p.IsSetReq() {
-		return SubArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *SubArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type SubResult struct {
-	Success *relation.DouyinRelationActionResponse
-}
-
-var SubResult_Success_DEFAULT *relation.DouyinRelationActionResponse
-
-func (p *SubResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationActionResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *SubResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *SubResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *SubResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in SubResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *SubResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationActionResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *SubResult) GetSuccess() *relation.DouyinRelationActionResponse {
-	if !p.IsSetSuccess() {
-		return SubResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *SubResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationActionResponse)
-}
-
-func (p *SubResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func subListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationFollowListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).SubList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *SubListArgs:
-		success, err := handler.(relation.RelationSvr).SubList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*SubListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newSubListArgs() interface{} {
-	return &SubListArgs{}
-}
-
-func newSubListResult() interface{} {
-	return &SubListResult{}
-}
-
-type SubListArgs struct {
-	Req *relation.DouyinRelationFollowListRequest
-}
-
-func (p *SubListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationFollowListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *SubListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *SubListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *SubListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in SubListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *SubListArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var SubListArgs_Req_DEFAULT *relation.DouyinRelationFollowListRequest
-
-func (p *SubListArgs) GetReq() *relation.DouyinRelationFollowListRequest {
-	if !p.IsSetReq() {
-		return SubListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *SubListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type SubListResult struct {
-	Success *relation.DouyinRelationFollowListResponse
-}
-
-var SubListResult_Success_DEFAULT *relation.DouyinRelationFollowListResponse
-
-func (p *SubListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationFollowListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *SubListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *SubListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *SubListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in SubListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *SubListResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *SubListResult) GetSuccess() *relation.DouyinRelationFollowListResponse {
-	if !p.IsSetSuccess() {
-		return SubListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *SubListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationFollowListResponse)
-}
-
-func (p *SubListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func fansListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationFollowerListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).FansList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *FansListArgs:
-		success, err := handler.(relation.RelationSvr).FansList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*FansListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newFansListArgs() interface{} {
-	return &FansListArgs{}
-}
-
-func newFansListResult() interface{} {
-	return &FansListResult{}
-}
-
-type FansListArgs struct {
-	Req *relation.DouyinRelationFollowerListRequest
-}
-
-func (p *FansListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationFollowerListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *FansListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *FansListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *FansListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in FansListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *FansListArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowerListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var FansListArgs_Req_DEFAULT *relation.DouyinRelationFollowerListRequest
-
-func (p *FansListArgs) GetReq() *relation.DouyinRelationFollowerListRequest {
-	if !p.IsSetReq() {
-		return FansListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *FansListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type FansListResult struct {
-	Success *relation.DouyinRelationFollowerListResponse
-}
-
-var FansListResult_Success_DEFAULT *relation.DouyinRelationFollowerListResponse
-
-func (p *FansListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationFollowerListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *FansListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *FansListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *FansListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in FansListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *FansListResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowerListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *FansListResult) GetSuccess() *relation.DouyinRelationFollowerListResponse {
-	if !p.IsSetSuccess() {
-		return FansListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *FansListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationFollowerListResponse)
-}
-
-func (p *FansListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func friendListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationFriendListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).FriendList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *FriendListArgs:
-		success, err := handler.(relation.RelationSvr).FriendList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*FriendListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newFriendListArgs() interface{} {
-	return &FriendListArgs{}
-}
-
-func newFriendListResult() interface{} {
-	return &FriendListResult{}
-}
-
-type FriendListArgs struct {
-	Req *relation.DouyinRelationFriendListRequest
-}
-
-func (p *FriendListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationFriendListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *FriendListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *FriendListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *FriendListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in FriendListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *FriendListArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFriendListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var FriendListArgs_Req_DEFAULT *relation.DouyinRelationFriendListRequest
-
-func (p *FriendListArgs) GetReq() *relation.DouyinRelationFriendListRequest {
-	if !p.IsSetReq() {
-		return FriendListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *FriendListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type FriendListResult struct {
-	Success *relation.DouyinRelationFriendListResponse
-}
-
-var FriendListResult_Success_DEFAULT *relation.DouyinRelationFriendListResponse
-
-func (p *FriendListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationFriendListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *FriendListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *FriendListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *FriendListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in FriendListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *FriendListResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFriendListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *FriendListResult) GetSuccess() *relation.DouyinRelationFriendListResponse {
-	if !p.IsSetSuccess() {
-		return FriendListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *FriendListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationFriendListResponse)
-}
-
-func (p *FriendListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-type kClient struct {
-	c client.Client
-}
-
-func newServiceClient(c client.Client) *kClient {
-	return &kClient{
-		c: c,
-	}
-}
-
-func (p *kClient) Sub(ctx context.Context, Req *relation.DouyinRelationActionRequest) (r *relation.DouyinRelationActionResponse, err error) {
-	var _args SubArgs
-	_args.Req = Req
-	var _result SubResult
-	if err = p.c.Call(ctx, "Sub", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) SubList(ctx context.Context, Req *relation.DouyinRelationFollowListRequest) (r *relation.DouyinRelationFollowListResponse, err error) {
-	var _args SubListArgs
-	_args.Req = Req
-	var _result SubListResult
-	if err = p.c.Call(ctx, "SubList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) FansList(ctx context.Context, Req *relation.DouyinRelationFollowerListRequest) (r *relation.DouyinRelationFollowerListResponse, err error) {
-	var _args FansListArgs
-	_args.Req = Req
-	var _result FansListResult
-	if err = p.c.Call(ctx, "FansList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) FriendList(ctx context.Context, Req *relation.DouyinRelationFriendListRequest) (r *relation.DouyinRelationFriendListResponse, err error) {
-	var _args FriendListArgs
-	_args.Req = Req
-	var _result FriendListResult
-	if err = p.c.Call(ctx, "FriendList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
Index: kitex_gen/user/script/bootstrap.sh
===================================================================
diff --git a/kitex_gen/user/script/bootstrap.sh b/kitex_gen/user/script/bootstrap.sh
--- a/kitex_gen/user/script/bootstrap.sh	
+++ b/kitex_gen/user/script/bootstrap.sh	
@@ -1,22 +1,0 @@
-#! /usr/bin/env bash
-CURDIR=$(cd $(dirname $0); pwd)
-
-if [ "X$1" != "X" ]; then
-    RUNTIME_ROOT=$1
-else
-    RUNTIME_ROOT=${CURDIR}
-fi
-
-export KITEX_RUNTIME_ROOT=$RUNTIME_ROOT
-export KITEX_LOG_DIR="$RUNTIME_ROOT/log"
-
-if [ ! -d "$KITEX_LOG_DIR/app" ]; then
-    mkdir -p "$KITEX_LOG_DIR/app"
-fi
-
-if [ ! -d "$KITEX_LOG_DIR/rpc" ]; then
-    mkdir -p "$KITEX_LOG_DIR/rpc"
-fi
-
-exec "$CURDIR/bin/user"
-
Index: kitex_gen/relation/relation.pb.go
===================================================================
diff --git a/kitex_gen/relation/relation.pb.go b/kitex_gen/relation/relation.pb.go
--- a/kitex_gen/relation/relation.pb.go	
+++ b/kitex_gen/relation/relation.pb.go	
@@ -1,862 +1,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.1
-// 	protoc        v3.17.2
-// source: relation.proto
-
-package relation
-
-import (
-	context "context"
-	user "dousheng/kitex_gen/user"
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinRelationActionRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                              // 用户鉴权token
-	ToUserId   int64  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`     // 对方用户id
-	ActionType int32  `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // 1-关注，2-取消关注
-}
-
-func (x *DouyinRelationActionRequest) Reset() {
-	*x = DouyinRelationActionRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationActionRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationActionRequest) ProtoMessage() {}
-
-func (x *DouyinRelationActionRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationActionRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationActionRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinRelationActionRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinRelationActionRequest) GetToUserId() int64 {
-	if x != nil {
-		return x.ToUserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationActionRequest) GetActionType() int32 {
-	if x != nil {
-		return x.ActionType
-	}
-	return 0
-}
-
-type DouyinRelationActionResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-}
-
-func (x *DouyinRelationActionResponse) Reset() {
-	*x = DouyinRelationActionResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationActionResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationActionResponse) ProtoMessage() {}
-
-func (x *DouyinRelationActionResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationActionResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationActionResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinRelationActionResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationActionResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-type DouyinRelationFollowListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinRelationFollowListRequest) Reset() {
-	*x = DouyinRelationFollowListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowListRequest) ProtoMessage() {}
-
-func (x *DouyinRelationFollowListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowListRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinRelationFollowListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinRelationFollowListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32        `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string      `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserList   []*user.User `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`          // 用户信息列表
-}
-
-func (x *DouyinRelationFollowListResponse) Reset() {
-	*x = DouyinRelationFollowListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowListResponse) ProtoMessage() {}
-
-func (x *DouyinRelationFollowListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowListResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinRelationFollowListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinRelationFollowListResponse) GetUserList() []*user.User {
-	if x != nil {
-		return x.UserList
-	}
-	return nil
-}
-
-type DouyinRelationFollowerListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinRelationFollowerListRequest) Reset() {
-	*x = DouyinRelationFollowerListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowerListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowerListRequest) ProtoMessage() {}
-
-func (x *DouyinRelationFollowerListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowerListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowerListRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *DouyinRelationFollowerListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowerListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinRelationFollowerListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32        `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string      `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserList   []*user.User `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`          // 用户列表
-}
-
-func (x *DouyinRelationFollowerListResponse) Reset() {
-	*x = DouyinRelationFollowerListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowerListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowerListResponse) ProtoMessage() {}
-
-func (x *DouyinRelationFollowerListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowerListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowerListResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{5}
-}
-
-func (x *DouyinRelationFollowerListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowerListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinRelationFollowerListResponse) GetUserList() []*user.User {
-	if x != nil {
-		return x.UserList
-	}
-	return nil
-}
-
-type DouyinRelationFriendListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinRelationFriendListRequest) Reset() {
-	*x = DouyinRelationFriendListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFriendListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFriendListRequest) ProtoMessage() {}
-
-func (x *DouyinRelationFriendListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFriendListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFriendListRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{6}
-}
-
-func (x *DouyinRelationFriendListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationFriendListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinRelationFriendListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32         `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string       `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserList   []*FriendUser `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`          // 用户列表
-}
-
-func (x *DouyinRelationFriendListResponse) Reset() {
-	*x = DouyinRelationFriendListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[7]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFriendListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFriendListResponse) ProtoMessage() {}
-
-func (x *DouyinRelationFriendListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[7]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFriendListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFriendListResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{7}
-}
-
-func (x *DouyinRelationFriendListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationFriendListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinRelationFriendListResponse) GetUserList() []*FriendUser {
-	if x != nil {
-		return x.UserList
-	}
-	return nil
-}
-
-type FriendUser struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	User    *user.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
-	Message *string    `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"` // 和该好友的最新聊天消息
-	MsgType int64      `protobuf:"varint,3,opt,name=msgType,proto3" json:"msgType,omitempty"`      // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
-}
-
-func (x *FriendUser) Reset() {
-	*x = FriendUser{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[8]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *FriendUser) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*FriendUser) ProtoMessage() {}
-
-func (x *FriendUser) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[8]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use FriendUser.ProtoReflect.Descriptor instead.
-func (*FriendUser) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{8}
-}
-
-func (x *FriendUser) GetUser() *user.User {
-	if x != nil {
-		return x.User
-	}
-	return nil
-}
-
-func (x *FriendUser) GetMessage() string {
-	if x != nil && x.Message != nil {
-		return *x.Message
-	}
-	return ""
-}
-
-func (x *FriendUser) GetMsgType() int64 {
-	if x != nil {
-		return x.MsgType
-	}
-	return 0
-}
-
-var File_relation_proto protoreflect.FileDescriptor
-
-var file_relation_proto_rawDesc = []byte{
-	0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
-	0x12, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72,
-	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x1e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
-	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
-	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
-	0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
-	0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
-	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
-	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a,
-	0x1f, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
-	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
-	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
-	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
-	0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
-	0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x5f, 0x6d, 0x73, 0x67, 0x22, 0x54, 0x0a, 0x23, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c,
-	0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
-	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
-	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
-	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x24, 0x64,
-	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
-	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73,
-	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
-	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67,
-	0x22, 0x56, 0x0a, 0x25, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
-	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
-	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
-	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
-	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
-	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x26, 0x64, 0x6f, 0x75,
-	0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c,
-	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73,
-	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
-	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67,
-	0x22, 0x54, 0x0a, 0x23, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
-	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
-	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
-	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
-	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
-	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x24, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e,
-	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
-	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
-	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
-	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
-	0x67, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
-	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
-	0x6f, 0x6e, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75,
-	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x71, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
-	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
-	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
-	0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
-	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
-	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a,
-	0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xaf, 0x03, 0x0a, 0x0b, 0x52, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x76, 0x72, 0x12, 0x5a, 0x0a, 0x03, 0x53, 0x75, 0x62,
-	0x12, 0x28, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79,
-	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69,
-	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x6c,
-	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c,
-	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73,
-	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74,
-	0x12, 0x2d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79,
-	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c,
-	0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
-	0x2e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
-	0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
-	0x6d, 0x0a, 0x08, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
-	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
-	0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c,
-	0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69,
-	0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x64,
-	0x6f, 0x75, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65,
-	0x6e, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
-	0x6f, 0x33,
-}
-
-var (
-	file_relation_proto_rawDescOnce sync.Once
-	file_relation_proto_rawDescData = file_relation_proto_rawDesc
-)
-
-func file_relation_proto_rawDescGZIP() []byte {
-	file_relation_proto_rawDescOnce.Do(func() {
-		file_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_relation_proto_rawDescData)
-	})
-	return file_relation_proto_rawDescData
-}
-
-var file_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
-var file_relation_proto_goTypes = []interface{}{
-	(*DouyinRelationActionRequest)(nil),        // 0: relation.douyin_relation_action_request
-	(*DouyinRelationActionResponse)(nil),       // 1: relation.douyin_relation_action_response
-	(*DouyinRelationFollowListRequest)(nil),    // 2: relation.douyin_relation_follow_list_request
-	(*DouyinRelationFollowListResponse)(nil),   // 3: relation.douyin_relation_follow_list_response
-	(*DouyinRelationFollowerListRequest)(nil),  // 4: relation.douyin_relation_follower_list_request
-	(*DouyinRelationFollowerListResponse)(nil), // 5: relation.douyin_relation_follower_list_response
-	(*DouyinRelationFriendListRequest)(nil),    // 6: relation.douyin_relation_friend_list_request
-	(*DouyinRelationFriendListResponse)(nil),   // 7: relation.douyin_relation_friend_list_response
-	(*FriendUser)(nil),                         // 8: relation.FriendUser
-	(*user.User)(nil),                          // 9: user.User
-}
-var file_relation_proto_depIdxs = []int32{
-	9, // 0: relation.douyin_relation_follow_list_response.user_list:type_name -> user.User
-	9, // 1: relation.douyin_relation_follower_list_response.user_list:type_name -> user.User
-	8, // 2: relation.douyin_relation_friend_list_response.user_list:type_name -> relation.FriendUser
-	9, // 3: relation.FriendUser.user:type_name -> user.User
-	0, // 4: relation.RelationSvr.Sub:input_type -> relation.douyin_relation_action_request
-	2, // 5: relation.RelationSvr.SubList:input_type -> relation.douyin_relation_follow_list_request
-	4, // 6: relation.RelationSvr.FansList:input_type -> relation.douyin_relation_follower_list_request
-	6, // 7: relation.RelationSvr.FriendList:input_type -> relation.douyin_relation_friend_list_request
-	1, // 8: relation.RelationSvr.Sub:output_type -> relation.douyin_relation_action_response
-	3, // 9: relation.RelationSvr.SubList:output_type -> relation.douyin_relation_follow_list_response
-	5, // 10: relation.RelationSvr.FansList:output_type -> relation.douyin_relation_follower_list_response
-	7, // 11: relation.RelationSvr.FriendList:output_type -> relation.douyin_relation_friend_list_response
-	8, // [8:12] is the sub-list for method output_type
-	4, // [4:8] is the sub-list for method input_type
-	4, // [4:4] is the sub-list for extension type_name
-	4, // [4:4] is the sub-list for extension extendee
-	0, // [0:4] is the sub-list for field type_name
-}
-
-func init() { file_relation_proto_init() }
-func file_relation_proto_init() {
-	if File_relation_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_relation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationActionRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationActionResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowerListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowerListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFriendListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFriendListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*FriendUser); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_relation_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[5].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[7].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[8].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_relation_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   9,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_relation_proto_goTypes,
-		DependencyIndexes: file_relation_proto_depIdxs,
-		MessageInfos:      file_relation_proto_msgTypes,
-	}.Build()
-	File_relation_proto = out.File
-	file_relation_proto_rawDesc = nil
-	file_relation_proto_goTypes = nil
-	file_relation_proto_depIdxs = nil
-}
-
-var _ context.Context
-
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-type RelationSvr interface {
-	Sub(ctx context.Context, req *DouyinRelationActionRequest) (res *DouyinRelationActionResponse, err error)
-	SubList(ctx context.Context, req *DouyinRelationFollowListRequest) (res *DouyinRelationFollowListResponse, err error)
-	FansList(ctx context.Context, req *DouyinRelationFollowerListRequest) (res *DouyinRelationFollowerListResponse, err error)
-	FriendList(ctx context.Context, req *DouyinRelationFriendListRequest) (res *DouyinRelationFriendListResponse, err error)
-}
Index: kitex_gen/relation/relation.pb.fast.go
===================================================================
diff --git a/kitex_gen/relation/relation.pb.fast.go b/kitex_gen/relation/relation.pb.fast.go
--- a/kitex_gen/relation/relation.pb.fast.go	
+++ b/kitex_gen/relation/relation.pb.fast.go	
@@ -1,1008 +1,0 @@
-// Code generated by Fastpb v0.0.2. DO NOT EDIT.
-
-package relation
-
-import (
-	user "dousheng/kitex_gen/user"
-	fmt "fmt"
-	fastpb "github.com/cloudwego/fastpb"
-)
-
-var (
-	_ = fmt.Errorf
-	_ = fastpb.Skip
-)
-
-func (x *DouyinRelationActionRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationActionRequest[number], err)
-}
-
-func (x *DouyinRelationActionRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.ToUserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.ActionType, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationActionResponse[number], err)
-}
-
-func (x *DouyinRelationActionResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowListRequest[number], err)
-}
-
-func (x *DouyinRelationFollowListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowListResponse[number], err)
-}
-
-func (x *DouyinRelationFollowListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.UserList = append(x.UserList, &v)
-	return offset, nil
-}
-
-func (x *DouyinRelationFollowerListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowerListRequest[number], err)
-}
-
-func (x *DouyinRelationFollowerListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowerListResponse[number], err)
-}
-
-func (x *DouyinRelationFollowerListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.UserList = append(x.UserList, &v)
-	return offset, nil
-}
-
-func (x *DouyinRelationFriendListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFriendListRequest[number], err)
-}
-
-func (x *DouyinRelationFriendListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFriendListResponse[number], err)
-}
-
-func (x *DouyinRelationFriendListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v FriendUser
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.UserList = append(x.UserList, &v)
-	return offset, nil
-}
-
-func (x *FriendUser) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_FriendUser[number], err)
-}
-
-func (x *FriendUser) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.User = &v
-	return offset, nil
-}
-
-func (x *FriendUser) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.Message = &tmp
-	return offset, err
-}
-
-func (x *FriendUser) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.MsgType, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.ToUserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.ToUserId)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField3(buf []byte) (offset int) {
-	if x.ActionType == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 3, x.ActionType)
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFollowListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinRelationFollowListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserList == nil {
-		return offset
-	}
-	for i := range x.UserList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.UserList[i])
-	}
-	return offset
-}
-
-func (x *DouyinRelationFollowerListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowerListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserList == nil {
-		return offset
-	}
-	for i := range x.UserList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.UserList[i])
-	}
-	return offset
-}
-
-func (x *DouyinRelationFriendListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFriendListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinRelationFriendListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserList == nil {
-		return offset
-	}
-	for i := range x.UserList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.UserList[i])
-	}
-	return offset
-}
-
-func (x *FriendUser) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *FriendUser) fastWriteField1(buf []byte) (offset int) {
-	if x.User == nil {
-		return offset
-	}
-	offset += fastpb.WriteMessage(buf[offset:], 1, x.User)
-	return offset
-}
-
-func (x *FriendUser) fastWriteField2(buf []byte) (offset int) {
-	if x.Message == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.Message)
-	return offset
-}
-
-func (x *FriendUser) fastWriteField3(buf []byte) (offset int) {
-	if x.MsgType == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, x.MsgType)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField2() (n int) {
-	if x.ToUserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.ToUserId)
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField3() (n int) {
-	if x.ActionType == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(3, x.ActionType)
-	return n
-}
-
-func (x *DouyinRelationActionResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationActionResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationActionResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFollowListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationFollowListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinRelationFollowListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) sizeField3() (n int) {
-	if x.UserList == nil {
-		return n
-	}
-	for i := range x.UserList {
-		n += fastpb.SizeMessage(3, x.UserList[i])
-	}
-	return n
-}
-
-func (x *DouyinRelationFollowerListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationFollowerListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinRelationFollowerListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) sizeField3() (n int) {
-	if x.UserList == nil {
-		return n
-	}
-	for i := range x.UserList {
-		n += fastpb.SizeMessage(3, x.UserList[i])
-	}
-	return n
-}
-
-func (x *DouyinRelationFriendListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationFriendListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinRelationFriendListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) sizeField3() (n int) {
-	if x.UserList == nil {
-		return n
-	}
-	for i := range x.UserList {
-		n += fastpb.SizeMessage(3, x.UserList[i])
-	}
-	return n
-}
-
-func (x *FriendUser) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *FriendUser) sizeField1() (n int) {
-	if x.User == nil {
-		return n
-	}
-	n += fastpb.SizeMessage(1, x.User)
-	return n
-}
-
-func (x *FriendUser) sizeField2() (n int) {
-	if x.Message == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.Message)
-	return n
-}
-
-func (x *FriendUser) sizeField3() (n int) {
-	if x.MsgType == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(3, x.MsgType)
-	return n
-}
-
-var fieldIDToName_DouyinRelationActionRequest = map[int32]string{
-	1: "Token",
-	2: "ToUserId",
-	3: "ActionType",
-}
-
-var fieldIDToName_DouyinRelationActionResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-}
-
-var fieldIDToName_DouyinRelationFollowListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinRelationFollowListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserList",
-}
-
-var fieldIDToName_DouyinRelationFollowerListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinRelationFollowerListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserList",
-}
-
-var fieldIDToName_DouyinRelationFriendListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinRelationFriendListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserList",
-}
-
-var fieldIDToName_FriendUser = map[int32]string{
-	1: "User",
-	2: "Message",
-	3: "MsgType",
-}
-
-var _ = user.File_user_proto
Index: kitex_gen/user/user.pb.go
===================================================================
diff --git a/kitex_gen/user/user.pb.go b/kitex_gen/user/user.pb.go
--- a/kitex_gen/user/user.pb.go	
+++ b/kitex_gen/user/user.pb.go	
@@ -1,713 +1,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.1
-// 	protoc        v3.17.2
-// source: user.proto
-
-package user
-
-import (
-	context "context"
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinUserRegisterRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 注册用户名，最长32个字符
-	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码，最长32个字符
-}
-
-func (x *DouyinUserRegisterRequest) Reset() {
-	*x = DouyinUserRegisterRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserRegisterRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserRegisterRequest) ProtoMessage() {}
-
-func (x *DouyinUserRegisterRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserRegisterRequest.ProtoReflect.Descriptor instead.
-func (*DouyinUserRegisterRequest) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinUserRegisterRequest) GetUsername() string {
-	if x != nil {
-		return x.Username
-	}
-	return ""
-}
-
-func (x *DouyinUserRegisterRequest) GetPassword() string {
-	if x != nil {
-		return x.Password
-	}
-	return ""
-}
-
-type DouyinUserRegisterResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserId     int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 用户id
-	Token      string  `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                                // 用户鉴权token
-}
-
-func (x *DouyinUserRegisterResponse) Reset() {
-	*x = DouyinUserRegisterResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserRegisterResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserRegisterResponse) ProtoMessage() {}
-
-func (x *DouyinUserRegisterResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserRegisterResponse.ProtoReflect.Descriptor instead.
-func (*DouyinUserRegisterResponse) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinUserRegisterResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinUserRegisterResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinUserRegisterResponse) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinUserRegisterResponse) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinUserLoginRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 登录用户名
-	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 登录密码
-}
-
-func (x *DouyinUserLoginRequest) Reset() {
-	*x = DouyinUserLoginRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserLoginRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserLoginRequest) ProtoMessage() {}
-
-func (x *DouyinUserLoginRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserLoginRequest.ProtoReflect.Descriptor instead.
-func (*DouyinUserLoginRequest) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinUserLoginRequest) GetUsername() string {
-	if x != nil {
-		return x.Username
-	}
-	return ""
-}
-
-func (x *DouyinUserLoginRequest) GetPassword() string {
-	if x != nil {
-		return x.Password
-	}
-	return ""
-}
-
-type DouyinUserLoginResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserId     int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 用户id
-	Token      string  `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                                // 用户鉴权token
-}
-
-func (x *DouyinUserLoginResponse) Reset() {
-	*x = DouyinUserLoginResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserLoginResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserLoginResponse) ProtoMessage() {}
-
-func (x *DouyinUserLoginResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserLoginResponse.ProtoReflect.Descriptor instead.
-func (*DouyinUserLoginResponse) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinUserLoginResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinUserLoginResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinUserLoginResponse) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinUserLoginResponse) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinUserRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinUserRequest) Reset() {
-	*x = DouyinUserRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserRequest) ProtoMessage() {}
-
-func (x *DouyinUserRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserRequest.ProtoReflect.Descriptor instead.
-func (*DouyinUserRequest) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *DouyinUserRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinUserRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinUserResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	User       *User   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                  // 用户信息
-}
-
-func (x *DouyinUserResponse) Reset() {
-	*x = DouyinUserResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserResponse) ProtoMessage() {}
-
-func (x *DouyinUserResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserResponse.ProtoReflect.Descriptor instead.
-func (*DouyinUserResponse) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{5}
-}
-
-func (x *DouyinUserResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinUserResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinUserResponse) GetUser() *User {
-	if x != nil {
-		return x.User
-	}
-	return nil
-}
-
-type User struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // 用户id
-	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                               // 用户名称
-	FollowCount   *int64 `protobuf:"varint,3,opt,name=follow_count,json=followCount,proto3,oneof" json:"follow_count,omitempty"`       // 关注总数
-	FollowerCount *int64 `protobuf:"varint,4,opt,name=follower_count,json=followerCount,proto3,oneof" json:"follower_count,omitempty"` // 粉丝总数
-	IsFollow      bool   `protobuf:"varint,5,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`                      // true-已关注，false-未关注
-}
-
-func (x *User) Reset() {
-	*x = User{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *User) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*User) ProtoMessage() {}
-
-func (x *User) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use User.ProtoReflect.Descriptor instead.
-func (*User) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{6}
-}
-
-func (x *User) GetId() int64 {
-	if x != nil {
-		return x.Id
-	}
-	return 0
-}
-
-func (x *User) GetName() string {
-	if x != nil {
-		return x.Name
-	}
-	return ""
-}
-
-func (x *User) GetFollowCount() int64 {
-	if x != nil && x.FollowCount != nil {
-		return *x.FollowCount
-	}
-	return 0
-}
-
-func (x *User) GetFollowerCount() int64 {
-	if x != nil && x.FollowerCount != nil {
-		return *x.FollowerCount
-	}
-	return 0
-}
-
-func (x *User) GetIsFollow() bool {
-	if x != nil {
-		return x.IsFollow
-	}
-	return false
-}
-
-var File_user_proto protoreflect.FileDescriptor
-
-var file_user_proto_rawDesc = []byte{
-	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
-	0x65, 0x72, 0x22, 0x56, 0x0a, 0x1c, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65,
-	0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
-	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1d, 0x64,
-	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
-	0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
-	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
-	0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
-	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
-	0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01,
-	0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
-	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
-	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
-	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22,
-	0x53, 0x0a, 0x19, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c,
-	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
-	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
-	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
-	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
-	0x77, 0x6f, 0x72, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f,
-	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
-	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
-	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x44, 0x0a, 0x13, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
-	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
-	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8a, 0x01, 0x0a,
-	0x14, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
-	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
-	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74,
-	0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73,
-	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
-	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0xbf, 0x01, 0x0a, 0x04, 0x55, 0x73,
-	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
-	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
-	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b,
-	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a,
-	0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
-	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
-	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
-	0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
-	0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x66, 0x6f, 0x6c, 0x6c,
-	0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x66, 0x6f, 0x6c,
-	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xec, 0x01, 0x0a, 0x07,
-	0x55, 0x73, 0x65, 0x72, 0x53, 0x76, 0x72, 0x12, 0x53, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
-	0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
-	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64,
-	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
-	0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05,
-	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75,
-	0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f,
-	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
-	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42,
-	0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
-	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65,
-	0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x64, 0x6f,
-	0x75, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e,
-	0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
-}
-
-var (
-	file_user_proto_rawDescOnce sync.Once
-	file_user_proto_rawDescData = file_user_proto_rawDesc
-)
-
-func file_user_proto_rawDescGZIP() []byte {
-	file_user_proto_rawDescOnce.Do(func() {
-		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
-	})
-	return file_user_proto_rawDescData
-}
-
-var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
-var file_user_proto_goTypes = []interface{}{
-	(*DouyinUserRegisterRequest)(nil),  // 0: user.douyin_user_register_request
-	(*DouyinUserRegisterResponse)(nil), // 1: user.douyin_user_register_response
-	(*DouyinUserLoginRequest)(nil),     // 2: user.douyin_user_login_request
-	(*DouyinUserLoginResponse)(nil),    // 3: user.douyin_user_login_response
-	(*DouyinUserRequest)(nil),          // 4: user.douyin_user_request
-	(*DouyinUserResponse)(nil),         // 5: user.douyin_user_response
-	(*User)(nil),                       // 6: user.User
-}
-var file_user_proto_depIdxs = []int32{
-	6, // 0: user.douyin_user_response.user:type_name -> user.User
-	0, // 1: user.UserSvr.Register:input_type -> user.douyin_user_register_request
-	2, // 2: user.UserSvr.Login:input_type -> user.douyin_user_login_request
-	4, // 3: user.UserSvr.GetById:input_type -> user.douyin_user_request
-	1, // 4: user.UserSvr.Register:output_type -> user.douyin_user_register_response
-	3, // 5: user.UserSvr.Login:output_type -> user.douyin_user_login_response
-	5, // 6: user.UserSvr.GetById:output_type -> user.douyin_user_response
-	4, // [4:7] is the sub-list for method output_type
-	1, // [1:4] is the sub-list for method input_type
-	1, // [1:1] is the sub-list for extension type_name
-	1, // [1:1] is the sub-list for extension extendee
-	0, // [0:1] is the sub-list for field type_name
-}
-
-func init() { file_user_proto_init() }
-func file_user_proto_init() {
-	if File_user_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserRegisterRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserRegisterResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserLoginRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserLoginResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*User); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_user_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_user_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_user_proto_msgTypes[5].OneofWrappers = []interface{}{}
-	file_user_proto_msgTypes[6].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_user_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   7,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_user_proto_goTypes,
-		DependencyIndexes: file_user_proto_depIdxs,
-		MessageInfos:      file_user_proto_msgTypes,
-	}.Build()
-	File_user_proto = out.File
-	file_user_proto_rawDesc = nil
-	file_user_proto_goTypes = nil
-	file_user_proto_depIdxs = nil
-}
-
-var _ context.Context
-
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-type UserSvr interface {
-	Register(ctx context.Context, req *DouyinUserRegisterRequest) (res *DouyinUserRegisterResponse, err error)
-	Login(ctx context.Context, req *DouyinUserLoginRequest) (res *DouyinUserLoginResponse, err error)
-	GetById(ctx context.Context, req *DouyinUserRequest) (res *DouyinUserResponse, err error)
-}
Index: kitex_gen/user/user.pb.fast.go
===================================================================
diff --git a/kitex_gen/user/user.pb.fast.go b/kitex_gen/user/user.pb.fast.go
--- a/kitex_gen/user/user.pb.fast.go	
+++ b/kitex_gen/user/user.pb.fast.go	
@@ -1,885 +1,0 @@
-// Code generated by Fastpb v0.0.2. DO NOT EDIT.
-
-package user
-
-import (
-	fmt "fmt"
-	fastpb "github.com/cloudwego/fastpb"
-)
-
-var (
-	_ = fmt.Errorf
-	_ = fastpb.Skip
-)
-
-func (x *DouyinUserRegisterRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserRegisterRequest[number], err)
-}
-
-func (x *DouyinUserRegisterRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Username, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Password, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserRegisterResponse[number], err)
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserLoginRequest[number], err)
-}
-
-func (x *DouyinUserLoginRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Username, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Password, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserLoginResponse[number], err)
-}
-
-func (x *DouyinUserLoginResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserRequest[number], err)
-}
-
-func (x *DouyinUserRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserResponse[number], err)
-}
-
-func (x *DouyinUserResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinUserResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.User = &v
-	return offset, nil
-}
-
-func (x *User) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 5:
-		offset, err = x.fastReadField5(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_User[number], err)
-}
-
-func (x *User) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Id, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *User) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Name, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *User) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadInt64(buf, _type)
-	x.FollowCount = &tmp
-	return offset, err
-}
-
-func (x *User) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadInt64(buf, _type)
-	x.FollowerCount = &tmp
-	return offset, err
-}
-
-func (x *User) fastReadField5(buf []byte, _type int8) (offset int, err error) {
-	x.IsFollow, offset, err = fastpb.ReadBool(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserRegisterRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Username == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Username)
-	return offset
-}
-
-func (x *DouyinUserRegisterRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Password == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Password)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, x.UserId)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField4(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.Token)
-	return offset
-}
-
-func (x *DouyinUserLoginRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserLoginRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Username == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Username)
-	return offset
-}
-
-func (x *DouyinUserLoginRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Password == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Password)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, x.UserId)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField4(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.Token)
-	return offset
-}
-
-func (x *DouyinUserRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinUserRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinUserResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinUserResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinUserResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.User == nil {
-		return offset
-	}
-	offset += fastpb.WriteMessage(buf[offset:], 3, x.User)
-	return offset
-}
-
-func (x *User) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	offset += x.fastWriteField5(buf[offset:])
-	return offset
-}
-
-func (x *User) fastWriteField1(buf []byte) (offset int) {
-	if x.Id == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.Id)
-	return offset
-}
-
-func (x *User) fastWriteField2(buf []byte) (offset int) {
-	if x.Name == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Name)
-	return offset
-}
-
-func (x *User) fastWriteField3(buf []byte) (offset int) {
-	if x.FollowCount == nil {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, *x.FollowCount)
-	return offset
-}
-
-func (x *User) fastWriteField4(buf []byte) (offset int) {
-	if x.FollowerCount == nil {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 4, *x.FollowerCount)
-	return offset
-}
-
-func (x *User) fastWriteField5(buf []byte) (offset int) {
-	if !x.IsFollow {
-		return offset
-	}
-	offset += fastpb.WriteBool(buf[offset:], 5, x.IsFollow)
-	return offset
-}
-
-func (x *DouyinUserRegisterRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinUserRegisterRequest) sizeField1() (n int) {
-	if x.Username == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Username)
-	return n
-}
-
-func (x *DouyinUserRegisterRequest) sizeField2() (n int) {
-	if x.Password == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Password)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField3() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(3, x.UserId)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField4() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.Token)
-	return n
-}
-
-func (x *DouyinUserLoginRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinUserLoginRequest) sizeField1() (n int) {
-	if x.Username == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Username)
-	return n
-}
-
-func (x *DouyinUserLoginRequest) sizeField2() (n int) {
-	if x.Password == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Password)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField3() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(3, x.UserId)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField4() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.Token)
-	return n
-}
-
-func (x *DouyinUserRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinUserRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinUserRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinUserResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinUserResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinUserResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinUserResponse) sizeField3() (n int) {
-	if x.User == nil {
-		return n
-	}
-	n += fastpb.SizeMessage(3, x.User)
-	return n
-}
-
-func (x *User) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	n += x.sizeField5()
-	return n
-}
-
-func (x *User) sizeField1() (n int) {
-	if x.Id == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.Id)
-	return n
-}
-
-func (x *User) sizeField2() (n int) {
-	if x.Name == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Name)
-	return n
-}
-
-func (x *User) sizeField3() (n int) {
-	if x.FollowCount == nil {
-		return n
-	}
-	n += fastpb.SizeInt64(3, *x.FollowCount)
-	return n
-}
-
-func (x *User) sizeField4() (n int) {
-	if x.FollowerCount == nil {
-		return n
-	}
-	n += fastpb.SizeInt64(4, *x.FollowerCount)
-	return n
-}
-
-func (x *User) sizeField5() (n int) {
-	if !x.IsFollow {
-		return n
-	}
-	n += fastpb.SizeBool(5, x.IsFollow)
-	return n
-}
-
-var fieldIDToName_DouyinUserRegisterRequest = map[int32]string{
-	1: "Username",
-	2: "Password",
-}
-
-var fieldIDToName_DouyinUserRegisterResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserId",
-	4: "Token",
-}
-
-var fieldIDToName_DouyinUserLoginRequest = map[int32]string{
-	1: "Username",
-	2: "Password",
-}
-
-var fieldIDToName_DouyinUserLoginResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserId",
-	4: "Token",
-}
-
-var fieldIDToName_DouyinUserRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinUserResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "User",
-}
-
-var fieldIDToName_User = map[int32]string{
-	1: "Id",
-	2: "Name",
-	3: "FollowCount",
-	4: "FollowerCount",
-	5: "IsFollow",
-}
Index: kitex_gen/user/usersvr/usersvr.go
===================================================================
diff --git a/kitex_gen/user/usersvr/usersvr.go b/kitex_gen/user/usersvr/usersvr.go
--- a/kitex_gen/user/usersvr/usersvr.go	
+++ b/kitex_gen/user/usersvr/usersvr.go	
@@ -1,516 +1,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package usersvr
-
-import (
-	"context"
-	user "dousheng/kitex_gen/user"
-	"fmt"
-	client "github.com/cloudwego/kitex/client"
-	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
-	streaming "github.com/cloudwego/kitex/pkg/streaming"
-	proto "google.golang.org/protobuf/proto"
-)
-
-func serviceInfo() *kitex.ServiceInfo {
-	return userSvrServiceInfo
-}
-
-var userSvrServiceInfo = NewServiceInfo()
-
-func NewServiceInfo() *kitex.ServiceInfo {
-	serviceName := "UserSvr"
-	handlerType := (*user.UserSvr)(nil)
-	methods := map[string]kitex.MethodInfo{
-		"Register": kitex.NewMethodInfo(registerHandler, newRegisterArgs, newRegisterResult, false),
-		"Login":    kitex.NewMethodInfo(loginHandler, newLoginArgs, newLoginResult, false),
-		"GetById":  kitex.NewMethodInfo(getByIdHandler, newGetByIdArgs, newGetByIdResult, false),
-	}
-	extra := map[string]interface{}{
-		"PackageName": "user",
-	}
-	svcInfo := &kitex.ServiceInfo{
-		ServiceName:     serviceName,
-		HandlerType:     handlerType,
-		Methods:         methods,
-		PayloadCodec:    kitex.Protobuf,
-		KiteXGenVersion: "v0.4.4",
-		Extra:           extra,
-	}
-	return svcInfo
-}
-
-func registerHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(user.DouyinUserRegisterRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(user.UserSvr).Register(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *RegisterArgs:
-		success, err := handler.(user.UserSvr).Register(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*RegisterResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newRegisterArgs() interface{} {
-	return &RegisterArgs{}
-}
-
-func newRegisterResult() interface{} {
-	return &RegisterResult{}
-}
-
-type RegisterArgs struct {
-	Req *user.DouyinUserRegisterRequest
-}
-
-func (p *RegisterArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(user.DouyinUserRegisterRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *RegisterArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *RegisterArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *RegisterArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in RegisterArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *RegisterArgs) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserRegisterRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var RegisterArgs_Req_DEFAULT *user.DouyinUserRegisterRequest
-
-func (p *RegisterArgs) GetReq() *user.DouyinUserRegisterRequest {
-	if !p.IsSetReq() {
-		return RegisterArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *RegisterArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type RegisterResult struct {
-	Success *user.DouyinUserRegisterResponse
-}
-
-var RegisterResult_Success_DEFAULT *user.DouyinUserRegisterResponse
-
-func (p *RegisterResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(user.DouyinUserRegisterResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *RegisterResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *RegisterResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *RegisterResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in RegisterResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *RegisterResult) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserRegisterResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *RegisterResult) GetSuccess() *user.DouyinUserRegisterResponse {
-	if !p.IsSetSuccess() {
-		return RegisterResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *RegisterResult) SetSuccess(x interface{}) {
-	p.Success = x.(*user.DouyinUserRegisterResponse)
-}
-
-func (p *RegisterResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func loginHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(user.DouyinUserLoginRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(user.UserSvr).Login(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *LoginArgs:
-		success, err := handler.(user.UserSvr).Login(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*LoginResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newLoginArgs() interface{} {
-	return &LoginArgs{}
-}
-
-func newLoginResult() interface{} {
-	return &LoginResult{}
-}
-
-type LoginArgs struct {
-	Req *user.DouyinUserLoginRequest
-}
-
-func (p *LoginArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(user.DouyinUserLoginRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *LoginArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *LoginArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *LoginArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in LoginArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *LoginArgs) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserLoginRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var LoginArgs_Req_DEFAULT *user.DouyinUserLoginRequest
-
-func (p *LoginArgs) GetReq() *user.DouyinUserLoginRequest {
-	if !p.IsSetReq() {
-		return LoginArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *LoginArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type LoginResult struct {
-	Success *user.DouyinUserLoginResponse
-}
-
-var LoginResult_Success_DEFAULT *user.DouyinUserLoginResponse
-
-func (p *LoginResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(user.DouyinUserLoginResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *LoginResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *LoginResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *LoginResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in LoginResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *LoginResult) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserLoginResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *LoginResult) GetSuccess() *user.DouyinUserLoginResponse {
-	if !p.IsSetSuccess() {
-		return LoginResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *LoginResult) SetSuccess(x interface{}) {
-	p.Success = x.(*user.DouyinUserLoginResponse)
-}
-
-func (p *LoginResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func getByIdHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(user.DouyinUserRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(user.UserSvr).GetById(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *GetByIdArgs:
-		success, err := handler.(user.UserSvr).GetById(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*GetByIdResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newGetByIdArgs() interface{} {
-	return &GetByIdArgs{}
-}
-
-func newGetByIdResult() interface{} {
-	return &GetByIdResult{}
-}
-
-type GetByIdArgs struct {
-	Req *user.DouyinUserRequest
-}
-
-func (p *GetByIdArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(user.DouyinUserRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *GetByIdArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *GetByIdArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *GetByIdArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in GetByIdArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *GetByIdArgs) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var GetByIdArgs_Req_DEFAULT *user.DouyinUserRequest
-
-func (p *GetByIdArgs) GetReq() *user.DouyinUserRequest {
-	if !p.IsSetReq() {
-		return GetByIdArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *GetByIdArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type GetByIdResult struct {
-	Success *user.DouyinUserResponse
-}
-
-var GetByIdResult_Success_DEFAULT *user.DouyinUserResponse
-
-func (p *GetByIdResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(user.DouyinUserResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *GetByIdResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *GetByIdResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *GetByIdResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in GetByIdResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *GetByIdResult) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *GetByIdResult) GetSuccess() *user.DouyinUserResponse {
-	if !p.IsSetSuccess() {
-		return GetByIdResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *GetByIdResult) SetSuccess(x interface{}) {
-	p.Success = x.(*user.DouyinUserResponse)
-}
-
-func (p *GetByIdResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-type kClient struct {
-	c client.Client
-}
-
-func newServiceClient(c client.Client) *kClient {
-	return &kClient{
-		c: c,
-	}
-}
-
-func (p *kClient) Register(ctx context.Context, Req *user.DouyinUserRegisterRequest) (r *user.DouyinUserRegisterResponse, err error) {
-	var _args RegisterArgs
-	_args.Req = Req
-	var _result RegisterResult
-	if err = p.c.Call(ctx, "Register", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) Login(ctx context.Context, Req *user.DouyinUserLoginRequest) (r *user.DouyinUserLoginResponse, err error) {
-	var _args LoginArgs
-	_args.Req = Req
-	var _result LoginResult
-	if err = p.c.Call(ctx, "Login", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) GetById(ctx context.Context, Req *user.DouyinUserRequest) (r *user.DouyinUserResponse, err error) {
-	var _args GetByIdArgs
-	_args.Req = Req
-	var _result GetByIdResult
-	if err = p.c.Call(ctx, "GetById", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
