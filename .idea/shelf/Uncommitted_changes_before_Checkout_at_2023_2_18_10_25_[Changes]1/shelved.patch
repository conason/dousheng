Index: kitex_gen/video/videosvr/server.go
===================================================================
diff --git a/kitex_gen/video/videosvr/server.go b/kitex_gen/video/videosvr/server.go
deleted file mode 100644
--- a/kitex_gen/video/videosvr/server.go	
+++ /dev/null	
@@ -1,20 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-package videosvr
-
-import (
-	video "dousheng/kitex_gen/video"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewServer creates a server.Server with the given handler and options.
-func NewServer(handler video.VideoSvr, opts ...server.Option) server.Server {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	svr := server.NewServer(options...)
-	if err := svr.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	return svr
-}
Index: kitex_gen/user/usersvr/client.go
===================================================================
diff --git a/kitex_gen/user/usersvr/client.go b/kitex_gen/user/usersvr/client.go
deleted file mode 100644
--- a/kitex_gen/user/usersvr/client.go	
+++ /dev/null	
@@ -1,61 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package usersvr
-
-import (
-	"context"
-	user "dousheng/kitex_gen/user"
-	client "github.com/cloudwego/kitex/client"
-	callopt "github.com/cloudwego/kitex/client/callopt"
-)
-
-// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
-type Client interface {
-	Register(ctx context.Context, Req *user.DouyinUserRegisterRequest, callOptions ...callopt.Option) (r *user.DouyinUserRegisterResponse, err error)
-	Login(ctx context.Context, Req *user.DouyinUserLoginRequest, callOptions ...callopt.Option) (r *user.DouyinUserLoginResponse, err error)
-	GetById(ctx context.Context, Req *user.DouyinUserRequest, callOptions ...callopt.Option) (r *user.DouyinUserResponse, err error)
-}
-
-// NewClient creates a client for the service defined in IDL.
-func NewClient(destService string, opts ...client.Option) (Client, error) {
-	var options []client.Option
-	options = append(options, client.WithDestService(destService))
-
-	options = append(options, opts...)
-
-	kc, err := client.NewClient(serviceInfo(), options...)
-	if err != nil {
-		return nil, err
-	}
-	return &kUserSvrClient{
-		kClient: newServiceClient(kc),
-	}, nil
-}
-
-// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
-func MustNewClient(destService string, opts ...client.Option) Client {
-	kc, err := NewClient(destService, opts...)
-	if err != nil {
-		panic(err)
-	}
-	return kc
-}
-
-type kUserSvrClient struct {
-	*kClient
-}
-
-func (p *kUserSvrClient) Register(ctx context.Context, Req *user.DouyinUserRegisterRequest, callOptions ...callopt.Option) (r *user.DouyinUserRegisterResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.Register(ctx, Req)
-}
-
-func (p *kUserSvrClient) Login(ctx context.Context, Req *user.DouyinUserLoginRequest, callOptions ...callopt.Option) (r *user.DouyinUserLoginResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.Login(ctx, Req)
-}
-
-func (p *kUserSvrClient) GetById(ctx context.Context, Req *user.DouyinUserRequest, callOptions ...callopt.Option) (r *user.DouyinUserResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.GetById(ctx, Req)
-}
Index: kitex_gen/relation/relation.pb.go
===================================================================
diff --git a/kitex_gen/relation/relation.pb.go b/kitex_gen/relation/relation.pb.go
deleted file mode 100644
--- a/kitex_gen/relation/relation.pb.go	
+++ /dev/null	
@@ -1,862 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.1
-// 	protoc        v3.17.2
-// source: relation.proto
-
-package relation
-
-import (
-	context "context"
-	user "dousheng/kitex_gen/user"
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinRelationActionRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                              // 用户鉴权token
-	ToUserId   int64  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`     // 对方用户id
-	ActionType int32  `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // 1-关注，2-取消关注
-}
-
-func (x *DouyinRelationActionRequest) Reset() {
-	*x = DouyinRelationActionRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationActionRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationActionRequest) ProtoMessage() {}
-
-func (x *DouyinRelationActionRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationActionRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationActionRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinRelationActionRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinRelationActionRequest) GetToUserId() int64 {
-	if x != nil {
-		return x.ToUserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationActionRequest) GetActionType() int32 {
-	if x != nil {
-		return x.ActionType
-	}
-	return 0
-}
-
-type DouyinRelationActionResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-}
-
-func (x *DouyinRelationActionResponse) Reset() {
-	*x = DouyinRelationActionResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationActionResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationActionResponse) ProtoMessage() {}
-
-func (x *DouyinRelationActionResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationActionResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationActionResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinRelationActionResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationActionResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-type DouyinRelationFollowListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinRelationFollowListRequest) Reset() {
-	*x = DouyinRelationFollowListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowListRequest) ProtoMessage() {}
-
-func (x *DouyinRelationFollowListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowListRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinRelationFollowListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinRelationFollowListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32        `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string      `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserList   []*user.User `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`          // 用户信息列表
-}
-
-func (x *DouyinRelationFollowListResponse) Reset() {
-	*x = DouyinRelationFollowListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowListResponse) ProtoMessage() {}
-
-func (x *DouyinRelationFollowListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowListResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinRelationFollowListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinRelationFollowListResponse) GetUserList() []*user.User {
-	if x != nil {
-		return x.UserList
-	}
-	return nil
-}
-
-type DouyinRelationFollowerListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinRelationFollowerListRequest) Reset() {
-	*x = DouyinRelationFollowerListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowerListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowerListRequest) ProtoMessage() {}
-
-func (x *DouyinRelationFollowerListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowerListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowerListRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *DouyinRelationFollowerListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowerListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinRelationFollowerListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32        `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string      `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserList   []*user.User `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`          // 用户列表
-}
-
-func (x *DouyinRelationFollowerListResponse) Reset() {
-	*x = DouyinRelationFollowerListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFollowerListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFollowerListResponse) ProtoMessage() {}
-
-func (x *DouyinRelationFollowerListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFollowerListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFollowerListResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{5}
-}
-
-func (x *DouyinRelationFollowerListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationFollowerListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinRelationFollowerListResponse) GetUserList() []*user.User {
-	if x != nil {
-		return x.UserList
-	}
-	return nil
-}
-
-type DouyinRelationFriendListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinRelationFriendListRequest) Reset() {
-	*x = DouyinRelationFriendListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFriendListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFriendListRequest) ProtoMessage() {}
-
-func (x *DouyinRelationFriendListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFriendListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFriendListRequest) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{6}
-}
-
-func (x *DouyinRelationFriendListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationFriendListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinRelationFriendListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32         `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string       `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserList   []*FriendUser `protobuf:"bytes,3,rep,name=user_list,json=userList,proto3" json:"user_list,omitempty"`          // 用户列表
-}
-
-func (x *DouyinRelationFriendListResponse) Reset() {
-	*x = DouyinRelationFriendListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[7]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationFriendListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationFriendListResponse) ProtoMessage() {}
-
-func (x *DouyinRelationFriendListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[7]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationFriendListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationFriendListResponse) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{7}
-}
-
-func (x *DouyinRelationFriendListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationFriendListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinRelationFriendListResponse) GetUserList() []*FriendUser {
-	if x != nil {
-		return x.UserList
-	}
-	return nil
-}
-
-type FriendUser struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	User    *user.User `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
-	Message *string    `protobuf:"bytes,2,opt,name=message,proto3,oneof" json:"message,omitempty"` // 和该好友的最新聊天消息
-	MsgType int64      `protobuf:"varint,3,opt,name=msgType,proto3" json:"msgType,omitempty"`      // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
-}
-
-func (x *FriendUser) Reset() {
-	*x = FriendUser{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_relation_proto_msgTypes[8]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *FriendUser) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*FriendUser) ProtoMessage() {}
-
-func (x *FriendUser) ProtoReflect() protoreflect.Message {
-	mi := &file_relation_proto_msgTypes[8]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use FriendUser.ProtoReflect.Descriptor instead.
-func (*FriendUser) Descriptor() ([]byte, []int) {
-	return file_relation_proto_rawDescGZIP(), []int{8}
-}
-
-func (x *FriendUser) GetUser() *user.User {
-	if x != nil {
-		return x.User
-	}
-	return nil
-}
-
-func (x *FriendUser) GetMessage() string {
-	if x != nil && x.Message != nil {
-		return *x.Message
-	}
-	return ""
-}
-
-func (x *FriendUser) GetMsgType() int64 {
-	if x != nil {
-		return x.MsgType
-	}
-	return 0
-}
-
-var File_relation_proto protoreflect.FileDescriptor
-
-var file_relation_proto_rawDesc = []byte{
-	0x0a, 0x0e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
-	0x12, 0x08, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72,
-	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x75, 0x0a, 0x1e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
-	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65,
-	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c,
-	0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
-	0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
-	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
-	0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a,
-	0x1f, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
-	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
-	0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
-	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64,
-	0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d,
-	0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x5f, 0x6d, 0x73, 0x67, 0x22, 0x54, 0x0a, 0x23, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c,
-	0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75,
-	0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
-	0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20,
-	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa3, 0x01, 0x0a, 0x24, 0x64,
-	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66,
-	0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73,
-	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
-	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67,
-	0x22, 0x56, 0x0a, 0x25, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
-	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
-	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
-	0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
-	0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
-	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa5, 0x01, 0x0a, 0x26, 0x64, 0x6f, 0x75,
-	0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c,
-	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x27, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73,
-	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
-	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67,
-	0x22, 0x54, 0x0a, 0x23, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74,
-	0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
-	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
-	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
-	0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
-	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xad, 0x01, 0x0a, 0x24, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e,
-	0x64, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
-	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
-	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
-	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
-	0x67, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x69, 0x73,
-	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69,
-	0x6f, 0x6e, 0x2e, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x52, 0x08, 0x75,
-	0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x71, 0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
-	0x55, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01,
-	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04,
-	0x75, 0x73, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
-	0x88, 0x01, 0x01, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03,
-	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x6d, 0x73, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x0a, 0x0a,
-	0x08, 0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x32, 0xaf, 0x03, 0x0a, 0x0b, 0x52, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x76, 0x72, 0x12, 0x5a, 0x0a, 0x03, 0x53, 0x75, 0x62,
-	0x12, 0x28, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79,
-	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69,
-	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x72, 0x65, 0x6c,
-	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c,
-	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73,
-	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x07, 0x53, 0x75, 0x62, 0x4c, 0x69, 0x73, 0x74,
-	0x12, 0x2d, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79,
-	0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c,
-	0x6f, 0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
-	0x2e, 0x2e, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f,
-	0x77, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
-	0x6d, 0x0a, 0x08, 0x46, 0x61, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f,
-	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x30, 0x2e, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6b,
-	0x0a, 0x0a, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2d, 0x2e, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c,
-	0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2e, 0x2e, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65,
-	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x5f, 0x6c, 0x69,
-	0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x64,
-	0x6f, 0x75, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65,
-	0x6e, 0x2f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
-	0x6f, 0x33,
-}
-
-var (
-	file_relation_proto_rawDescOnce sync.Once
-	file_relation_proto_rawDescData = file_relation_proto_rawDesc
-)
-
-func file_relation_proto_rawDescGZIP() []byte {
-	file_relation_proto_rawDescOnce.Do(func() {
-		file_relation_proto_rawDescData = protoimpl.X.CompressGZIP(file_relation_proto_rawDescData)
-	})
-	return file_relation_proto_rawDescData
-}
-
-var file_relation_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
-var file_relation_proto_goTypes = []interface{}{
-	(*DouyinRelationActionRequest)(nil),        // 0: relation.douyin_relation_action_request
-	(*DouyinRelationActionResponse)(nil),       // 1: relation.douyin_relation_action_response
-	(*DouyinRelationFollowListRequest)(nil),    // 2: relation.douyin_relation_follow_list_request
-	(*DouyinRelationFollowListResponse)(nil),   // 3: relation.douyin_relation_follow_list_response
-	(*DouyinRelationFollowerListRequest)(nil),  // 4: relation.douyin_relation_follower_list_request
-	(*DouyinRelationFollowerListResponse)(nil), // 5: relation.douyin_relation_follower_list_response
-	(*DouyinRelationFriendListRequest)(nil),    // 6: relation.douyin_relation_friend_list_request
-	(*DouyinRelationFriendListResponse)(nil),   // 7: relation.douyin_relation_friend_list_response
-	(*FriendUser)(nil),                         // 8: relation.FriendUser
-	(*user.User)(nil),                          // 9: user.User
-}
-var file_relation_proto_depIdxs = []int32{
-	9, // 0: relation.douyin_relation_follow_list_response.user_list:type_name -> user.User
-	9, // 1: relation.douyin_relation_follower_list_response.user_list:type_name -> user.User
-	8, // 2: relation.douyin_relation_friend_list_response.user_list:type_name -> relation.FriendUser
-	9, // 3: relation.FriendUser.user:type_name -> user.User
-	0, // 4: relation.RelationSvr.Sub:input_type -> relation.douyin_relation_action_request
-	2, // 5: relation.RelationSvr.SubList:input_type -> relation.douyin_relation_follow_list_request
-	4, // 6: relation.RelationSvr.FansList:input_type -> relation.douyin_relation_follower_list_request
-	6, // 7: relation.RelationSvr.FriendList:input_type -> relation.douyin_relation_friend_list_request
-	1, // 8: relation.RelationSvr.Sub:output_type -> relation.douyin_relation_action_response
-	3, // 9: relation.RelationSvr.SubList:output_type -> relation.douyin_relation_follow_list_response
-	5, // 10: relation.RelationSvr.FansList:output_type -> relation.douyin_relation_follower_list_response
-	7, // 11: relation.RelationSvr.FriendList:output_type -> relation.douyin_relation_friend_list_response
-	8, // [8:12] is the sub-list for method output_type
-	4, // [4:8] is the sub-list for method input_type
-	4, // [4:4] is the sub-list for extension type_name
-	4, // [4:4] is the sub-list for extension extendee
-	0, // [0:4] is the sub-list for field type_name
-}
-
-func init() { file_relation_proto_init() }
-func file_relation_proto_init() {
-	if File_relation_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_relation_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationActionRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationActionResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowerListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFollowerListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFriendListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationFriendListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_relation_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*FriendUser); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_relation_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[5].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[7].OneofWrappers = []interface{}{}
-	file_relation_proto_msgTypes[8].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_relation_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   9,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_relation_proto_goTypes,
-		DependencyIndexes: file_relation_proto_depIdxs,
-		MessageInfos:      file_relation_proto_msgTypes,
-	}.Build()
-	File_relation_proto = out.File
-	file_relation_proto_rawDesc = nil
-	file_relation_proto_goTypes = nil
-	file_relation_proto_depIdxs = nil
-}
-
-var _ context.Context
-
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-type RelationSvr interface {
-	Sub(ctx context.Context, req *DouyinRelationActionRequest) (res *DouyinRelationActionResponse, err error)
-	SubList(ctx context.Context, req *DouyinRelationFollowListRequest) (res *DouyinRelationFollowListResponse, err error)
-	FansList(ctx context.Context, req *DouyinRelationFollowerListRequest) (res *DouyinRelationFollowerListResponse, err error)
-	FriendList(ctx context.Context, req *DouyinRelationFriendListRequest) (res *DouyinRelationFriendListResponse, err error)
-}
Index: kitex_gen/user/usersvr/invoker.go
===================================================================
diff --git a/kitex_gen/user/usersvr/invoker.go b/kitex_gen/user/usersvr/invoker.go
deleted file mode 100644
--- a/kitex_gen/user/usersvr/invoker.go	
+++ /dev/null	
@@ -1,24 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package usersvr
-
-import (
-	user "dousheng/kitex_gen/user"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewInvoker creates a server.Invoker with the given handler and options.
-func NewInvoker(handler user.UserSvr, opts ...server.Option) server.Invoker {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	s := server.NewInvoker(options...)
-	if err := s.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	if err := s.Init(); err != nil {
-		panic(err)
-	}
-	return s
-}
Index: kitex_gen/chat/chatsvr/chatsvr.go
===================================================================
diff --git a/kitex_gen/chat/chatsvr/chatsvr.go b/kitex_gen/chat/chatsvr/chatsvr.go
deleted file mode 100644
--- a/kitex_gen/chat/chatsvr/chatsvr.go	
+++ /dev/null	
@@ -1,360 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package chatsvr
-
-import (
-	"context"
-	chat "dousheng/kitex_gen/chat"
-	"fmt"
-	client "github.com/cloudwego/kitex/client"
-	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
-	streaming "github.com/cloudwego/kitex/pkg/streaming"
-	proto "google.golang.org/protobuf/proto"
-)
-
-func serviceInfo() *kitex.ServiceInfo {
-	return chatSvrServiceInfo
-}
-
-var chatSvrServiceInfo = NewServiceInfo()
-
-func NewServiceInfo() *kitex.ServiceInfo {
-	serviceName := "ChatSvr"
-	handlerType := (*chat.ChatSvr)(nil)
-	methods := map[string]kitex.MethodInfo{
-		"GetMsg":  kitex.NewMethodInfo(getMsgHandler, newGetMsgArgs, newGetMsgResult, false),
-		"PostMsg": kitex.NewMethodInfo(postMsgHandler, newPostMsgArgs, newPostMsgResult, false),
-	}
-	extra := map[string]interface{}{
-		"PackageName": "chat",
-	}
-	svcInfo := &kitex.ServiceInfo{
-		ServiceName:     serviceName,
-		HandlerType:     handlerType,
-		Methods:         methods,
-		PayloadCodec:    kitex.Protobuf,
-		KiteXGenVersion: "v0.4.4",
-		Extra:           extra,
-	}
-	return svcInfo
-}
-
-func getMsgHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(chat.DouyinRelationActionRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(chat.ChatSvr).GetMsg(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *GetMsgArgs:
-		success, err := handler.(chat.ChatSvr).GetMsg(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*GetMsgResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newGetMsgArgs() interface{} {
-	return &GetMsgArgs{}
-}
-
-func newGetMsgResult() interface{} {
-	return &GetMsgResult{}
-}
-
-type GetMsgArgs struct {
-	Req *chat.DouyinRelationActionRequest
-}
-
-func (p *GetMsgArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(chat.DouyinRelationActionRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *GetMsgArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *GetMsgArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *GetMsgArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in GetMsgArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *GetMsgArgs) Unmarshal(in []byte) error {
-	msg := new(chat.DouyinRelationActionRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var GetMsgArgs_Req_DEFAULT *chat.DouyinRelationActionRequest
-
-func (p *GetMsgArgs) GetReq() *chat.DouyinRelationActionRequest {
-	if !p.IsSetReq() {
-		return GetMsgArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *GetMsgArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type GetMsgResult struct {
-	Success *chat.DouyinRelationActionResponse
-}
-
-var GetMsgResult_Success_DEFAULT *chat.DouyinRelationActionResponse
-
-func (p *GetMsgResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(chat.DouyinRelationActionResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *GetMsgResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *GetMsgResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *GetMsgResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in GetMsgResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *GetMsgResult) Unmarshal(in []byte) error {
-	msg := new(chat.DouyinRelationActionResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *GetMsgResult) GetSuccess() *chat.DouyinRelationActionResponse {
-	if !p.IsSetSuccess() {
-		return GetMsgResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *GetMsgResult) SetSuccess(x interface{}) {
-	p.Success = x.(*chat.DouyinRelationActionResponse)
-}
-
-func (p *GetMsgResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func postMsgHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(chat.DouyinMessageChatRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(chat.ChatSvr).PostMsg(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *PostMsgArgs:
-		success, err := handler.(chat.ChatSvr).PostMsg(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*PostMsgResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newPostMsgArgs() interface{} {
-	return &PostMsgArgs{}
-}
-
-func newPostMsgResult() interface{} {
-	return &PostMsgResult{}
-}
-
-type PostMsgArgs struct {
-	Req *chat.DouyinMessageChatRequest
-}
-
-func (p *PostMsgArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(chat.DouyinMessageChatRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *PostMsgArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *PostMsgArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *PostMsgArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in PostMsgArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *PostMsgArgs) Unmarshal(in []byte) error {
-	msg := new(chat.DouyinMessageChatRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var PostMsgArgs_Req_DEFAULT *chat.DouyinMessageChatRequest
-
-func (p *PostMsgArgs) GetReq() *chat.DouyinMessageChatRequest {
-	if !p.IsSetReq() {
-		return PostMsgArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *PostMsgArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type PostMsgResult struct {
-	Success *chat.DouyinMessageChatResponse
-}
-
-var PostMsgResult_Success_DEFAULT *chat.DouyinMessageChatResponse
-
-func (p *PostMsgResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(chat.DouyinMessageChatResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *PostMsgResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *PostMsgResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *PostMsgResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in PostMsgResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *PostMsgResult) Unmarshal(in []byte) error {
-	msg := new(chat.DouyinMessageChatResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *PostMsgResult) GetSuccess() *chat.DouyinMessageChatResponse {
-	if !p.IsSetSuccess() {
-		return PostMsgResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *PostMsgResult) SetSuccess(x interface{}) {
-	p.Success = x.(*chat.DouyinMessageChatResponse)
-}
-
-func (p *PostMsgResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-type kClient struct {
-	c client.Client
-}
-
-func newServiceClient(c client.Client) *kClient {
-	return &kClient{
-		c: c,
-	}
-}
-
-func (p *kClient) GetMsg(ctx context.Context, Req *chat.DouyinRelationActionRequest) (r *chat.DouyinRelationActionResponse, err error) {
-	var _args GetMsgArgs
-	_args.Req = Req
-	var _result GetMsgResult
-	if err = p.c.Call(ctx, "GetMsg", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) PostMsg(ctx context.Context, Req *chat.DouyinMessageChatRequest) (r *chat.DouyinMessageChatResponse, err error) {
-	var _args PostMsgArgs
-	_args.Req = Req
-	var _result PostMsgResult
-	if err = p.c.Call(ctx, "PostMsg", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
Index: IDL/chat.proto
===================================================================
diff --git a/IDL/chat.proto b/IDL/chat.proto
deleted file mode 100644
--- a/IDL/chat.proto	
+++ /dev/null	
@@ -1,41 +0,0 @@
-syntax = "proto3";
-package chat;
-option go_package = "chat";
-
-message douyin_message_chat_request {
-  string token = 1; // 用户鉴权token
-  int64 to_user_id = 2; // 对方用户id
-}
-
-message douyin_message_chat_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated Message message_list = 3; // 消息列表
-}
-
-message douyin_relation_action_request {
-  string token = 1; // 用户鉴权token
-  int64 to_user_id = 2; // 对方用户id
-  int32 action_type = 3; // 1-发送消息
-  string content = 4; // 消息内容
-}
-
-message douyin_relation_action_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-}
-
-message Message {
-  int64 id = 1; // 消息id
-  int64 to_user_id = 2; // 该消息接收者的id
-  int64 from_user_id =3; // 该消息发送者的id
-  string content = 4; // 消息内容
-  optional string create_time = 5; // 消息创建时间
-}
-
-service ChatSvr {
-  //获取聊天消息
-  rpc GetMsg (douyin_relation_action_request) returns (douyin_relation_action_response);
-  //发送聊天消息
-  rpc PostMsg (douyin_message_chat_request) returns (douyin_message_chat_response);
-}
\ No newline at end of file
Index: IDL/user.proto
===================================================================
diff --git a/IDL/user.proto b/IDL/user.proto
deleted file mode 100644
--- a/IDL/user.proto	
+++ /dev/null	
@@ -1,55 +0,0 @@
-syntax = "proto3";
-package user;
-option go_package = "user";
-
-message douyin_user_register_request {
-  string username = 1; // 注册用户名，最长32个字符
-  string password = 2; // 密码，最长32个字符
-}
-
-message douyin_user_register_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  int64 user_id = 3; // 用户id
-  string token = 4; // 用户鉴权token
-}
-
-message douyin_user_login_request {
-  string username = 1; // 登录用户名
-  string password = 2; // 登录密码
-}
-
-message douyin_user_login_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  int64 user_id = 3; // 用户id
-  string token = 4; // 用户鉴权token
-}
-
-message douyin_user_request {
-  int64 user_id = 1; // 用户id
-  string token = 2; // 用户鉴权token
-}
-
-message douyin_user_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  User user = 3; // 用户信息
-}
-
-message User {
-  int64 id = 1; // 用户id
-  string name = 2; // 用户名称
-  optional int64 follow_count = 3; // 关注总数
-  optional int64 follower_count = 4; // 粉丝总数
-  bool is_follow = 5; // true-已关注，false-未关注
-}
-
-service UserSvr {
-  //用户注册
-  rpc Register (douyin_user_register_request) returns (douyin_user_register_response);
-  //用户登录
-  rpc Login (douyin_user_login_request) returns (douyin_user_login_response);
-  //用户信息
-  rpc GetById (douyin_user_request) returns (douyin_user_response);
-}
\ No newline at end of file
Index: kitex_gen/video/videosvr/invoker.go
===================================================================
diff --git a/kitex_gen/video/videosvr/invoker.go b/kitex_gen/video/videosvr/invoker.go
deleted file mode 100644
--- a/kitex_gen/video/videosvr/invoker.go	
+++ /dev/null	
@@ -1,24 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package videosvr
-
-import (
-	video "dousheng/kitex_gen/video"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewInvoker creates a server.Invoker with the given handler and options.
-func NewInvoker(handler video.VideoSvr, opts ...server.Option) server.Invoker {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	s := server.NewInvoker(options...)
-	if err := s.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	if err := s.Init(); err != nil {
-		panic(err)
-	}
-	return s
-}
Index: kitex_gen/interact/interactsvr/server.go
===================================================================
diff --git a/kitex_gen/interact/interactsvr/server.go b/kitex_gen/interact/interactsvr/server.go
deleted file mode 100644
--- a/kitex_gen/interact/interactsvr/server.go	
+++ /dev/null	
@@ -1,20 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-package interactsvr
-
-import (
-	interact "dousheng/kitex_gen/interact"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewServer creates a server.Server with the given handler and options.
-func NewServer(handler interact.InteractSvr, opts ...server.Option) server.Server {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	svr := server.NewServer(options...)
-	if err := svr.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	return svr
-}
Index: kitex_gen/video/kitex.yaml
===================================================================
diff --git a/kitex_gen/video/kitex.yaml b/kitex_gen/video/kitex.yaml
deleted file mode 100644
--- a/kitex_gen/video/kitex.yaml	
+++ /dev/null	
@@ -1,4 +0,0 @@
-kitexinfo:
-   ServiceName: 'video'
-   ToolVersion: 'v0.4.4'
-
Index: kitex_gen/video/video.pb.go
===================================================================
diff --git a/kitex_gen/video/video.pb.go b/kitex_gen/video/video.pb.go
deleted file mode 100644
--- a/kitex_gen/video/video.pb.go	
+++ /dev/null	
@@ -1,742 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.1
-// 	protoc        v3.17.2
-// source: video.proto
-
-package video
-
-import (
-	context "context"
-	user "dousheng/kitex_gen/user"
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinFeedRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	LatestTime *int64  `protobuf:"varint,1,opt,name=latest_time,json=latestTime,proto3,oneof" json:"latest_time,omitempty"` // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
-	Token      *string `protobuf:"bytes,2,opt,name=token,proto3,oneof" json:"token,omitempty"`                              // 可选参数，登录用户设置
-}
-
-func (x *DouyinFeedRequest) Reset() {
-	*x = DouyinFeedRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFeedRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFeedRequest) ProtoMessage() {}
-
-func (x *DouyinFeedRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFeedRequest.ProtoReflect.Descriptor instead.
-func (*DouyinFeedRequest) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinFeedRequest) GetLatestTime() int64 {
-	if x != nil && x.LatestTime != nil {
-		return *x.LatestTime
-	}
-	return 0
-}
-
-func (x *DouyinFeedRequest) GetToken() string {
-	if x != nil && x.Token != nil {
-		return *x.Token
-	}
-	return ""
-}
-
-type DouyinFeedResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string  `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	VideoList  []*Video `protobuf:"bytes,3,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`       // 视频列表
-	NextTime   *int64   `protobuf:"varint,4,opt,name=next_time,json=nextTime,proto3,oneof" json:"next_time,omitempty"`   // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
-}
-
-func (x *DouyinFeedResponse) Reset() {
-	*x = DouyinFeedResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFeedResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFeedResponse) ProtoMessage() {}
-
-func (x *DouyinFeedResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFeedResponse.ProtoReflect.Descriptor instead.
-func (*DouyinFeedResponse) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinFeedResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinFeedResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinFeedResponse) GetVideoList() []*Video {
-	if x != nil {
-		return x.VideoList
-	}
-	return nil
-}
-
-func (x *DouyinFeedResponse) GetNextTime() int64 {
-	if x != nil && x.NextTime != nil {
-		return *x.NextTime
-	}
-	return 0
-}
-
-type DouyinPublishActionRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` // 用户鉴权token
-	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`   // 视频数据
-	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty"` // 视频标题
-}
-
-func (x *DouyinPublishActionRequest) Reset() {
-	*x = DouyinPublishActionRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishActionRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishActionRequest) ProtoMessage() {}
-
-func (x *DouyinPublishActionRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishActionRequest.ProtoReflect.Descriptor instead.
-func (*DouyinPublishActionRequest) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinPublishActionRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinPublishActionRequest) GetData() []byte {
-	if x != nil {
-		return x.Data
-	}
-	return nil
-}
-
-func (x *DouyinPublishActionRequest) GetTitle() string {
-	if x != nil {
-		return x.Title
-	}
-	return ""
-}
-
-type DouyinPublishActionResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-}
-
-func (x *DouyinPublishActionResponse) Reset() {
-	*x = DouyinPublishActionResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishActionResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishActionResponse) ProtoMessage() {}
-
-func (x *DouyinPublishActionResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishActionResponse.ProtoReflect.Descriptor instead.
-func (*DouyinPublishActionResponse) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinPublishActionResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinPublishActionResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-type DouyinPublishListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinPublishListRequest) Reset() {
-	*x = DouyinPublishListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishListRequest) ProtoMessage() {}
-
-func (x *DouyinPublishListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinPublishListRequest) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *DouyinPublishListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinPublishListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinPublishListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string  `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	VideoList  []*Video `protobuf:"bytes,3,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`       // 用户发布的视频列表
-}
-
-func (x *DouyinPublishListResponse) Reset() {
-	*x = DouyinPublishListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishListResponse) ProtoMessage() {}
-
-func (x *DouyinPublishListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinPublishListResponse) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{5}
-}
-
-func (x *DouyinPublishListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinPublishListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinPublishListResponse) GetVideoList() []*Video {
-	if x != nil {
-		return x.VideoList
-	}
-	return nil
-}
-
-type Video struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Id            int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                            // 视频唯一标识
-	Author        *user.User `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`                                     // 视频作者信息
-	PlayUrl       string     `protobuf:"bytes,3,opt,name=play_url,json=playUrl,proto3" json:"play_url,omitempty"`                    // 视频播放地址
-	CoverUrl      string     `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty"`                 // 视频封面地址
-	FavoriteCount int64      `protobuf:"varint,5,opt,name=favorite_count,json=favoriteCount,proto3" json:"favorite_count,omitempty"` // 视频的点赞总数
-	CommentCount  int64      `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`    // 视频的评论总数
-	IsFavorite    bool       `protobuf:"varint,7,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty"`          // true-已点赞，false-未点赞
-	Title         string     `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`                                       // 视频标题
-}
-
-func (x *Video) Reset() {
-	*x = Video{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *Video) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*Video) ProtoMessage() {}
-
-func (x *Video) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use Video.ProtoReflect.Descriptor instead.
-func (*Video) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{6}
-}
-
-func (x *Video) GetId() int64 {
-	if x != nil {
-		return x.Id
-	}
-	return 0
-}
-
-func (x *Video) GetAuthor() *user.User {
-	if x != nil {
-		return x.Author
-	}
-	return nil
-}
-
-func (x *Video) GetPlayUrl() string {
-	if x != nil {
-		return x.PlayUrl
-	}
-	return ""
-}
-
-func (x *Video) GetCoverUrl() string {
-	if x != nil {
-		return x.CoverUrl
-	}
-	return ""
-}
-
-func (x *Video) GetFavoriteCount() int64 {
-	if x != nil {
-		return x.FavoriteCount
-	}
-	return 0
-}
-
-func (x *Video) GetCommentCount() int64 {
-	if x != nil {
-		return x.CommentCount
-	}
-	return 0
-}
-
-func (x *Video) GetIsFavorite() bool {
-	if x != nil {
-		return x.IsFavorite
-	}
-	return false
-}
-
-func (x *Video) GetTitle() string {
-	if x != nil {
-		return x.Title
-	}
-	return ""
-}
-
-var File_video_proto protoreflect.FileDescriptor
-
-var file_video_proto_rawDesc = []byte{
-	0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
-	0x22, 0x70, 0x0a, 0x13, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f,
-	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x6c, 0x61, 0x74, 0x65, 0x73,
-	0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0a,
-	0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x19, 0x0a,
-	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x01, 0x52, 0x05,
-	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x6c, 0x61, 0x74,
-	0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x74, 0x6f, 0x6b,
-	0x65, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x14, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x65,
-	0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
-	0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a,
-	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
-	0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01,
-	0x12, 0x2b, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03,
-	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64,
-	0x65, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x20, 0x0a,
-	0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
-	0x48, 0x01, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x42,
-	0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x0c,
-	0x0a, 0x0a, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x22, 0x5f, 0x0a, 0x1d,
-	0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61,
-	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
-	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
-	0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
-	0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
-	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x74, 0x0a,
-	0x1e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f,
-	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
-	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
-	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
-	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
-	0x67, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
-	0x6d, 0x73, 0x67, 0x22, 0x4c, 0x0a, 0x1b, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75,
-	0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
-	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
-	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65,
-	0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x1c, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62,
-	0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
-	0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64,
-	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43,
-	0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73,
-	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75,
-	0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69,
-	0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f,
-	0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
-	0x6d, 0x73, 0x67, 0x22, 0xf6, 0x01, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x0e, 0x0a,
-	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a,
-	0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e,
-	0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f,
-	0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20,
-	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x1b, 0x0a, 0x09,
-	0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
-	0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x61, 0x76,
-	0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
-	0x03, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
-	0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e,
-	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
-	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x66, 0x61, 0x76, 0x6f,
-	0x72, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x69, 0x73, 0x46, 0x61,
-	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
-	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x32, 0xfb, 0x01, 0x0a,
-	0x08, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x76, 0x72, 0x12, 0x3f, 0x0a, 0x04, 0x46, 0x65, 0x65,
-	0x64, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
-	0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65,
-	0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x07, 0x50, 0x75,
-	0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f,
-	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x63, 0x74,
-	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e, 0x76, 0x69,
-	0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
-	0x73, 0x68, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
-	0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
-	0x74, 0x12, 0x22, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
-	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f,
-	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73,
-	0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1a, 0x5a, 0x18, 0x64, 0x6f,
-	0x75, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e,
-	0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
-}
-
-var (
-	file_video_proto_rawDescOnce sync.Once
-	file_video_proto_rawDescData = file_video_proto_rawDesc
-)
-
-func file_video_proto_rawDescGZIP() []byte {
-	file_video_proto_rawDescOnce.Do(func() {
-		file_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_proto_rawDescData)
-	})
-	return file_video_proto_rawDescData
-}
-
-var file_video_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
-var file_video_proto_goTypes = []interface{}{
-	(*DouyinFeedRequest)(nil),           // 0: video.douyin_feed_request
-	(*DouyinFeedResponse)(nil),          // 1: video.douyin_feed_response
-	(*DouyinPublishActionRequest)(nil),  // 2: video.douyin_publish_action_request
-	(*DouyinPublishActionResponse)(nil), // 3: video.douyin_publish_action_response
-	(*DouyinPublishListRequest)(nil),    // 4: video.douyin_publish_list_request
-	(*DouyinPublishListResponse)(nil),   // 5: video.douyin_publish_list_response
-	(*Video)(nil),                       // 6: video.Video
-	(*user.User)(nil),                   // 7: user.User
-}
-var file_video_proto_depIdxs = []int32{
-	6, // 0: video.douyin_feed_response.video_list:type_name -> video.Video
-	6, // 1: video.douyin_publish_list_response.video_list:type_name -> video.Video
-	7, // 2: video.Video.author:type_name -> user.User
-	0, // 3: video.VideoSvr.Feed:input_type -> video.douyin_feed_request
-	2, // 4: video.VideoSvr.Publish:input_type -> video.douyin_publish_action_request
-	4, // 5: video.VideoSvr.PublishList:input_type -> video.douyin_publish_list_request
-	1, // 6: video.VideoSvr.Feed:output_type -> video.douyin_feed_response
-	3, // 7: video.VideoSvr.Publish:output_type -> video.douyin_publish_action_response
-	5, // 8: video.VideoSvr.PublishList:output_type -> video.douyin_publish_list_response
-	6, // [6:9] is the sub-list for method output_type
-	3, // [3:6] is the sub-list for method input_type
-	3, // [3:3] is the sub-list for extension type_name
-	3, // [3:3] is the sub-list for extension extendee
-	0, // [0:3] is the sub-list for field type_name
-}
-
-func init() { file_video_proto_init() }
-func file_video_proto_init() {
-	if File_video_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFeedRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFeedResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishActionRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishActionResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*Video); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_video_proto_msgTypes[0].OneofWrappers = []interface{}{}
-	file_video_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_video_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_video_proto_msgTypes[5].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_video_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   7,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_video_proto_goTypes,
-		DependencyIndexes: file_video_proto_depIdxs,
-		MessageInfos:      file_video_proto_msgTypes,
-	}.Build()
-	File_video_proto = out.File
-	file_video_proto_rawDesc = nil
-	file_video_proto_goTypes = nil
-	file_video_proto_depIdxs = nil
-}
-
-var _ context.Context
-
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-type VideoSvr interface {
-	Feed(ctx context.Context, req *DouyinFeedRequest) (res *DouyinFeedResponse, err error)
-	Publish(ctx context.Context, req *DouyinPublishActionRequest) (res *DouyinPublishActionResponse, err error)
-	PublishList(ctx context.Context, req *DouyinPublishListRequest) (res *DouyinPublishListResponse, err error)
-}
Index: router.go
===================================================================
diff --git a/router.go b/router.go
deleted file mode 100644
--- a/router.go	
+++ /dev/null	
@@ -1,15 +0,0 @@
-// Code generated by hertz generator.
-
-package main
-
-import (
-	handler "dousheng/biz/handler"
-	"github.com/cloudwego/hertz/pkg/app/server"
-)
-
-// customizeRegister registers customize routers.
-func customizedRegister(r *server.Hertz) {
-	r.GET("/ping", handler.Ping)
-
-	// your code ...
-}
Index: kitex_gen/relation/relationsvr/server.go
===================================================================
diff --git a/kitex_gen/relation/relationsvr/server.go b/kitex_gen/relation/relationsvr/server.go
deleted file mode 100644
--- a/kitex_gen/relation/relationsvr/server.go	
+++ /dev/null	
@@ -1,20 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-package relationsvr
-
-import (
-	relation "dousheng/kitex_gen/relation"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewServer creates a server.Server with the given handler and options.
-func NewServer(handler relation.RelationSvr, opts ...server.Option) server.Server {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	svr := server.NewServer(options...)
-	if err := svr.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	return svr
-}
Index: dal/db/tb_video.gen.go
===================================================================
diff --git a/dal/db/tb_video.gen.go b/dal/db/tb_video.gen.go
deleted file mode 100644
--- a/dal/db/tb_video.gen.go	
+++ /dev/null	
@@ -1,355 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package db
-
-import (
-	"context"
-
-	"gorm.io/gorm"
-	"gorm.io/gorm/clause"
-	"gorm.io/gorm/schema"
-
-	"gorm.io/gen"
-	"gorm.io/gen/field"
-
-	"gorm.io/plugin/dbresolver"
-
-	"dousheng/dal/model"
-)
-
-func newVideo(db *gorm.DB, opts ...gen.DOOption) video {
-	_video := video{}
-
-	_video.videoDo.UseDB(db, opts...)
-	_video.videoDo.UseModel(&model.Video{})
-
-	tableName := _video.videoDo.TableName()
-	_video.ALL = field.NewAsterisk(tableName)
-	_video.VideoID = field.NewInt64(tableName, "video_id")
-	_video.UserID = field.NewInt64(tableName, "user_id")
-	_video.PlayURL = field.NewString(tableName, "play_url")
-	_video.CoverURL = field.NewString(tableName, "cover_url")
-	_video.FavoriteCount = field.NewInt32(tableName, "favorite_count")
-	_video.CommentCount = field.NewInt32(tableName, "comment_count")
-	_video.Title = field.NewString(tableName, "title")
-	_video.CreateDate = field.NewTime(tableName, "create_date")
-	_video.UpdateDate = field.NewTime(tableName, "update_date")
-
-	_video.fillFieldMap()
-
-	return _video
-}
-
-type video struct {
-	videoDo
-
-	ALL           field.Asterisk
-	VideoID       field.Int64  // 视频id
-	UserID        field.Int64  // 用户id
-	PlayURL       field.String // 视频URL
-	CoverURL      field.String // 封面URL
-	FavoriteCount field.Int32  // 点赞总数
-	CommentCount  field.Int32  // 评论总数
-	Title         field.String // 视频标题
-	CreateDate    field.Time   // 创建时间
-	UpdateDate    field.Time   // 更新时间
-
-	fieldMap map[string]field.Expr
-}
-
-func (v video) Table(newTableName string) *video {
-	v.videoDo.UseTable(newTableName)
-	return v.updateTableName(newTableName)
-}
-
-func (v video) As(alias string) *video {
-	v.videoDo.DO = *(v.videoDo.As(alias).(*gen.DO))
-	return v.updateTableName(alias)
-}
-
-func (v *video) updateTableName(table string) *video {
-	v.ALL = field.NewAsterisk(table)
-	v.VideoID = field.NewInt64(table, "video_id")
-	v.UserID = field.NewInt64(table, "user_id")
-	v.PlayURL = field.NewString(table, "play_url")
-	v.CoverURL = field.NewString(table, "cover_url")
-	v.FavoriteCount = field.NewInt32(table, "favorite_count")
-	v.CommentCount = field.NewInt32(table, "comment_count")
-	v.Title = field.NewString(table, "title")
-	v.CreateDate = field.NewTime(table, "create_date")
-	v.UpdateDate = field.NewTime(table, "update_date")
-
-	v.fillFieldMap()
-
-	return v
-}
-
-func (v *video) GetFieldByName(fieldName string) (field.OrderExpr, bool) {
-	_f, ok := v.fieldMap[fieldName]
-	if !ok || _f == nil {
-		return nil, false
-	}
-	_oe, ok := _f.(field.OrderExpr)
-	return _oe, ok
-}
-
-func (v *video) fillFieldMap() {
-	v.fieldMap = make(map[string]field.Expr, 9)
-	v.fieldMap["video_id"] = v.VideoID
-	v.fieldMap["user_id"] = v.UserID
-	v.fieldMap["play_url"] = v.PlayURL
-	v.fieldMap["cover_url"] = v.CoverURL
-	v.fieldMap["favorite_count"] = v.FavoriteCount
-	v.fieldMap["comment_count"] = v.CommentCount
-	v.fieldMap["title"] = v.Title
-	v.fieldMap["create_date"] = v.CreateDate
-	v.fieldMap["update_date"] = v.UpdateDate
-}
-
-func (v video) clone(db *gorm.DB) video {
-	v.videoDo.ReplaceConnPool(db.Statement.ConnPool)
-	return v
-}
-
-func (v video) replaceDB(db *gorm.DB) video {
-	v.videoDo.ReplaceDB(db)
-	return v
-}
-
-type videoDo struct{ gen.DO }
-
-func (v videoDo) Debug() *videoDo {
-	return v.withDO(v.DO.Debug())
-}
-
-func (v videoDo) WithContext(ctx context.Context) *videoDo {
-	return v.withDO(v.DO.WithContext(ctx))
-}
-
-func (v videoDo) ReadDB() *videoDo {
-	return v.Clauses(dbresolver.Read)
-}
-
-func (v videoDo) WriteDB() *videoDo {
-	return v.Clauses(dbresolver.Write)
-}
-
-func (v videoDo) Session(config *gorm.Session) *videoDo {
-	return v.withDO(v.DO.Session(config))
-}
-
-func (v videoDo) Clauses(conds ...clause.Expression) *videoDo {
-	return v.withDO(v.DO.Clauses(conds...))
-}
-
-func (v videoDo) Returning(value interface{}, columns ...string) *videoDo {
-	return v.withDO(v.DO.Returning(value, columns...))
-}
-
-func (v videoDo) Not(conds ...gen.Condition) *videoDo {
-	return v.withDO(v.DO.Not(conds...))
-}
-
-func (v videoDo) Or(conds ...gen.Condition) *videoDo {
-	return v.withDO(v.DO.Or(conds...))
-}
-
-func (v videoDo) Select(conds ...field.Expr) *videoDo {
-	return v.withDO(v.DO.Select(conds...))
-}
-
-func (v videoDo) Where(conds ...gen.Condition) *videoDo {
-	return v.withDO(v.DO.Where(conds...))
-}
-
-func (v videoDo) Exists(subquery interface{ UnderlyingDB() *gorm.DB }) *videoDo {
-	return v.Where(field.CompareSubQuery(field.ExistsOp, nil, subquery.UnderlyingDB()))
-}
-
-func (v videoDo) Order(conds ...field.Expr) *videoDo {
-	return v.withDO(v.DO.Order(conds...))
-}
-
-func (v videoDo) Distinct(cols ...field.Expr) *videoDo {
-	return v.withDO(v.DO.Distinct(cols...))
-}
-
-func (v videoDo) Omit(cols ...field.Expr) *videoDo {
-	return v.withDO(v.DO.Omit(cols...))
-}
-
-func (v videoDo) Join(table schema.Tabler, on ...field.Expr) *videoDo {
-	return v.withDO(v.DO.Join(table, on...))
-}
-
-func (v videoDo) LeftJoin(table schema.Tabler, on ...field.Expr) *videoDo {
-	return v.withDO(v.DO.LeftJoin(table, on...))
-}
-
-func (v videoDo) RightJoin(table schema.Tabler, on ...field.Expr) *videoDo {
-	return v.withDO(v.DO.RightJoin(table, on...))
-}
-
-func (v videoDo) Group(cols ...field.Expr) *videoDo {
-	return v.withDO(v.DO.Group(cols...))
-}
-
-func (v videoDo) Having(conds ...gen.Condition) *videoDo {
-	return v.withDO(v.DO.Having(conds...))
-}
-
-func (v videoDo) Limit(limit int) *videoDo {
-	return v.withDO(v.DO.Limit(limit))
-}
-
-func (v videoDo) Offset(offset int) *videoDo {
-	return v.withDO(v.DO.Offset(offset))
-}
-
-func (v videoDo) Scopes(funcs ...func(gen.Dao) gen.Dao) *videoDo {
-	return v.withDO(v.DO.Scopes(funcs...))
-}
-
-func (v videoDo) Unscoped() *videoDo {
-	return v.withDO(v.DO.Unscoped())
-}
-
-func (v videoDo) Create(values ...*model.Video) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return v.DO.Create(values)
-}
-
-func (v videoDo) CreateInBatches(values []*model.Video, batchSize int) error {
-	return v.DO.CreateInBatches(values, batchSize)
-}
-
-// Save : !!! underlying implementation is different with GORM
-// The method is equivalent to executing the statement: db.Clauses(clause.OnConflict{UpdateAll: true}).Create(values)
-func (v videoDo) Save(values ...*model.Video) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return v.DO.Save(values)
-}
-
-func (v videoDo) First() (*model.Video, error) {
-	if result, err := v.DO.First(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Video), nil
-	}
-}
-
-func (v videoDo) Take() (*model.Video, error) {
-	if result, err := v.DO.Take(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Video), nil
-	}
-}
-
-func (v videoDo) Last() (*model.Video, error) {
-	if result, err := v.DO.Last(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Video), nil
-	}
-}
-
-func (v videoDo) Find() ([]*model.Video, error) {
-	result, err := v.DO.Find()
-	return result.([]*model.Video), err
-}
-
-func (v videoDo) FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*model.Video, err error) {
-	buf := make([]*model.Video, 0, batchSize)
-	err = v.DO.FindInBatches(&buf, batchSize, func(tx gen.Dao, batch int) error {
-		defer func() { results = append(results, buf...) }()
-		return fc(tx, batch)
-	})
-	return results, err
-}
-
-func (v videoDo) FindInBatches(result *[]*model.Video, batchSize int, fc func(tx gen.Dao, batch int) error) error {
-	return v.DO.FindInBatches(result, batchSize, fc)
-}
-
-func (v videoDo) Attrs(attrs ...field.AssignExpr) *videoDo {
-	return v.withDO(v.DO.Attrs(attrs...))
-}
-
-func (v videoDo) Assign(attrs ...field.AssignExpr) *videoDo {
-	return v.withDO(v.DO.Assign(attrs...))
-}
-
-func (v videoDo) Joins(fields ...field.RelationField) *videoDo {
-	for _, _f := range fields {
-		v = *v.withDO(v.DO.Joins(_f))
-	}
-	return &v
-}
-
-func (v videoDo) Preload(fields ...field.RelationField) *videoDo {
-	for _, _f := range fields {
-		v = *v.withDO(v.DO.Preload(_f))
-	}
-	return &v
-}
-
-func (v videoDo) FirstOrInit() (*model.Video, error) {
-	if result, err := v.DO.FirstOrInit(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Video), nil
-	}
-}
-
-func (v videoDo) FirstOrCreate() (*model.Video, error) {
-	if result, err := v.DO.FirstOrCreate(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Video), nil
-	}
-}
-
-func (v videoDo) FindByPage(offset int, limit int) (result []*model.Video, count int64, err error) {
-	result, err = v.Offset(offset).Limit(limit).Find()
-	if err != nil {
-		return
-	}
-
-	if size := len(result); 0 < limit && 0 < size && size < limit {
-		count = int64(size + offset)
-		return
-	}
-
-	count, err = v.Offset(-1).Limit(-1).Count()
-	return
-}
-
-func (v videoDo) ScanByPage(result interface{}, offset int, limit int) (count int64, err error) {
-	count, err = v.Count()
-	if err != nil {
-		return
-	}
-
-	err = v.Offset(offset).Limit(limit).Scan(result)
-	return
-}
-
-func (v videoDo) Scan(result interface{}) (err error) {
-	return v.DO.Scan(result)
-}
-
-func (v videoDo) Delete(models ...*model.Video) (result gen.ResultInfo, err error) {
-	return v.DO.Delete(models)
-}
-
-func (v *videoDo) withDO(do gen.Dao) *videoDo {
-	v.DO = *do.(*gen.DO)
-	return v
-}
Index: kitex_gen/interact/interactsvr/client.go
===================================================================
diff --git a/kitex_gen/interact/interactsvr/client.go b/kitex_gen/interact/interactsvr/client.go
deleted file mode 100644
--- a/kitex_gen/interact/interactsvr/client.go	
+++ /dev/null	
@@ -1,67 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package interactsvr
-
-import (
-	"context"
-	interact "dousheng/kitex_gen/interact"
-	client "github.com/cloudwego/kitex/client"
-	callopt "github.com/cloudwego/kitex/client/callopt"
-)
-
-// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
-type Client interface {
-	Fav(ctx context.Context, Req *interact.DouyinFavoriteActionRequest, callOptions ...callopt.Option) (r *interact.DouyinFavoriteActionResponse, err error)
-	FavList(ctx context.Context, Req *interact.DouyinFavoriteListRequest, callOptions ...callopt.Option) (r *interact.DouyinFavoriteListResponse, err error)
-	Comment(ctx context.Context, Req *interact.DouyinCommentActionRequest, callOptions ...callopt.Option) (r *interact.DouyinCommentActionResponse, err error)
-	CommentList(ctx context.Context, Req *interact.DouyinCommentListRequest, callOptions ...callopt.Option) (r *interact.DouyinCommentListResponse, err error)
-}
-
-// NewClient creates a client for the service defined in IDL.
-func NewClient(destService string, opts ...client.Option) (Client, error) {
-	var options []client.Option
-	options = append(options, client.WithDestService(destService))
-
-	options = append(options, opts...)
-
-	kc, err := client.NewClient(serviceInfo(), options...)
-	if err != nil {
-		return nil, err
-	}
-	return &kInteractSvrClient{
-		kClient: newServiceClient(kc),
-	}, nil
-}
-
-// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
-func MustNewClient(destService string, opts ...client.Option) Client {
-	kc, err := NewClient(destService, opts...)
-	if err != nil {
-		panic(err)
-	}
-	return kc
-}
-
-type kInteractSvrClient struct {
-	*kClient
-}
-
-func (p *kInteractSvrClient) Fav(ctx context.Context, Req *interact.DouyinFavoriteActionRequest, callOptions ...callopt.Option) (r *interact.DouyinFavoriteActionResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.Fav(ctx, Req)
-}
-
-func (p *kInteractSvrClient) FavList(ctx context.Context, Req *interact.DouyinFavoriteListRequest, callOptions ...callopt.Option) (r *interact.DouyinFavoriteListResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.FavList(ctx, Req)
-}
-
-func (p *kInteractSvrClient) Comment(ctx context.Context, Req *interact.DouyinCommentActionRequest, callOptions ...callopt.Option) (r *interact.DouyinCommentActionResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.Comment(ctx, Req)
-}
-
-func (p *kInteractSvrClient) CommentList(ctx context.Context, Req *interact.DouyinCommentListRequest, callOptions ...callopt.Option) (r *interact.DouyinCommentListResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.CommentList(ctx, Req)
-}
Index: kitex_gen/relation/relationsvr/client.go
===================================================================
diff --git a/kitex_gen/relation/relationsvr/client.go b/kitex_gen/relation/relationsvr/client.go
deleted file mode 100644
--- a/kitex_gen/relation/relationsvr/client.go	
+++ /dev/null	
@@ -1,67 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package relationsvr
-
-import (
-	"context"
-	relation "dousheng/kitex_gen/relation"
-	client "github.com/cloudwego/kitex/client"
-	callopt "github.com/cloudwego/kitex/client/callopt"
-)
-
-// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
-type Client interface {
-	Sub(ctx context.Context, Req *relation.DouyinRelationActionRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationActionResponse, err error)
-	SubList(ctx context.Context, Req *relation.DouyinRelationFollowListRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationFollowListResponse, err error)
-	FansList(ctx context.Context, Req *relation.DouyinRelationFollowerListRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationFollowerListResponse, err error)
-	FriendList(ctx context.Context, Req *relation.DouyinRelationFriendListRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationFriendListResponse, err error)
-}
-
-// NewClient creates a client for the service defined in IDL.
-func NewClient(destService string, opts ...client.Option) (Client, error) {
-	var options []client.Option
-	options = append(options, client.WithDestService(destService))
-
-	options = append(options, opts...)
-
-	kc, err := client.NewClient(serviceInfo(), options...)
-	if err != nil {
-		return nil, err
-	}
-	return &kRelationSvrClient{
-		kClient: newServiceClient(kc),
-	}, nil
-}
-
-// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
-func MustNewClient(destService string, opts ...client.Option) Client {
-	kc, err := NewClient(destService, opts...)
-	if err != nil {
-		panic(err)
-	}
-	return kc
-}
-
-type kRelationSvrClient struct {
-	*kClient
-}
-
-func (p *kRelationSvrClient) Sub(ctx context.Context, Req *relation.DouyinRelationActionRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationActionResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.Sub(ctx, Req)
-}
-
-func (p *kRelationSvrClient) SubList(ctx context.Context, Req *relation.DouyinRelationFollowListRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationFollowListResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.SubList(ctx, Req)
-}
-
-func (p *kRelationSvrClient) FansList(ctx context.Context, Req *relation.DouyinRelationFollowerListRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationFollowerListResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.FansList(ctx, Req)
-}
-
-func (p *kRelationSvrClient) FriendList(ctx context.Context, Req *relation.DouyinRelationFriendListRequest, callOptions ...callopt.Option) (r *relation.DouyinRelationFriendListResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.FriendList(ctx, Req)
-}
Index: dal/model/tb_favorite.gen.go
===================================================================
diff --git a/dal/model/tb_favorite.gen.go b/dal/model/tb_favorite.gen.go
deleted file mode 100644
--- a/dal/model/tb_favorite.gen.go	
+++ /dev/null	
@@ -1,26 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package model
-
-import (
-	"time"
-)
-
-const TableNameFavorite = "tb_favorite"
-
-// Favorite mapped from table <tb_favorite>
-type Favorite struct {
-	FavoriteID int64     `gorm:"column:favorite_id;primaryKey;autoIncrement:true" json:"favorite_id"`      // 点赞id
-	Username   string    `gorm:"column:username" json:"username"`                                          // 用户名
-	UserID     int64     `gorm:"column:user_id" json:"user_id"`                                            // 用户id
-	VideoID    int64     `gorm:"column:video_id" json:"video_id"`                                          // 视频id
-	IsDeleted  int32     `gorm:"column:is_deleted" json:"is_deleted"`                                      // 取消点赞
-	CreateTime time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 创建时间
-}
-
-// TableName Favorite's table name
-func (*Favorite) TableName() string {
-	return TableNameFavorite
-}
Index: main.go
===================================================================
diff --git a/main.go b/main.go
deleted file mode 100644
--- a/main.go	
+++ /dev/null	
@@ -1,14 +0,0 @@
-// Code generated by hertz generator.
-
-package main
-
-import (
-	"github.com/cloudwego/hertz/pkg/app/server"
-)
-
-func main() {
-	h := server.Default()
-
-	register(h)
-	h.Spin()
-}
Index: dal/db/tb_user.gen.go
===================================================================
diff --git a/dal/db/tb_user.gen.go b/dal/db/tb_user.gen.go
deleted file mode 100644
--- a/dal/db/tb_user.gen.go	
+++ /dev/null	
@@ -1,347 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package db
-
-import (
-	"context"
-
-	"gorm.io/gorm"
-	"gorm.io/gorm/clause"
-	"gorm.io/gorm/schema"
-
-	"gorm.io/gen"
-	"gorm.io/gen/field"
-
-	"gorm.io/plugin/dbresolver"
-
-	"dousheng/dal/model"
-)
-
-func newUser(db *gorm.DB, opts ...gen.DOOption) user {
-	_user := user{}
-
-	_user.userDo.UseDB(db, opts...)
-	_user.userDo.UseModel(&model.User{})
-
-	tableName := _user.userDo.TableName()
-	_user.ALL = field.NewAsterisk(tableName)
-	_user.UserID = field.NewInt64(tableName, "user_id")
-	_user.Name = field.NewString(tableName, "name")
-	_user.FollowCount = field.NewInt32(tableName, "follow_count")
-	_user.FollowerCount = field.NewInt32(tableName, "follower_count")
-	_user.IsFollow = field.NewInt32(tableName, "is_follow")
-	_user.Password = field.NewString(tableName, "password")
-	_user.CreateTime = field.NewTime(tableName, "create_time")
-
-	_user.fillFieldMap()
-
-	return _user
-}
-
-type user struct {
-	userDo
-
-	ALL           field.Asterisk
-	UserID        field.Int64  // 用户id
-	Name          field.String // 用户名
-	FollowCount   field.Int32  // 关注总数
-	FollowerCount field.Int32  // 粉丝总数
-	IsFollow      field.Int32  // 1:未关注,0:已关注
-	Password      field.String // 密码
-	CreateTime    field.Time   // 创建时间
-
-	fieldMap map[string]field.Expr
-}
-
-func (u user) Table(newTableName string) *user {
-	u.userDo.UseTable(newTableName)
-	return u.updateTableName(newTableName)
-}
-
-func (u user) As(alias string) *user {
-	u.userDo.DO = *(u.userDo.As(alias).(*gen.DO))
-	return u.updateTableName(alias)
-}
-
-func (u *user) updateTableName(table string) *user {
-	u.ALL = field.NewAsterisk(table)
-	u.UserID = field.NewInt64(table, "user_id")
-	u.Name = field.NewString(table, "name")
-	u.FollowCount = field.NewInt32(table, "follow_count")
-	u.FollowerCount = field.NewInt32(table, "follower_count")
-	u.IsFollow = field.NewInt32(table, "is_follow")
-	u.Password = field.NewString(table, "password")
-	u.CreateTime = field.NewTime(table, "create_time")
-
-	u.fillFieldMap()
-
-	return u
-}
-
-func (u *user) GetFieldByName(fieldName string) (field.OrderExpr, bool) {
-	_f, ok := u.fieldMap[fieldName]
-	if !ok || _f == nil {
-		return nil, false
-	}
-	_oe, ok := _f.(field.OrderExpr)
-	return _oe, ok
-}
-
-func (u *user) fillFieldMap() {
-	u.fieldMap = make(map[string]field.Expr, 7)
-	u.fieldMap["user_id"] = u.UserID
-	u.fieldMap["name"] = u.Name
-	u.fieldMap["follow_count"] = u.FollowCount
-	u.fieldMap["follower_count"] = u.FollowerCount
-	u.fieldMap["is_follow"] = u.IsFollow
-	u.fieldMap["password"] = u.Password
-	u.fieldMap["create_time"] = u.CreateTime
-}
-
-func (u user) clone(db *gorm.DB) user {
-	u.userDo.ReplaceConnPool(db.Statement.ConnPool)
-	return u
-}
-
-func (u user) replaceDB(db *gorm.DB) user {
-	u.userDo.ReplaceDB(db)
-	return u
-}
-
-type userDo struct{ gen.DO }
-
-func (u userDo) Debug() *userDo {
-	return u.withDO(u.DO.Debug())
-}
-
-func (u userDo) WithContext(ctx context.Context) *userDo {
-	return u.withDO(u.DO.WithContext(ctx))
-}
-
-func (u userDo) ReadDB() *userDo {
-	return u.Clauses(dbresolver.Read)
-}
-
-func (u userDo) WriteDB() *userDo {
-	return u.Clauses(dbresolver.Write)
-}
-
-func (u userDo) Session(config *gorm.Session) *userDo {
-	return u.withDO(u.DO.Session(config))
-}
-
-func (u userDo) Clauses(conds ...clause.Expression) *userDo {
-	return u.withDO(u.DO.Clauses(conds...))
-}
-
-func (u userDo) Returning(value interface{}, columns ...string) *userDo {
-	return u.withDO(u.DO.Returning(value, columns...))
-}
-
-func (u userDo) Not(conds ...gen.Condition) *userDo {
-	return u.withDO(u.DO.Not(conds...))
-}
-
-func (u userDo) Or(conds ...gen.Condition) *userDo {
-	return u.withDO(u.DO.Or(conds...))
-}
-
-func (u userDo) Select(conds ...field.Expr) *userDo {
-	return u.withDO(u.DO.Select(conds...))
-}
-
-func (u userDo) Where(conds ...gen.Condition) *userDo {
-	return u.withDO(u.DO.Where(conds...))
-}
-
-func (u userDo) Exists(subquery interface{ UnderlyingDB() *gorm.DB }) *userDo {
-	return u.Where(field.CompareSubQuery(field.ExistsOp, nil, subquery.UnderlyingDB()))
-}
-
-func (u userDo) Order(conds ...field.Expr) *userDo {
-	return u.withDO(u.DO.Order(conds...))
-}
-
-func (u userDo) Distinct(cols ...field.Expr) *userDo {
-	return u.withDO(u.DO.Distinct(cols...))
-}
-
-func (u userDo) Omit(cols ...field.Expr) *userDo {
-	return u.withDO(u.DO.Omit(cols...))
-}
-
-func (u userDo) Join(table schema.Tabler, on ...field.Expr) *userDo {
-	return u.withDO(u.DO.Join(table, on...))
-}
-
-func (u userDo) LeftJoin(table schema.Tabler, on ...field.Expr) *userDo {
-	return u.withDO(u.DO.LeftJoin(table, on...))
-}
-
-func (u userDo) RightJoin(table schema.Tabler, on ...field.Expr) *userDo {
-	return u.withDO(u.DO.RightJoin(table, on...))
-}
-
-func (u userDo) Group(cols ...field.Expr) *userDo {
-	return u.withDO(u.DO.Group(cols...))
-}
-
-func (u userDo) Having(conds ...gen.Condition) *userDo {
-	return u.withDO(u.DO.Having(conds...))
-}
-
-func (u userDo) Limit(limit int) *userDo {
-	return u.withDO(u.DO.Limit(limit))
-}
-
-func (u userDo) Offset(offset int) *userDo {
-	return u.withDO(u.DO.Offset(offset))
-}
-
-func (u userDo) Scopes(funcs ...func(gen.Dao) gen.Dao) *userDo {
-	return u.withDO(u.DO.Scopes(funcs...))
-}
-
-func (u userDo) Unscoped() *userDo {
-	return u.withDO(u.DO.Unscoped())
-}
-
-func (u userDo) Create(values ...*model.User) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return u.DO.Create(values)
-}
-
-func (u userDo) CreateInBatches(values []*model.User, batchSize int) error {
-	return u.DO.CreateInBatches(values, batchSize)
-}
-
-// Save : !!! underlying implementation is different with GORM
-// The method is equivalent to executing the statement: db.Clauses(clause.OnConflict{UpdateAll: true}).Create(values)
-func (u userDo) Save(values ...*model.User) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return u.DO.Save(values)
-}
-
-func (u userDo) First() (*model.User, error) {
-	if result, err := u.DO.First(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.User), nil
-	}
-}
-
-func (u userDo) Take() (*model.User, error) {
-	if result, err := u.DO.Take(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.User), nil
-	}
-}
-
-func (u userDo) Last() (*model.User, error) {
-	if result, err := u.DO.Last(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.User), nil
-	}
-}
-
-func (u userDo) Find() ([]*model.User, error) {
-	result, err := u.DO.Find()
-	return result.([]*model.User), err
-}
-
-func (u userDo) FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*model.User, err error) {
-	buf := make([]*model.User, 0, batchSize)
-	err = u.DO.FindInBatches(&buf, batchSize, func(tx gen.Dao, batch int) error {
-		defer func() { results = append(results, buf...) }()
-		return fc(tx, batch)
-	})
-	return results, err
-}
-
-func (u userDo) FindInBatches(result *[]*model.User, batchSize int, fc func(tx gen.Dao, batch int) error) error {
-	return u.DO.FindInBatches(result, batchSize, fc)
-}
-
-func (u userDo) Attrs(attrs ...field.AssignExpr) *userDo {
-	return u.withDO(u.DO.Attrs(attrs...))
-}
-
-func (u userDo) Assign(attrs ...field.AssignExpr) *userDo {
-	return u.withDO(u.DO.Assign(attrs...))
-}
-
-func (u userDo) Joins(fields ...field.RelationField) *userDo {
-	for _, _f := range fields {
-		u = *u.withDO(u.DO.Joins(_f))
-	}
-	return &u
-}
-
-func (u userDo) Preload(fields ...field.RelationField) *userDo {
-	for _, _f := range fields {
-		u = *u.withDO(u.DO.Preload(_f))
-	}
-	return &u
-}
-
-func (u userDo) FirstOrInit() (*model.User, error) {
-	if result, err := u.DO.FirstOrInit(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.User), nil
-	}
-}
-
-func (u userDo) FirstOrCreate() (*model.User, error) {
-	if result, err := u.DO.FirstOrCreate(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.User), nil
-	}
-}
-
-func (u userDo) FindByPage(offset int, limit int) (result []*model.User, count int64, err error) {
-	result, err = u.Offset(offset).Limit(limit).Find()
-	if err != nil {
-		return
-	}
-
-	if size := len(result); 0 < limit && 0 < size && size < limit {
-		count = int64(size + offset)
-		return
-	}
-
-	count, err = u.Offset(-1).Limit(-1).Count()
-	return
-}
-
-func (u userDo) ScanByPage(result interface{}, offset int, limit int) (count int64, err error) {
-	count, err = u.Count()
-	if err != nil {
-		return
-	}
-
-	err = u.Offset(offset).Limit(limit).Scan(result)
-	return
-}
-
-func (u userDo) Scan(result interface{}) (err error) {
-	return u.DO.Scan(result)
-}
-
-func (u userDo) Delete(models ...*model.User) (result gen.ResultInfo, err error) {
-	return u.DO.Delete(models)
-}
-
-func (u *userDo) withDO(do gen.Dao) *userDo {
-	u.DO = *do.(*gen.DO)
-	return u
-}
Index: kitex_gen/video/videosvr/videosvr.go
===================================================================
diff --git a/kitex_gen/video/videosvr/videosvr.go b/kitex_gen/video/videosvr/videosvr.go
deleted file mode 100644
--- a/kitex_gen/video/videosvr/videosvr.go	
+++ /dev/null	
@@ -1,516 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package videosvr
-
-import (
-	"context"
-	video "dousheng/kitex_gen/video"
-	"fmt"
-	client "github.com/cloudwego/kitex/client"
-	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
-	streaming "github.com/cloudwego/kitex/pkg/streaming"
-	proto "google.golang.org/protobuf/proto"
-)
-
-func serviceInfo() *kitex.ServiceInfo {
-	return videoSvrServiceInfo
-}
-
-var videoSvrServiceInfo = NewServiceInfo()
-
-func NewServiceInfo() *kitex.ServiceInfo {
-	serviceName := "VideoSvr"
-	handlerType := (*video.VideoSvr)(nil)
-	methods := map[string]kitex.MethodInfo{
-		"Feed":        kitex.NewMethodInfo(feedHandler, newFeedArgs, newFeedResult, false),
-		"Publish":     kitex.NewMethodInfo(publishHandler, newPublishArgs, newPublishResult, false),
-		"PublishList": kitex.NewMethodInfo(publishListHandler, newPublishListArgs, newPublishListResult, false),
-	}
-	extra := map[string]interface{}{
-		"PackageName": "video",
-	}
-	svcInfo := &kitex.ServiceInfo{
-		ServiceName:     serviceName,
-		HandlerType:     handlerType,
-		Methods:         methods,
-		PayloadCodec:    kitex.Protobuf,
-		KiteXGenVersion: "v0.4.4",
-		Extra:           extra,
-	}
-	return svcInfo
-}
-
-func feedHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(video.DouyinFeedRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(video.VideoSvr).Feed(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *FeedArgs:
-		success, err := handler.(video.VideoSvr).Feed(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*FeedResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newFeedArgs() interface{} {
-	return &FeedArgs{}
-}
-
-func newFeedResult() interface{} {
-	return &FeedResult{}
-}
-
-type FeedArgs struct {
-	Req *video.DouyinFeedRequest
-}
-
-func (p *FeedArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(video.DouyinFeedRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *FeedArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *FeedArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *FeedArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in FeedArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *FeedArgs) Unmarshal(in []byte) error {
-	msg := new(video.DouyinFeedRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var FeedArgs_Req_DEFAULT *video.DouyinFeedRequest
-
-func (p *FeedArgs) GetReq() *video.DouyinFeedRequest {
-	if !p.IsSetReq() {
-		return FeedArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *FeedArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type FeedResult struct {
-	Success *video.DouyinFeedResponse
-}
-
-var FeedResult_Success_DEFAULT *video.DouyinFeedResponse
-
-func (p *FeedResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(video.DouyinFeedResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *FeedResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *FeedResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *FeedResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in FeedResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *FeedResult) Unmarshal(in []byte) error {
-	msg := new(video.DouyinFeedResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *FeedResult) GetSuccess() *video.DouyinFeedResponse {
-	if !p.IsSetSuccess() {
-		return FeedResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *FeedResult) SetSuccess(x interface{}) {
-	p.Success = x.(*video.DouyinFeedResponse)
-}
-
-func (p *FeedResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func publishHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(video.DouyinPublishActionRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(video.VideoSvr).Publish(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *PublishArgs:
-		success, err := handler.(video.VideoSvr).Publish(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*PublishResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newPublishArgs() interface{} {
-	return &PublishArgs{}
-}
-
-func newPublishResult() interface{} {
-	return &PublishResult{}
-}
-
-type PublishArgs struct {
-	Req *video.DouyinPublishActionRequest
-}
-
-func (p *PublishArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(video.DouyinPublishActionRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *PublishArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *PublishArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *PublishArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in PublishArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *PublishArgs) Unmarshal(in []byte) error {
-	msg := new(video.DouyinPublishActionRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var PublishArgs_Req_DEFAULT *video.DouyinPublishActionRequest
-
-func (p *PublishArgs) GetReq() *video.DouyinPublishActionRequest {
-	if !p.IsSetReq() {
-		return PublishArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *PublishArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type PublishResult struct {
-	Success *video.DouyinPublishActionResponse
-}
-
-var PublishResult_Success_DEFAULT *video.DouyinPublishActionResponse
-
-func (p *PublishResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(video.DouyinPublishActionResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *PublishResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *PublishResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *PublishResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in PublishResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *PublishResult) Unmarshal(in []byte) error {
-	msg := new(video.DouyinPublishActionResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *PublishResult) GetSuccess() *video.DouyinPublishActionResponse {
-	if !p.IsSetSuccess() {
-		return PublishResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *PublishResult) SetSuccess(x interface{}) {
-	p.Success = x.(*video.DouyinPublishActionResponse)
-}
-
-func (p *PublishResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func publishListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(video.DouyinPublishListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(video.VideoSvr).PublishList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *PublishListArgs:
-		success, err := handler.(video.VideoSvr).PublishList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*PublishListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newPublishListArgs() interface{} {
-	return &PublishListArgs{}
-}
-
-func newPublishListResult() interface{} {
-	return &PublishListResult{}
-}
-
-type PublishListArgs struct {
-	Req *video.DouyinPublishListRequest
-}
-
-func (p *PublishListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(video.DouyinPublishListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *PublishListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *PublishListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *PublishListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in PublishListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *PublishListArgs) Unmarshal(in []byte) error {
-	msg := new(video.DouyinPublishListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var PublishListArgs_Req_DEFAULT *video.DouyinPublishListRequest
-
-func (p *PublishListArgs) GetReq() *video.DouyinPublishListRequest {
-	if !p.IsSetReq() {
-		return PublishListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *PublishListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type PublishListResult struct {
-	Success *video.DouyinPublishListResponse
-}
-
-var PublishListResult_Success_DEFAULT *video.DouyinPublishListResponse
-
-func (p *PublishListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(video.DouyinPublishListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *PublishListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *PublishListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *PublishListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in PublishListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *PublishListResult) Unmarshal(in []byte) error {
-	msg := new(video.DouyinPublishListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *PublishListResult) GetSuccess() *video.DouyinPublishListResponse {
-	if !p.IsSetSuccess() {
-		return PublishListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *PublishListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*video.DouyinPublishListResponse)
-}
-
-func (p *PublishListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-type kClient struct {
-	c client.Client
-}
-
-func newServiceClient(c client.Client) *kClient {
-	return &kClient{
-		c: c,
-	}
-}
-
-func (p *kClient) Feed(ctx context.Context, Req *video.DouyinFeedRequest) (r *video.DouyinFeedResponse, err error) {
-	var _args FeedArgs
-	_args.Req = Req
-	var _result FeedResult
-	if err = p.c.Call(ctx, "Feed", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) Publish(ctx context.Context, Req *video.DouyinPublishActionRequest) (r *video.DouyinPublishActionResponse, err error) {
-	var _args PublishArgs
-	_args.Req = Req
-	var _result PublishResult
-	if err = p.c.Call(ctx, "Publish", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) PublishList(ctx context.Context, Req *video.DouyinPublishListRequest) (r *video.DouyinPublishListResponse, err error) {
-	var _args PublishListArgs
-	_args.Req = Req
-	var _result PublishListResult
-	if err = p.c.Call(ctx, "PublishList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
Index: dal/db/tb_favorite.gen.go
===================================================================
diff --git a/dal/db/tb_favorite.gen.go b/dal/db/tb_favorite.gen.go
deleted file mode 100644
--- a/dal/db/tb_favorite.gen.go	
+++ /dev/null	
@@ -1,343 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package db
-
-import (
-	"context"
-
-	"gorm.io/gorm"
-	"gorm.io/gorm/clause"
-	"gorm.io/gorm/schema"
-
-	"gorm.io/gen"
-	"gorm.io/gen/field"
-
-	"gorm.io/plugin/dbresolver"
-
-	"dousheng/dal/model"
-)
-
-func newFavorite(db *gorm.DB, opts ...gen.DOOption) favorite {
-	_favorite := favorite{}
-
-	_favorite.favoriteDo.UseDB(db, opts...)
-	_favorite.favoriteDo.UseModel(&model.Favorite{})
-
-	tableName := _favorite.favoriteDo.TableName()
-	_favorite.ALL = field.NewAsterisk(tableName)
-	_favorite.FavoriteID = field.NewInt64(tableName, "favorite_id")
-	_favorite.Username = field.NewString(tableName, "username")
-	_favorite.UserID = field.NewInt64(tableName, "user_id")
-	_favorite.VideoID = field.NewInt64(tableName, "video_id")
-	_favorite.IsDeleted = field.NewInt32(tableName, "is_deleted")
-	_favorite.CreateTime = field.NewTime(tableName, "create_time")
-
-	_favorite.fillFieldMap()
-
-	return _favorite
-}
-
-type favorite struct {
-	favoriteDo
-
-	ALL        field.Asterisk
-	FavoriteID field.Int64  // 点赞id
-	Username   field.String // 用户名
-	UserID     field.Int64  // 用户id
-	VideoID    field.Int64  // 视频id
-	IsDeleted  field.Int32  // 取消点赞
-	CreateTime field.Time   // 创建时间
-
-	fieldMap map[string]field.Expr
-}
-
-func (f favorite) Table(newTableName string) *favorite {
-	f.favoriteDo.UseTable(newTableName)
-	return f.updateTableName(newTableName)
-}
-
-func (f favorite) As(alias string) *favorite {
-	f.favoriteDo.DO = *(f.favoriteDo.As(alias).(*gen.DO))
-	return f.updateTableName(alias)
-}
-
-func (f *favorite) updateTableName(table string) *favorite {
-	f.ALL = field.NewAsterisk(table)
-	f.FavoriteID = field.NewInt64(table, "favorite_id")
-	f.Username = field.NewString(table, "username")
-	f.UserID = field.NewInt64(table, "user_id")
-	f.VideoID = field.NewInt64(table, "video_id")
-	f.IsDeleted = field.NewInt32(table, "is_deleted")
-	f.CreateTime = field.NewTime(table, "create_time")
-
-	f.fillFieldMap()
-
-	return f
-}
-
-func (f *favorite) GetFieldByName(fieldName string) (field.OrderExpr, bool) {
-	_f, ok := f.fieldMap[fieldName]
-	if !ok || _f == nil {
-		return nil, false
-	}
-	_oe, ok := _f.(field.OrderExpr)
-	return _oe, ok
-}
-
-func (f *favorite) fillFieldMap() {
-	f.fieldMap = make(map[string]field.Expr, 6)
-	f.fieldMap["favorite_id"] = f.FavoriteID
-	f.fieldMap["username"] = f.Username
-	f.fieldMap["user_id"] = f.UserID
-	f.fieldMap["video_id"] = f.VideoID
-	f.fieldMap["is_deleted"] = f.IsDeleted
-	f.fieldMap["create_time"] = f.CreateTime
-}
-
-func (f favorite) clone(db *gorm.DB) favorite {
-	f.favoriteDo.ReplaceConnPool(db.Statement.ConnPool)
-	return f
-}
-
-func (f favorite) replaceDB(db *gorm.DB) favorite {
-	f.favoriteDo.ReplaceDB(db)
-	return f
-}
-
-type favoriteDo struct{ gen.DO }
-
-func (f favoriteDo) Debug() *favoriteDo {
-	return f.withDO(f.DO.Debug())
-}
-
-func (f favoriteDo) WithContext(ctx context.Context) *favoriteDo {
-	return f.withDO(f.DO.WithContext(ctx))
-}
-
-func (f favoriteDo) ReadDB() *favoriteDo {
-	return f.Clauses(dbresolver.Read)
-}
-
-func (f favoriteDo) WriteDB() *favoriteDo {
-	return f.Clauses(dbresolver.Write)
-}
-
-func (f favoriteDo) Session(config *gorm.Session) *favoriteDo {
-	return f.withDO(f.DO.Session(config))
-}
-
-func (f favoriteDo) Clauses(conds ...clause.Expression) *favoriteDo {
-	return f.withDO(f.DO.Clauses(conds...))
-}
-
-func (f favoriteDo) Returning(value interface{}, columns ...string) *favoriteDo {
-	return f.withDO(f.DO.Returning(value, columns...))
-}
-
-func (f favoriteDo) Not(conds ...gen.Condition) *favoriteDo {
-	return f.withDO(f.DO.Not(conds...))
-}
-
-func (f favoriteDo) Or(conds ...gen.Condition) *favoriteDo {
-	return f.withDO(f.DO.Or(conds...))
-}
-
-func (f favoriteDo) Select(conds ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.Select(conds...))
-}
-
-func (f favoriteDo) Where(conds ...gen.Condition) *favoriteDo {
-	return f.withDO(f.DO.Where(conds...))
-}
-
-func (f favoriteDo) Exists(subquery interface{ UnderlyingDB() *gorm.DB }) *favoriteDo {
-	return f.Where(field.CompareSubQuery(field.ExistsOp, nil, subquery.UnderlyingDB()))
-}
-
-func (f favoriteDo) Order(conds ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.Order(conds...))
-}
-
-func (f favoriteDo) Distinct(cols ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.Distinct(cols...))
-}
-
-func (f favoriteDo) Omit(cols ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.Omit(cols...))
-}
-
-func (f favoriteDo) Join(table schema.Tabler, on ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.Join(table, on...))
-}
-
-func (f favoriteDo) LeftJoin(table schema.Tabler, on ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.LeftJoin(table, on...))
-}
-
-func (f favoriteDo) RightJoin(table schema.Tabler, on ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.RightJoin(table, on...))
-}
-
-func (f favoriteDo) Group(cols ...field.Expr) *favoriteDo {
-	return f.withDO(f.DO.Group(cols...))
-}
-
-func (f favoriteDo) Having(conds ...gen.Condition) *favoriteDo {
-	return f.withDO(f.DO.Having(conds...))
-}
-
-func (f favoriteDo) Limit(limit int) *favoriteDo {
-	return f.withDO(f.DO.Limit(limit))
-}
-
-func (f favoriteDo) Offset(offset int) *favoriteDo {
-	return f.withDO(f.DO.Offset(offset))
-}
-
-func (f favoriteDo) Scopes(funcs ...func(gen.Dao) gen.Dao) *favoriteDo {
-	return f.withDO(f.DO.Scopes(funcs...))
-}
-
-func (f favoriteDo) Unscoped() *favoriteDo {
-	return f.withDO(f.DO.Unscoped())
-}
-
-func (f favoriteDo) Create(values ...*model.Favorite) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return f.DO.Create(values)
-}
-
-func (f favoriteDo) CreateInBatches(values []*model.Favorite, batchSize int) error {
-	return f.DO.CreateInBatches(values, batchSize)
-}
-
-// Save : !!! underlying implementation is different with GORM
-// The method is equivalent to executing the statement: db.Clauses(clause.OnConflict{UpdateAll: true}).Create(values)
-func (f favoriteDo) Save(values ...*model.Favorite) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return f.DO.Save(values)
-}
-
-func (f favoriteDo) First() (*model.Favorite, error) {
-	if result, err := f.DO.First(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Favorite), nil
-	}
-}
-
-func (f favoriteDo) Take() (*model.Favorite, error) {
-	if result, err := f.DO.Take(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Favorite), nil
-	}
-}
-
-func (f favoriteDo) Last() (*model.Favorite, error) {
-	if result, err := f.DO.Last(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Favorite), nil
-	}
-}
-
-func (f favoriteDo) Find() ([]*model.Favorite, error) {
-	result, err := f.DO.Find()
-	return result.([]*model.Favorite), err
-}
-
-func (f favoriteDo) FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*model.Favorite, err error) {
-	buf := make([]*model.Favorite, 0, batchSize)
-	err = f.DO.FindInBatches(&buf, batchSize, func(tx gen.Dao, batch int) error {
-		defer func() { results = append(results, buf...) }()
-		return fc(tx, batch)
-	})
-	return results, err
-}
-
-func (f favoriteDo) FindInBatches(result *[]*model.Favorite, batchSize int, fc func(tx gen.Dao, batch int) error) error {
-	return f.DO.FindInBatches(result, batchSize, fc)
-}
-
-func (f favoriteDo) Attrs(attrs ...field.AssignExpr) *favoriteDo {
-	return f.withDO(f.DO.Attrs(attrs...))
-}
-
-func (f favoriteDo) Assign(attrs ...field.AssignExpr) *favoriteDo {
-	return f.withDO(f.DO.Assign(attrs...))
-}
-
-func (f favoriteDo) Joins(fields ...field.RelationField) *favoriteDo {
-	for _, _f := range fields {
-		f = *f.withDO(f.DO.Joins(_f))
-	}
-	return &f
-}
-
-func (f favoriteDo) Preload(fields ...field.RelationField) *favoriteDo {
-	for _, _f := range fields {
-		f = *f.withDO(f.DO.Preload(_f))
-	}
-	return &f
-}
-
-func (f favoriteDo) FirstOrInit() (*model.Favorite, error) {
-	if result, err := f.DO.FirstOrInit(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Favorite), nil
-	}
-}
-
-func (f favoriteDo) FirstOrCreate() (*model.Favorite, error) {
-	if result, err := f.DO.FirstOrCreate(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Favorite), nil
-	}
-}
-
-func (f favoriteDo) FindByPage(offset int, limit int) (result []*model.Favorite, count int64, err error) {
-	result, err = f.Offset(offset).Limit(limit).Find()
-	if err != nil {
-		return
-	}
-
-	if size := len(result); 0 < limit && 0 < size && size < limit {
-		count = int64(size + offset)
-		return
-	}
-
-	count, err = f.Offset(-1).Limit(-1).Count()
-	return
-}
-
-func (f favoriteDo) ScanByPage(result interface{}, offset int, limit int) (count int64, err error) {
-	count, err = f.Count()
-	if err != nil {
-		return
-	}
-
-	err = f.Offset(offset).Limit(limit).Scan(result)
-	return
-}
-
-func (f favoriteDo) Scan(result interface{}) (err error) {
-	return f.DO.Scan(result)
-}
-
-func (f favoriteDo) Delete(models ...*model.Favorite) (result gen.ResultInfo, err error) {
-	return f.DO.Delete(models)
-}
-
-func (f *favoriteDo) withDO(do gen.Dao) *favoriteDo {
-	f.DO = *do.(*gen.DO)
-	return f
-}
Index: kitex_gen/user/user.pb.go
===================================================================
diff --git a/kitex_gen/user/user.pb.go b/kitex_gen/user/user.pb.go
deleted file mode 100644
--- a/kitex_gen/user/user.pb.go	
+++ /dev/null	
@@ -1,713 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.1
-// 	protoc        v3.17.2
-// source: user.proto
-
-package user
-
-import (
-	context "context"
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinUserRegisterRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 注册用户名，最长32个字符
-	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 密码，最长32个字符
-}
-
-func (x *DouyinUserRegisterRequest) Reset() {
-	*x = DouyinUserRegisterRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserRegisterRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserRegisterRequest) ProtoMessage() {}
-
-func (x *DouyinUserRegisterRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserRegisterRequest.ProtoReflect.Descriptor instead.
-func (*DouyinUserRegisterRequest) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinUserRegisterRequest) GetUsername() string {
-	if x != nil {
-		return x.Username
-	}
-	return ""
-}
-
-func (x *DouyinUserRegisterRequest) GetPassword() string {
-	if x != nil {
-		return x.Password
-	}
-	return ""
-}
-
-type DouyinUserRegisterResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserId     int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 用户id
-	Token      string  `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                                // 用户鉴权token
-}
-
-func (x *DouyinUserRegisterResponse) Reset() {
-	*x = DouyinUserRegisterResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserRegisterResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserRegisterResponse) ProtoMessage() {}
-
-func (x *DouyinUserRegisterResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserRegisterResponse.ProtoReflect.Descriptor instead.
-func (*DouyinUserRegisterResponse) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinUserRegisterResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinUserRegisterResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinUserRegisterResponse) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinUserRegisterResponse) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinUserLoginRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // 登录用户名
-	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` // 登录密码
-}
-
-func (x *DouyinUserLoginRequest) Reset() {
-	*x = DouyinUserLoginRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserLoginRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserLoginRequest) ProtoMessage() {}
-
-func (x *DouyinUserLoginRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserLoginRequest.ProtoReflect.Descriptor instead.
-func (*DouyinUserLoginRequest) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinUserLoginRequest) GetUsername() string {
-	if x != nil {
-		return x.Username
-	}
-	return ""
-}
-
-func (x *DouyinUserLoginRequest) GetPassword() string {
-	if x != nil {
-		return x.Password
-	}
-	return ""
-}
-
-type DouyinUserLoginResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	UserId     int64   `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`               // 用户id
-	Token      string  `protobuf:"bytes,4,opt,name=token,proto3" json:"token,omitempty"`                                // 用户鉴权token
-}
-
-func (x *DouyinUserLoginResponse) Reset() {
-	*x = DouyinUserLoginResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserLoginResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserLoginResponse) ProtoMessage() {}
-
-func (x *DouyinUserLoginResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserLoginResponse.ProtoReflect.Descriptor instead.
-func (*DouyinUserLoginResponse) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinUserLoginResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinUserLoginResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinUserLoginResponse) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinUserLoginResponse) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinUserRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinUserRequest) Reset() {
-	*x = DouyinUserRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserRequest) ProtoMessage() {}
-
-func (x *DouyinUserRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserRequest.ProtoReflect.Descriptor instead.
-func (*DouyinUserRequest) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *DouyinUserRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinUserRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinUserResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	User       *User   `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                  // 用户信息
-}
-
-func (x *DouyinUserResponse) Reset() {
-	*x = DouyinUserResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinUserResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinUserResponse) ProtoMessage() {}
-
-func (x *DouyinUserResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinUserResponse.ProtoReflect.Descriptor instead.
-func (*DouyinUserResponse) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{5}
-}
-
-func (x *DouyinUserResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinUserResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinUserResponse) GetUser() *User {
-	if x != nil {
-		return x.User
-	}
-	return nil
-}
-
-type User struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                                  // 用户id
-	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                               // 用户名称
-	FollowCount   *int64 `protobuf:"varint,3,opt,name=follow_count,json=followCount,proto3,oneof" json:"follow_count,omitempty"`       // 关注总数
-	FollowerCount *int64 `protobuf:"varint,4,opt,name=follower_count,json=followerCount,proto3,oneof" json:"follower_count,omitempty"` // 粉丝总数
-	IsFollow      bool   `protobuf:"varint,5,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty"`                      // true-已关注，false-未关注
-}
-
-func (x *User) Reset() {
-	*x = User{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_user_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *User) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*User) ProtoMessage() {}
-
-func (x *User) ProtoReflect() protoreflect.Message {
-	mi := &file_user_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use User.ProtoReflect.Descriptor instead.
-func (*User) Descriptor() ([]byte, []int) {
-	return file_user_proto_rawDescGZIP(), []int{6}
-}
-
-func (x *User) GetId() int64 {
-	if x != nil {
-		return x.Id
-	}
-	return 0
-}
-
-func (x *User) GetName() string {
-	if x != nil {
-		return x.Name
-	}
-	return ""
-}
-
-func (x *User) GetFollowCount() int64 {
-	if x != nil && x.FollowCount != nil {
-		return *x.FollowCount
-	}
-	return 0
-}
-
-func (x *User) GetFollowerCount() int64 {
-	if x != nil && x.FollowerCount != nil {
-		return *x.FollowerCount
-	}
-	return 0
-}
-
-func (x *User) GetIsFollow() bool {
-	if x != nil {
-		return x.IsFollow
-	}
-	return false
-}
-
-var File_user_proto protoreflect.FileDescriptor
-
-var file_user_proto_rawDesc = []byte{
-	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
-	0x65, 0x72, 0x22, 0x56, 0x0a, 0x1c, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65,
-	0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
-	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xa2, 0x01, 0x0a, 0x1d, 0x64,
-	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
-	0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b,
-	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
-	0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a,
-	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
-	0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01,
-	0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01,
-	0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
-	0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
-	0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22,
-	0x53, 0x0a, 0x19, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c,
-	0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08,
-	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
-	0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
-	0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
-	0x77, 0x6f, 0x72, 0x64, 0x22, 0x9f, 0x01, 0x0a, 0x1a, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f,
-	0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72,
-	0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
-	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x44, 0x0a, 0x13, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a,
-	0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
-	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x8a, 0x01, 0x0a,
-	0x14, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73,
-	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f,
-	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74,
-	0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x04, 0x75, 0x73,
-	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e,
-	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0xbf, 0x01, 0x0a, 0x04, 0x55, 0x73,
-	0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
-	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
-	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b,
-	0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a,
-	0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
-	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
-	0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
-	0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
-	0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x66, 0x6f, 0x6c, 0x6c,
-	0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x66, 0x6f, 0x6c,
-	0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xec, 0x01, 0x0a, 0x07,
-	0x55, 0x73, 0x65, 0x72, 0x53, 0x76, 0x72, 0x12, 0x53, 0x0a, 0x08, 0x52, 0x65, 0x67, 0x69, 0x73,
-	0x74, 0x65, 0x72, 0x12, 0x22, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f,
-	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64,
-	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73,
-	0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4a, 0x0a, 0x05,
-	0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1f, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75,
-	0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72,
-	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f,
-	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f,
-	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x42,
-	0x79, 0x49, 0x64, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
-	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x75, 0x73, 0x65,
-	0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x64, 0x6f,
-	0x75, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e,
-	0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
-}
-
-var (
-	file_user_proto_rawDescOnce sync.Once
-	file_user_proto_rawDescData = file_user_proto_rawDesc
-)
-
-func file_user_proto_rawDescGZIP() []byte {
-	file_user_proto_rawDescOnce.Do(func() {
-		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
-	})
-	return file_user_proto_rawDescData
-}
-
-var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
-var file_user_proto_goTypes = []interface{}{
-	(*DouyinUserRegisterRequest)(nil),  // 0: user.douyin_user_register_request
-	(*DouyinUserRegisterResponse)(nil), // 1: user.douyin_user_register_response
-	(*DouyinUserLoginRequest)(nil),     // 2: user.douyin_user_login_request
-	(*DouyinUserLoginResponse)(nil),    // 3: user.douyin_user_login_response
-	(*DouyinUserRequest)(nil),          // 4: user.douyin_user_request
-	(*DouyinUserResponse)(nil),         // 5: user.douyin_user_response
-	(*User)(nil),                       // 6: user.User
-}
-var file_user_proto_depIdxs = []int32{
-	6, // 0: user.douyin_user_response.user:type_name -> user.User
-	0, // 1: user.UserSvr.Register:input_type -> user.douyin_user_register_request
-	2, // 2: user.UserSvr.Login:input_type -> user.douyin_user_login_request
-	4, // 3: user.UserSvr.GetById:input_type -> user.douyin_user_request
-	1, // 4: user.UserSvr.Register:output_type -> user.douyin_user_register_response
-	3, // 5: user.UserSvr.Login:output_type -> user.douyin_user_login_response
-	5, // 6: user.UserSvr.GetById:output_type -> user.douyin_user_response
-	4, // [4:7] is the sub-list for method output_type
-	1, // [1:4] is the sub-list for method input_type
-	1, // [1:1] is the sub-list for extension type_name
-	1, // [1:1] is the sub-list for extension extendee
-	0, // [0:1] is the sub-list for field type_name
-}
-
-func init() { file_user_proto_init() }
-func file_user_proto_init() {
-	if File_user_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserRegisterRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserRegisterResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserLoginRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserLoginResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinUserResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*User); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_user_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_user_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_user_proto_msgTypes[5].OneofWrappers = []interface{}{}
-	file_user_proto_msgTypes[6].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_user_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   7,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_user_proto_goTypes,
-		DependencyIndexes: file_user_proto_depIdxs,
-		MessageInfos:      file_user_proto_msgTypes,
-	}.Build()
-	File_user_proto = out.File
-	file_user_proto_rawDesc = nil
-	file_user_proto_goTypes = nil
-	file_user_proto_depIdxs = nil
-}
-
-var _ context.Context
-
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-type UserSvr interface {
-	Register(ctx context.Context, req *DouyinUserRegisterRequest) (res *DouyinUserRegisterResponse, err error)
-	Login(ctx context.Context, req *DouyinUserLoginRequest) (res *DouyinUserLoginResponse, err error)
-	GetById(ctx context.Context, req *DouyinUserRequest) (res *DouyinUserResponse, err error)
-}
Index: dal/model/tb_user.gen.go
===================================================================
diff --git a/dal/model/tb_user.gen.go b/dal/model/tb_user.gen.go
deleted file mode 100644
--- a/dal/model/tb_user.gen.go	
+++ /dev/null	
@@ -1,27 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package model
-
-import (
-	"time"
-)
-
-const TableNameUser = "tb_user"
-
-// User mapped from table <tb_user>
-type User struct {
-	UserID        int64     `gorm:"column:user_id;primaryKey;autoIncrement:true" json:"user_id"`              // 用户id
-	Name          string    `gorm:"column:name" json:"name"`                                                  // 用户名
-	FollowCount   int32     `gorm:"column:follow_count" json:"follow_count"`                                  // 关注总数
-	FollowerCount int32     `gorm:"column:follower_count" json:"follower_count"`                              // 粉丝总数
-	IsFollow      int32     `gorm:"column:is_follow" json:"is_follow"`                                        // 1:未关注,0:已关注
-	Password      string    `gorm:"column:password" json:"password"`                                          // 密码
-	CreateTime    time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 创建时间
-}
-
-// TableName User's table name
-func (*User) TableName() string {
-	return TableNameUser
-}
Index: biz/router/video/middleware.go
===================================================================
diff --git a/biz/router/video/middleware.go b/biz/router/video/middleware.go
deleted file mode 100644
--- a/biz/router/video/middleware.go	
+++ /dev/null	
@@ -1,12 +0,0 @@
-// Code generated by hertz generator.
-
-package Video
-
-import (
-	"github.com/cloudwego/hertz/pkg/app"
-)
-
-func rootMw() []app.HandlerFunc {
-	// your code...
-	return nil
-}
Index: biz/model/video/video.pb.go
===================================================================
diff --git a/biz/model/video/video.pb.go b/biz/model/video/video.pb.go
deleted file mode 100644
--- a/biz/model/video/video.pb.go	
+++ /dev/null	
@@ -1,834 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.0
-// 	protoc        v3.17.2
-// source: video.proto
-
-package video
-
-import (
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinFeedRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	LatestTime *int64  `protobuf:"varint,1,opt,name=latest_time,json=latestTime,proto3,oneof" json:"latest_time,omitempty" form:"latest_time" query:"latest_time"` // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
-	Token      *string `protobuf:"bytes,2,opt,name=token,proto3,oneof" json:"token,omitempty" form:"token" query:"token"`                                          // 可选参数，登录用户设置
-}
-
-func (x *DouyinFeedRequest) Reset() {
-	*x = DouyinFeedRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFeedRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFeedRequest) ProtoMessage() {}
-
-func (x *DouyinFeedRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFeedRequest.ProtoReflect.Descriptor instead.
-func (*DouyinFeedRequest) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinFeedRequest) GetLatestTime() int64 {
-	if x != nil && x.LatestTime != nil {
-		return *x.LatestTime
-	}
-	return 0
-}
-
-func (x *DouyinFeedRequest) GetToken() string {
-	if x != nil && x.Token != nil {
-		return *x.Token
-	}
-	return ""
-}
-
-type DouyinFeedResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty" form:"status_code" query:"status_code"` // 状态码，0-成功，其他值-失败
-	StatusMsg  *string  `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"` // 返回状态描述
-	VideoList  []*Video `protobuf:"bytes,3,rep,name=video_list,json=videoList,proto3" json:"video_list" form:"video_list" query:"video_list"`                 // 视频列表
-	NextTime   *int64   `protobuf:"varint,4,opt,name=next_time,json=nextTime,proto3,oneof" json:"next_time,omitempty" form:"next_time" query:"next_time"`     // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
-}
-
-func (x *DouyinFeedResponse) Reset() {
-	*x = DouyinFeedResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFeedResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFeedResponse) ProtoMessage() {}
-
-func (x *DouyinFeedResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFeedResponse.ProtoReflect.Descriptor instead.
-func (*DouyinFeedResponse) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinFeedResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinFeedResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinFeedResponse) GetVideoList() []*Video {
-	if x != nil {
-		return x.VideoList
-	}
-	return nil
-}
-
-func (x *DouyinFeedResponse) GetNextTime() int64 {
-	if x != nil && x.NextTime != nil {
-		return *x.NextTime
-	}
-	return 0
-}
-
-type DouyinPublishActionRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty" form:"token" query:"token"` // 用户鉴权token
-	Data  []byte `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty" form:"data" query:"data"`     // 视频数据
-	Title string `protobuf:"bytes,3,opt,name=title,proto3" json:"title,omitempty" form:"title" query:"title"` // 视频标题
-}
-
-func (x *DouyinPublishActionRequest) Reset() {
-	*x = DouyinPublishActionRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishActionRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishActionRequest) ProtoMessage() {}
-
-func (x *DouyinPublishActionRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishActionRequest.ProtoReflect.Descriptor instead.
-func (*DouyinPublishActionRequest) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinPublishActionRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinPublishActionRequest) GetData() []byte {
-	if x != nil {
-		return x.Data
-	}
-	return nil
-}
-
-func (x *DouyinPublishActionRequest) GetTitle() string {
-	if x != nil {
-		return x.Title
-	}
-	return ""
-}
-
-type DouyinPublishActionResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty" form:"status_code" query:"status_code"` // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"` // 返回状态描述
-}
-
-func (x *DouyinPublishActionResponse) Reset() {
-	*x = DouyinPublishActionResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishActionResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishActionResponse) ProtoMessage() {}
-
-func (x *DouyinPublishActionResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishActionResponse.ProtoReflect.Descriptor instead.
-func (*DouyinPublishActionResponse) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinPublishActionResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinPublishActionResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-type DouyinPublishListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty" form:"user_id" query:"user_id"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty" form:"token" query:"token"`                      // 用户鉴权token
-}
-
-func (x *DouyinPublishListRequest) Reset() {
-	*x = DouyinPublishListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishListRequest) ProtoMessage() {}
-
-func (x *DouyinPublishListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinPublishListRequest) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *DouyinPublishListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinPublishListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinPublishListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty" form:"status_code" query:"status_code"` // 状态码，0-成功，其他值-失败
-	StatusMsg  *string  `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty" form:"status_msg" query:"status_msg"` // 返回状态描述
-	VideoList  []*Video `protobuf:"bytes,3,rep,name=video_list,json=videoList,proto3" json:"video_list" form:"video_list" query:"video_list"`                 // 用户发布的视频列表
-}
-
-func (x *DouyinPublishListResponse) Reset() {
-	*x = DouyinPublishListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinPublishListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinPublishListResponse) ProtoMessage() {}
-
-func (x *DouyinPublishListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinPublishListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinPublishListResponse) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{5}
-}
-
-func (x *DouyinPublishListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinPublishListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinPublishListResponse) GetVideoList() []*Video {
-	if x != nil {
-		return x.VideoList
-	}
-	return nil
-}
-
-type Video struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" query:"id"`                                                                    // 视频唯一标识
-	Author        *User  `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty" form:"author" query:"author"`                                                     // 视频作者信息
-	PlayUrl       string `protobuf:"bytes,3,opt,name=play_url,json=playUrl,proto3" json:"play_url,omitempty" form:"play_url" query:"play_url"`                                // 视频播放地址
-	CoverUrl      string `protobuf:"bytes,4,opt,name=cover_url,json=coverUrl,proto3" json:"cover_url,omitempty" form:"cover_url" query:"cover_url"`                           // 视频封面地址
-	FavoriteCount int64  `protobuf:"varint,5,opt,name=favorite_count,json=favoriteCount,proto3" json:"favorite_count,omitempty" form:"favorite_count" query:"favorite_count"` // 视频的点赞总数
-	CommentCount  int64  `protobuf:"varint,6,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty" form:"comment_count" query:"comment_count"`      // 视频的评论总数
-	IsFavorite    bool   `protobuf:"varint,7,opt,name=is_favorite,json=isFavorite,proto3" json:"is_favorite,omitempty" form:"is_favorite" query:"is_favorite"`                // true-已点赞，false-未点赞
-	Title         string `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty" form:"title" query:"title"`                                                         // 视频标题
-}
-
-func (x *Video) Reset() {
-	*x = Video{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *Video) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*Video) ProtoMessage() {}
-
-func (x *Video) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use Video.ProtoReflect.Descriptor instead.
-func (*Video) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{6}
-}
-
-func (x *Video) GetId() int64 {
-	if x != nil {
-		return x.Id
-	}
-	return 0
-}
-
-func (x *Video) GetAuthor() *User {
-	if x != nil {
-		return x.Author
-	}
-	return nil
-}
-
-func (x *Video) GetPlayUrl() string {
-	if x != nil {
-		return x.PlayUrl
-	}
-	return ""
-}
-
-func (x *Video) GetCoverUrl() string {
-	if x != nil {
-		return x.CoverUrl
-	}
-	return ""
-}
-
-func (x *Video) GetFavoriteCount() int64 {
-	if x != nil {
-		return x.FavoriteCount
-	}
-	return 0
-}
-
-func (x *Video) GetCommentCount() int64 {
-	if x != nil {
-		return x.CommentCount
-	}
-	return 0
-}
-
-func (x *Video) GetIsFavorite() bool {
-	if x != nil {
-		return x.IsFavorite
-	}
-	return false
-}
-
-func (x *Video) GetTitle() string {
-	if x != nil {
-		return x.Title
-	}
-	return ""
-}
-
-type User struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Id            int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" form:"id" query:"id"`                                                                          // 用户id
-	Name          string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty" form:"name" query:"name"`                                                                   // 用户名称
-	FollowCount   *int64 `protobuf:"varint,3,opt,name=follow_count,json=followCount,proto3,oneof" json:"follow_count,omitempty" form:"follow_count" query:"follow_count"`           // 关注总数
-	FollowerCount *int64 `protobuf:"varint,4,opt,name=follower_count,json=followerCount,proto3,oneof" json:"follower_count,omitempty" form:"follower_count" query:"follower_count"` // 粉丝总数
-	IsFollow      bool   `protobuf:"varint,5,opt,name=is_follow,json=isFollow,proto3" json:"is_follow,omitempty" form:"is_follow" query:"is_follow"`                                // true-已关注，false-未关注
-}
-
-func (x *User) Reset() {
-	*x = User{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_video_proto_msgTypes[7]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *User) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*User) ProtoMessage() {}
-
-func (x *User) ProtoReflect() protoreflect.Message {
-	mi := &file_video_proto_msgTypes[7]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use User.ProtoReflect.Descriptor instead.
-func (*User) Descriptor() ([]byte, []int) {
-	return file_video_proto_rawDescGZIP(), []int{7}
-}
-
-func (x *User) GetId() int64 {
-	if x != nil {
-		return x.Id
-	}
-	return 0
-}
-
-func (x *User) GetName() string {
-	if x != nil {
-		return x.Name
-	}
-	return ""
-}
-
-func (x *User) GetFollowCount() int64 {
-	if x != nil && x.FollowCount != nil {
-		return *x.FollowCount
-	}
-	return 0
-}
-
-func (x *User) GetFollowerCount() int64 {
-	if x != nil && x.FollowerCount != nil {
-		return *x.FollowerCount
-	}
-	return 0
-}
-
-func (x *User) GetIsFollow() bool {
-	if x != nil {
-		return x.IsFollow
-	}
-	return false
-}
-
-var File_video_proto protoreflect.FileDescriptor
-
-var file_video_proto_rawDesc = []byte{
-	0x0a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x22, 0x70, 0x0a, 0x13, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66,
-	0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x6c,
-	0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
-	0x48, 0x00, 0x52, 0x0a, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
-	0x01, 0x12, 0x19, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
-	0x48, 0x01, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0x01, 0x01, 0x42, 0x0e, 0x0a, 0x0c,
-	0x5f, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x42, 0x08, 0x0a, 0x06,
-	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xc7, 0x01, 0x0a, 0x14, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
-	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
-	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
-	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
-	0x67, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69,
-	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
-	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
-	0x74, 0x12, 0x20, 0x0a, 0x09, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04,
-	0x20, 0x01, 0x28, 0x03, 0x48, 0x01, 0x52, 0x08, 0x6e, 0x65, 0x78, 0x74, 0x54, 0x69, 0x6d, 0x65,
-	0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x42, 0x0c, 0x0a, 0x0a, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x74, 0x69, 0x6d, 0x65,
-	0x22, 0x5f, 0x0a, 0x1d, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69,
-	0x73, 0x68, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
-	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x74,
-	0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
-	0x65, 0x22, 0x74, 0x0a, 0x1e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c,
-	0x69, 0x73, 0x68, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61,
-	0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x4c, 0x0a, 0x1b, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72,
-	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69,
-	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
-	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
-	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x9f, 0x01, 0x0a, 0x1c, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
-	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
-	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
-	0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0a, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
-	0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x09, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61,
-	0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0xf7, 0x01, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65,
-	0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
-	0x64, 0x12, 0x23, 0x0a, 0x06, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
-	0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06,
-	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x75,
-	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x6c, 0x61, 0x79, 0x55, 0x72,
-	0x6c, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x04,
-	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x25,
-	0x0a, 0x0e, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
-	0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
-	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
-	0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f,
-	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x69, 0x73,
-	0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52,
-	0x0a, 0x69, 0x73, 0x46, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
-	0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
-	0x65, 0x22, 0xbf, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
-	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
-	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x26,
-	0x0a, 0x0c, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
-	0x20, 0x01, 0x28, 0x03, 0x48, 0x00, 0x52, 0x0b, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x43, 0x6f,
-	0x75, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x2a, 0x0a, 0x0e, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77,
-	0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x48, 0x01,
-	0x52, 0x0d, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x88,
-	0x01, 0x01, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x18,
-	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x46, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x42,
-	0x0f, 0x0a, 0x0d, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74,
-	0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x66, 0x6f, 0x6c, 0x6c, 0x6f, 0x77, 0x65, 0x72, 0x5f, 0x63, 0x6f,
-	0x75, 0x6e, 0x74, 0x32, 0xfb, 0x01, 0x0a, 0x08, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x76, 0x72,
-	0x12, 0x3f, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x1a, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
-	0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71,
-	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75,
-	0x79, 0x69, 0x6e, 0x5f, 0x66, 0x65, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
-	0x65, 0x12, 0x56, 0x0a, 0x07, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x12, 0x24, 0x2e, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c,
-	0x69, 0x73, 0x68, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
-	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x0b, 0x50, 0x75, 0x62,
-	0x6c, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
-	0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x5f,
-	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x23, 0x2e, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x70, 0x75, 0x62, 0x6c,
-	0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
-	0x65, 0x42, 0x1a, 0x5a, 0x18, 0x64, 0x6f, 0x75, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x62, 0x69,
-	0x7a, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x62, 0x06, 0x70,
-	0x72, 0x6f, 0x74, 0x6f, 0x33,
-}
-
-var (
-	file_video_proto_rawDescOnce sync.Once
-	file_video_proto_rawDescData = file_video_proto_rawDesc
-)
-
-func file_video_proto_rawDescGZIP() []byte {
-	file_video_proto_rawDescOnce.Do(func() {
-		file_video_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_proto_rawDescData)
-	})
-	return file_video_proto_rawDescData
-}
-
-var file_video_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
-var file_video_proto_goTypes = []interface{}{
-	(*DouyinFeedRequest)(nil),           // 0: video.douyin_feed_request
-	(*DouyinFeedResponse)(nil),          // 1: video.douyin_feed_response
-	(*DouyinPublishActionRequest)(nil),  // 2: video.douyin_publish_action_request
-	(*DouyinPublishActionResponse)(nil), // 3: video.douyin_publish_action_response
-	(*DouyinPublishListRequest)(nil),    // 4: video.douyin_publish_list_request
-	(*DouyinPublishListResponse)(nil),   // 5: video.douyin_publish_list_response
-	(*Video)(nil),                       // 6: video.Video
-	(*User)(nil),                        // 7: video.User
-}
-var file_video_proto_depIdxs = []int32{
-	6, // 0: video.douyin_feed_response.video_list:type_name -> video.Video
-	6, // 1: video.douyin_publish_list_response.video_list:type_name -> video.Video
-	7, // 2: video.Video.author:type_name -> video.User
-	0, // 3: video.VideoSvr.Feed:input_type -> video.douyin_feed_request
-	2, // 4: video.VideoSvr.Publish:input_type -> video.douyin_publish_action_request
-	4, // 5: video.VideoSvr.PublishList:input_type -> video.douyin_publish_list_request
-	1, // 6: video.VideoSvr.Feed:output_type -> video.douyin_feed_response
-	3, // 7: video.VideoSvr.Publish:output_type -> video.douyin_publish_action_response
-	5, // 8: video.VideoSvr.PublishList:output_type -> video.douyin_publish_list_response
-	6, // [6:9] is the sub-list for method output_type
-	3, // [3:6] is the sub-list for method input_type
-	3, // [3:3] is the sub-list for extension type_name
-	3, // [3:3] is the sub-list for extension extendee
-	0, // [0:3] is the sub-list for field type_name
-}
-
-func init() { file_video_proto_init() }
-func file_video_proto_init() {
-	if File_video_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_video_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFeedRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFeedResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishActionRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishActionResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinPublishListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*Video); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_video_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*User); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_video_proto_msgTypes[0].OneofWrappers = []interface{}{}
-	file_video_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_video_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_video_proto_msgTypes[5].OneofWrappers = []interface{}{}
-	file_video_proto_msgTypes[7].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_video_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   8,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_video_proto_goTypes,
-		DependencyIndexes: file_video_proto_depIdxs,
-		MessageInfos:      file_video_proto_msgTypes,
-	}.Build()
-	File_video_proto = out.File
-	file_video_proto_rawDesc = nil
-	file_video_proto_goTypes = nil
-	file_video_proto_depIdxs = nil
-}
Index: kitex_gen/chat/chat.pb.go
===================================================================
diff --git a/kitex_gen/chat/chat.pb.go b/kitex_gen/chat/chat.pb.go
deleted file mode 100644
--- a/kitex_gen/chat/chat.pb.go	
+++ /dev/null	
@@ -1,540 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.1
-// 	protoc        v3.17.2
-// source: chat.proto
-
-package chat
-
-import (
-	context "context"
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinMessageChatRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token    string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                          // 用户鉴权token
-	ToUserId int64  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"` // 对方用户id
-}
-
-func (x *DouyinMessageChatRequest) Reset() {
-	*x = DouyinMessageChatRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_chat_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinMessageChatRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinMessageChatRequest) ProtoMessage() {}
-
-func (x *DouyinMessageChatRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_chat_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinMessageChatRequest.ProtoReflect.Descriptor instead.
-func (*DouyinMessageChatRequest) Descriptor() ([]byte, []int) {
-	return file_chat_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinMessageChatRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinMessageChatRequest) GetToUserId() int64 {
-	if x != nil {
-		return x.ToUserId
-	}
-	return 0
-}
-
-type DouyinMessageChatResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode  int32      `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg   *string    `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	MessageList []*Message `protobuf:"bytes,3,rep,name=message_list,json=messageList,proto3" json:"message_list,omitempty"` // 消息列表
-}
-
-func (x *DouyinMessageChatResponse) Reset() {
-	*x = DouyinMessageChatResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_chat_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinMessageChatResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinMessageChatResponse) ProtoMessage() {}
-
-func (x *DouyinMessageChatResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_chat_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinMessageChatResponse.ProtoReflect.Descriptor instead.
-func (*DouyinMessageChatResponse) Descriptor() ([]byte, []int) {
-	return file_chat_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinMessageChatResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinMessageChatResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinMessageChatResponse) GetMessageList() []*Message {
-	if x != nil {
-		return x.MessageList
-	}
-	return nil
-}
-
-type DouyinRelationActionRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                              // 用户鉴权token
-	ToUserId   int64  `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`     // 对方用户id
-	ActionType int32  `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // 1-发送消息
-	Content    string `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                          // 消息内容
-}
-
-func (x *DouyinRelationActionRequest) Reset() {
-	*x = DouyinRelationActionRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_chat_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationActionRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationActionRequest) ProtoMessage() {}
-
-func (x *DouyinRelationActionRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_chat_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationActionRequest.ProtoReflect.Descriptor instead.
-func (*DouyinRelationActionRequest) Descriptor() ([]byte, []int) {
-	return file_chat_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinRelationActionRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinRelationActionRequest) GetToUserId() int64 {
-	if x != nil {
-		return x.ToUserId
-	}
-	return 0
-}
-
-func (x *DouyinRelationActionRequest) GetActionType() int32 {
-	if x != nil {
-		return x.ActionType
-	}
-	return 0
-}
-
-func (x *DouyinRelationActionRequest) GetContent() string {
-	if x != nil {
-		return x.Content
-	}
-	return ""
-}
-
-type DouyinRelationActionResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-}
-
-func (x *DouyinRelationActionResponse) Reset() {
-	*x = DouyinRelationActionResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_chat_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinRelationActionResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinRelationActionResponse) ProtoMessage() {}
-
-func (x *DouyinRelationActionResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_chat_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinRelationActionResponse.ProtoReflect.Descriptor instead.
-func (*DouyinRelationActionResponse) Descriptor() ([]byte, []int) {
-	return file_chat_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinRelationActionResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinRelationActionResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-type Message struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Id         int64   `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                        // 消息id
-	ToUserId   int64   `protobuf:"varint,2,opt,name=to_user_id,json=toUserId,proto3" json:"to_user_id,omitempty"`          // 该消息接收者的id
-	FromUserId int64   `protobuf:"varint,3,opt,name=from_user_id,json=fromUserId,proto3" json:"from_user_id,omitempty"`    // 该消息发送者的id
-	Content    string  `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                               // 消息内容
-	CreateTime *string `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3,oneof" json:"create_time,omitempty"` // 消息创建时间
-}
-
-func (x *Message) Reset() {
-	*x = Message{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_chat_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *Message) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*Message) ProtoMessage() {}
-
-func (x *Message) ProtoReflect() protoreflect.Message {
-	mi := &file_chat_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use Message.ProtoReflect.Descriptor instead.
-func (*Message) Descriptor() ([]byte, []int) {
-	return file_chat_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *Message) GetId() int64 {
-	if x != nil {
-		return x.Id
-	}
-	return 0
-}
-
-func (x *Message) GetToUserId() int64 {
-	if x != nil {
-		return x.ToUserId
-	}
-	return 0
-}
-
-func (x *Message) GetFromUserId() int64 {
-	if x != nil {
-		return x.FromUserId
-	}
-	return 0
-}
-
-func (x *Message) GetContent() string {
-	if x != nil {
-		return x.Content
-	}
-	return ""
-}
-
-func (x *Message) GetCreateTime() string {
-	if x != nil && x.CreateTime != nil {
-		return *x.CreateTime
-	}
-	return ""
-}
-
-var File_chat_proto protoreflect.FileDescriptor
-
-var file_chat_proto_rawDesc = []byte{
-	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x63, 0x68,
-	0x61, 0x74, 0x22, 0x51, 0x0a, 0x1b, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x73,
-	0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73,
-	0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
-	0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73,
-	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x55,
-	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x1c, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65,
-	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
-	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
-	0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x0c, 0x6d,
-	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
-	0x0b, 0x32, 0x0d, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
-	0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x0d, 0x0a,
-	0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x8f, 0x01, 0x0a,
-	0x1e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
-	0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
-	0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
-	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72,
-	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65,
-	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
-	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
-	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18,
-	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x75,
-	0x0a, 0x1f, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
-	0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
-	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65,
-	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f,
-	0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67,
-	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
-	0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0xa9, 0x01, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
-	0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
-	0x64, 0x12, 0x1c, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
-	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x6f, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
-	0x20, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
-	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x49,
-	0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
-	0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0b, 0x63,
-	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
-	0x48, 0x00, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01,
-	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
-	0x65, 0x32, 0xb2, 0x01, 0x0a, 0x07, 0x43, 0x68, 0x61, 0x74, 0x53, 0x76, 0x72, 0x12, 0x55, 0x0a,
-	0x06, 0x47, 0x65, 0x74, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x64,
-	0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61,
-	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x25, 0x2e,
-	0x63, 0x68, 0x61, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x6c, 0x61,
-	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70,
-	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x07, 0x50, 0x6f, 0x73, 0x74, 0x4d, 0x73, 0x67, 0x12,
-	0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x6d, 0x65,
-	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x72, 0x65,
-	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x19, 0x5a, 0x17, 0x64, 0x6f, 0x75, 0x73, 0x68, 0x65,
-	0x6e, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e, 0x2f, 0x63, 0x68, 0x61,
-	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
-}
-
-var (
-	file_chat_proto_rawDescOnce sync.Once
-	file_chat_proto_rawDescData = file_chat_proto_rawDesc
-)
-
-func file_chat_proto_rawDescGZIP() []byte {
-	file_chat_proto_rawDescOnce.Do(func() {
-		file_chat_proto_rawDescData = protoimpl.X.CompressGZIP(file_chat_proto_rawDescData)
-	})
-	return file_chat_proto_rawDescData
-}
-
-var file_chat_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
-var file_chat_proto_goTypes = []interface{}{
-	(*DouyinMessageChatRequest)(nil),     // 0: chat.douyin_message_chat_request
-	(*DouyinMessageChatResponse)(nil),    // 1: chat.douyin_message_chat_response
-	(*DouyinRelationActionRequest)(nil),  // 2: chat.douyin_relation_action_request
-	(*DouyinRelationActionResponse)(nil), // 3: chat.douyin_relation_action_response
-	(*Message)(nil),                      // 4: chat.Message
-}
-var file_chat_proto_depIdxs = []int32{
-	4, // 0: chat.douyin_message_chat_response.message_list:type_name -> chat.Message
-	2, // 1: chat.ChatSvr.GetMsg:input_type -> chat.douyin_relation_action_request
-	0, // 2: chat.ChatSvr.PostMsg:input_type -> chat.douyin_message_chat_request
-	3, // 3: chat.ChatSvr.GetMsg:output_type -> chat.douyin_relation_action_response
-	1, // 4: chat.ChatSvr.PostMsg:output_type -> chat.douyin_message_chat_response
-	3, // [3:5] is the sub-list for method output_type
-	1, // [1:3] is the sub-list for method input_type
-	1, // [1:1] is the sub-list for extension type_name
-	1, // [1:1] is the sub-list for extension extendee
-	0, // [0:1] is the sub-list for field type_name
-}
-
-func init() { file_chat_proto_init() }
-func file_chat_proto_init() {
-	if File_chat_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_chat_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinMessageChatRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_chat_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinMessageChatResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_chat_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationActionRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_chat_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinRelationActionResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_chat_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*Message); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_chat_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_chat_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_chat_proto_msgTypes[4].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_chat_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   5,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_chat_proto_goTypes,
-		DependencyIndexes: file_chat_proto_depIdxs,
-		MessageInfos:      file_chat_proto_msgTypes,
-	}.Build()
-	File_chat_proto = out.File
-	file_chat_proto_rawDesc = nil
-	file_chat_proto_goTypes = nil
-	file_chat_proto_depIdxs = nil
-}
-
-var _ context.Context
-
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-type ChatSvr interface {
-	GetMsg(ctx context.Context, req *DouyinRelationActionRequest) (res *DouyinRelationActionResponse, err error)
-	PostMsg(ctx context.Context, req *DouyinMessageChatRequest) (res *DouyinMessageChatResponse, err error)
-}
Index: kitex_gen/interact/interact.pb.go
===================================================================
diff --git a/kitex_gen/interact/interact.pb.go b/kitex_gen/interact/interact.pb.go
deleted file mode 100644
--- a/kitex_gen/interact/interact.pb.go	
+++ /dev/null	
@@ -1,902 +0,0 @@
-// Code generated by protoc-gen-go. DO NOT EDIT.
-// versions:
-// 	protoc-gen-go v1.28.1
-// 	protoc        v3.17.2
-// source: interact.proto
-
-package interact
-
-import (
-	context "context"
-	user "dousheng/kitex_gen/user"
-	video "dousheng/kitex_gen/video"
-	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
-	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
-	reflect "reflect"
-	sync "sync"
-)
-
-const (
-	// Verify that this generated code is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
-	// Verify that runtime/protoimpl is sufficiently up-to-date.
-	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
-)
-
-type DouyinFavoriteActionRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token      string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                              // 用户鉴权token
-	VideoId    int64  `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`          // 视频id
-	ActionType int32  `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"` // 1-点赞，2-取消点赞
-}
-
-func (x *DouyinFavoriteActionRequest) Reset() {
-	*x = DouyinFavoriteActionRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[0]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFavoriteActionRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFavoriteActionRequest) ProtoMessage() {}
-
-func (x *DouyinFavoriteActionRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[0]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFavoriteActionRequest.ProtoReflect.Descriptor instead.
-func (*DouyinFavoriteActionRequest) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{0}
-}
-
-func (x *DouyinFavoriteActionRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinFavoriteActionRequest) GetVideoId() int64 {
-	if x != nil {
-		return x.VideoId
-	}
-	return 0
-}
-
-func (x *DouyinFavoriteActionRequest) GetActionType() int32 {
-	if x != nil {
-		return x.ActionType
-	}
-	return 0
-}
-
-type DouyinFavoriteActionResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32   `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-}
-
-func (x *DouyinFavoriteActionResponse) Reset() {
-	*x = DouyinFavoriteActionResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[1]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFavoriteActionResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFavoriteActionResponse) ProtoMessage() {}
-
-func (x *DouyinFavoriteActionResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[1]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFavoriteActionResponse.ProtoReflect.Descriptor instead.
-func (*DouyinFavoriteActionResponse) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{1}
-}
-
-func (x *DouyinFavoriteActionResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinFavoriteActionResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-type DouyinFavoriteListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	UserId int64  `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"` // 用户id
-	Token  string `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`                  // 用户鉴权token
-}
-
-func (x *DouyinFavoriteListRequest) Reset() {
-	*x = DouyinFavoriteListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[2]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFavoriteListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFavoriteListRequest) ProtoMessage() {}
-
-func (x *DouyinFavoriteListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[2]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFavoriteListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinFavoriteListRequest) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{2}
-}
-
-func (x *DouyinFavoriteListRequest) GetUserId() int64 {
-	if x != nil {
-		return x.UserId
-	}
-	return 0
-}
-
-func (x *DouyinFavoriteListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-type DouyinFavoriteListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32          `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string        `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	VideoList  []*video.Video `protobuf:"bytes,3,rep,name=video_list,json=videoList,proto3" json:"video_list,omitempty"`       // 用户点赞视频列表
-}
-
-func (x *DouyinFavoriteListResponse) Reset() {
-	*x = DouyinFavoriteListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[3]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinFavoriteListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinFavoriteListResponse) ProtoMessage() {}
-
-func (x *DouyinFavoriteListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[3]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinFavoriteListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinFavoriteListResponse) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{3}
-}
-
-func (x *DouyinFavoriteListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinFavoriteListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinFavoriteListResponse) GetVideoList() []*video.Video {
-	if x != nil {
-		return x.VideoList
-	}
-	return nil
-}
-
-type DouyinCommentActionRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token       string  `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                                      // 用户鉴权token
-	VideoId     int64   `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"`                  // 视频id
-	ActionType  int32   `protobuf:"varint,3,opt,name=action_type,json=actionType,proto3" json:"action_type,omitempty"`         // 1-发布评论，2-删除评论
-	CommentText *string `protobuf:"bytes,4,opt,name=comment_text,json=commentText,proto3,oneof" json:"comment_text,omitempty"` // 用户填写的评论内容，在action_type=1的时候使用
-	CommentId   *int64  `protobuf:"varint,5,opt,name=comment_id,json=commentId,proto3,oneof" json:"comment_id,omitempty"`      // 要删除的评论id，在action_type=2的时候使用
-}
-
-func (x *DouyinCommentActionRequest) Reset() {
-	*x = DouyinCommentActionRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[4]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinCommentActionRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinCommentActionRequest) ProtoMessage() {}
-
-func (x *DouyinCommentActionRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[4]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinCommentActionRequest.ProtoReflect.Descriptor instead.
-func (*DouyinCommentActionRequest) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{4}
-}
-
-func (x *DouyinCommentActionRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinCommentActionRequest) GetVideoId() int64 {
-	if x != nil {
-		return x.VideoId
-	}
-	return 0
-}
-
-func (x *DouyinCommentActionRequest) GetActionType() int32 {
-	if x != nil {
-		return x.ActionType
-	}
-	return 0
-}
-
-func (x *DouyinCommentActionRequest) GetCommentText() string {
-	if x != nil && x.CommentText != nil {
-		return *x.CommentText
-	}
-	return ""
-}
-
-func (x *DouyinCommentActionRequest) GetCommentId() int64 {
-	if x != nil && x.CommentId != nil {
-		return *x.CommentId
-	}
-	return 0
-}
-
-type DouyinCommentActionResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg  *string  `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	Comment    *Comment `protobuf:"bytes,3,opt,name=comment,proto3,oneof" json:"comment,omitempty"`                      // 评论成功返回评论内容，不需要重新拉取整个列表
-}
-
-func (x *DouyinCommentActionResponse) Reset() {
-	*x = DouyinCommentActionResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[5]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinCommentActionResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinCommentActionResponse) ProtoMessage() {}
-
-func (x *DouyinCommentActionResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[5]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinCommentActionResponse.ProtoReflect.Descriptor instead.
-func (*DouyinCommentActionResponse) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{5}
-}
-
-func (x *DouyinCommentActionResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinCommentActionResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinCommentActionResponse) GetComment() *Comment {
-	if x != nil {
-		return x.Comment
-	}
-	return nil
-}
-
-type DouyinCommentListRequest struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Token   string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                     // 用户鉴权token
-	VideoId int64  `protobuf:"varint,2,opt,name=video_id,json=videoId,proto3" json:"video_id,omitempty"` // 视频id
-}
-
-func (x *DouyinCommentListRequest) Reset() {
-	*x = DouyinCommentListRequest{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[6]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinCommentListRequest) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinCommentListRequest) ProtoMessage() {}
-
-func (x *DouyinCommentListRequest) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[6]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinCommentListRequest.ProtoReflect.Descriptor instead.
-func (*DouyinCommentListRequest) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{6}
-}
-
-func (x *DouyinCommentListRequest) GetToken() string {
-	if x != nil {
-		return x.Token
-	}
-	return ""
-}
-
-func (x *DouyinCommentListRequest) GetVideoId() int64 {
-	if x != nil {
-		return x.VideoId
-	}
-	return 0
-}
-
-type DouyinCommentListResponse struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	StatusCode  int32      `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`   // 状态码，0-成功，其他值-失败
-	StatusMsg   *string    `protobuf:"bytes,2,opt,name=status_msg,json=statusMsg,proto3,oneof" json:"status_msg,omitempty"` // 返回状态描述
-	CommentList []*Comment `protobuf:"bytes,3,rep,name=comment_list,json=commentList,proto3" json:"comment_list,omitempty"` // 评论列表
-}
-
-func (x *DouyinCommentListResponse) Reset() {
-	*x = DouyinCommentListResponse{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[7]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *DouyinCommentListResponse) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*DouyinCommentListResponse) ProtoMessage() {}
-
-func (x *DouyinCommentListResponse) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[7]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use DouyinCommentListResponse.ProtoReflect.Descriptor instead.
-func (*DouyinCommentListResponse) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{7}
-}
-
-func (x *DouyinCommentListResponse) GetStatusCode() int32 {
-	if x != nil {
-		return x.StatusCode
-	}
-	return 0
-}
-
-func (x *DouyinCommentListResponse) GetStatusMsg() string {
-	if x != nil && x.StatusMsg != nil {
-		return *x.StatusMsg
-	}
-	return ""
-}
-
-func (x *DouyinCommentListResponse) GetCommentList() []*Comment {
-	if x != nil {
-		return x.CommentList
-	}
-	return nil
-}
-
-type Comment struct {
-	state         protoimpl.MessageState
-	sizeCache     protoimpl.SizeCache
-	unknownFields protoimpl.UnknownFields
-
-	Id         int64      `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                  // 视频评论id
-	User       *user.User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`                               // 评论用户信息
-	Content    string     `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                         // 评论内容
-	CreateDate string     `protobuf:"bytes,4,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"` // 评论发布日期，格式 mm-dd
-}
-
-func (x *Comment) Reset() {
-	*x = Comment{}
-	if protoimpl.UnsafeEnabled {
-		mi := &file_interact_proto_msgTypes[8]
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		ms.StoreMessageInfo(mi)
-	}
-}
-
-func (x *Comment) String() string {
-	return protoimpl.X.MessageStringOf(x)
-}
-
-func (*Comment) ProtoMessage() {}
-
-func (x *Comment) ProtoReflect() protoreflect.Message {
-	mi := &file_interact_proto_msgTypes[8]
-	if protoimpl.UnsafeEnabled && x != nil {
-		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
-		if ms.LoadMessageInfo() == nil {
-			ms.StoreMessageInfo(mi)
-		}
-		return ms
-	}
-	return mi.MessageOf(x)
-}
-
-// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
-func (*Comment) Descriptor() ([]byte, []int) {
-	return file_interact_proto_rawDescGZIP(), []int{8}
-}
-
-func (x *Comment) GetId() int64 {
-	if x != nil {
-		return x.Id
-	}
-	return 0
-}
-
-func (x *Comment) GetUser() *user.User {
-	if x != nil {
-		return x.User
-	}
-	return nil
-}
-
-func (x *Comment) GetContent() string {
-	if x != nil {
-		return x.Content
-	}
-	return ""
-}
-
-func (x *Comment) GetCreateDate() string {
-	if x != nil {
-		return x.CreateDate
-	}
-	return ""
-}
-
-var File_interact_proto protoreflect.FileDescriptor
-
-var file_interact_proto_rawDesc = []byte{
-	0x0a, 0x0e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
-	0x12, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72,
-	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x70, 0x72,
-	0x6f, 0x74, 0x6f, 0x22, 0x72, 0x0a, 0x1e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x61,
-	0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
-	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76,
-	0x69, 0x64, 0x65, 0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
-	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74,
-	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x75, 0x0a, 0x1f, 0x64, 0x6f, 0x75, 0x79, 0x69,
-	0x6e, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f,
-	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74,
-	0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
-	0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
-	0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x42,
-	0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x22, 0x4d,
-	0x0a, 0x1c, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
-	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
-	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
-	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
-	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa0, 0x01,
-	0x0a, 0x1d, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74,
-	0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
-	0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
-	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65,
-	0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02,
-	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73,
-	0x67, 0x88, 0x01, 0x01, 0x12, 0x2b, 0x0a, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x6c, 0x69,
-	0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
-	0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x09, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x4c, 0x69, 0x73,
-	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67,
-	0x22, 0xdd, 0x01, 0x0a, 0x1d, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
-	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
-	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69, 0x64, 0x65,
-	0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69, 0x64, 0x65,
-	0x6f, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x74, 0x79,
-	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
-	0x54, 0x79, 0x70, 0x65, 0x12, 0x26, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f,
-	0x74, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6f,
-	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x54, 0x65, 0x78, 0x74, 0x88, 0x01, 0x01, 0x12, 0x22, 0x0a, 0x0a,
-	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
-	0x48, 0x01, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01,
-	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x65, 0x78,
-	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
-	0x22, 0xb2, 0x01, 0x0a, 0x1e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
-	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
-	0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f,
-	0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d,
-	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x74, 0x61, 0x74,
-	0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x30, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
-	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x74, 0x65,
-	0x72, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x07,
-	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x63, 0x6f,
-	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4e, 0x0a, 0x1b, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f,
-	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71,
-	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20,
-	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x19, 0x0a, 0x08, 0x76, 0x69,
-	0x64, 0x65, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x76, 0x69,
-	0x64, 0x65, 0x6f, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x1c, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e,
-	0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
-	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
-	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x73, 0x74, 0x61,
-	0x74, 0x75, 0x73, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0a, 0x73, 0x74, 0x61, 0x74, 0x75,
-	0x73, 0x5f, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73,
-	0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x88, 0x01, 0x01, 0x12, 0x34, 0x0a, 0x0c, 0x63,
-	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28,
-	0x0b, 0x32, 0x11, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x43, 0x6f, 0x6d,
-	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
-	0x74, 0x42, 0x0d, 0x0a, 0x0b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x6d, 0x73, 0x67,
-	0x22, 0x74, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
-	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x04, 0x75,
-	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x75, 0x73, 0x65, 0x72,
-	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63,
-	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
-	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f,
-	0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
-	0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x32, 0x81, 0x03, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x65, 0x72,
-	0x61, 0x63, 0x74, 0x53, 0x76, 0x72, 0x12, 0x5a, 0x0a, 0x03, 0x46, 0x61, 0x76, 0x12, 0x28, 0x2e,
-	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f,
-	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
-	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
-	0x63, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69,
-	0x74, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
-	0x73, 0x65, 0x12, 0x5a, 0x0a, 0x07, 0x46, 0x61, 0x76, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x2e,
-	0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f,
-	0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65,
-	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74,
-	0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x66, 0x61, 0x76, 0x6f, 0x72, 0x69, 0x74, 0x65,
-	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c,
-	0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x69, 0x6e, 0x74, 0x65,
-	0x72, 0x61, 0x63, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d,
-	0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x1a, 0x28, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x64, 0x6f,
-	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x61, 0x63, 0x74,
-	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5c, 0x0a, 0x0b,
-	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x69, 0x6e,
-	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x64, 0x6f, 0x75, 0x79, 0x69, 0x6e, 0x5f, 0x63, 0x6f,
-	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
-	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x2e, 0x64, 0x6f,
-	0x75, 0x79, 0x69, 0x6e, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x73,
-	0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x64, 0x6f,
-	0x75, 0x73, 0x68, 0x65, 0x6e, 0x67, 0x2f, 0x6b, 0x69, 0x74, 0x65, 0x78, 0x5f, 0x67, 0x65, 0x6e,
-	0x2f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
-	0x33,
-}
-
-var (
-	file_interact_proto_rawDescOnce sync.Once
-	file_interact_proto_rawDescData = file_interact_proto_rawDesc
-)
-
-func file_interact_proto_rawDescGZIP() []byte {
-	file_interact_proto_rawDescOnce.Do(func() {
-		file_interact_proto_rawDescData = protoimpl.X.CompressGZIP(file_interact_proto_rawDescData)
-	})
-	return file_interact_proto_rawDescData
-}
-
-var file_interact_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
-var file_interact_proto_goTypes = []interface{}{
-	(*DouyinFavoriteActionRequest)(nil),  // 0: interact.douyin_favorite_action_request
-	(*DouyinFavoriteActionResponse)(nil), // 1: interact.douyin_favorite_action_response
-	(*DouyinFavoriteListRequest)(nil),    // 2: interact.douyin_favorite_list_request
-	(*DouyinFavoriteListResponse)(nil),   // 3: interact.douyin_favorite_list_response
-	(*DouyinCommentActionRequest)(nil),   // 4: interact.douyin_comment_action_request
-	(*DouyinCommentActionResponse)(nil),  // 5: interact.douyin_comment_action_response
-	(*DouyinCommentListRequest)(nil),     // 6: interact.douyin_comment_list_request
-	(*DouyinCommentListResponse)(nil),    // 7: interact.douyin_comment_list_response
-	(*Comment)(nil),                      // 8: interact.Comment
-	(*video.Video)(nil),                  // 9: video.Video
-	(*user.User)(nil),                    // 10: user.User
-}
-var file_interact_proto_depIdxs = []int32{
-	9,  // 0: interact.douyin_favorite_list_response.video_list:type_name -> video.Video
-	8,  // 1: interact.douyin_comment_action_response.comment:type_name -> interact.Comment
-	8,  // 2: interact.douyin_comment_list_response.comment_list:type_name -> interact.Comment
-	10, // 3: interact.Comment.user:type_name -> user.User
-	0,  // 4: interact.InteractSvr.Fav:input_type -> interact.douyin_favorite_action_request
-	2,  // 5: interact.InteractSvr.FavList:input_type -> interact.douyin_favorite_list_request
-	4,  // 6: interact.InteractSvr.Comment:input_type -> interact.douyin_comment_action_request
-	6,  // 7: interact.InteractSvr.CommentList:input_type -> interact.douyin_comment_list_request
-	1,  // 8: interact.InteractSvr.Fav:output_type -> interact.douyin_favorite_action_response
-	3,  // 9: interact.InteractSvr.FavList:output_type -> interact.douyin_favorite_list_response
-	5,  // 10: interact.InteractSvr.Comment:output_type -> interact.douyin_comment_action_response
-	7,  // 11: interact.InteractSvr.CommentList:output_type -> interact.douyin_comment_list_response
-	8,  // [8:12] is the sub-list for method output_type
-	4,  // [4:8] is the sub-list for method input_type
-	4,  // [4:4] is the sub-list for extension type_name
-	4,  // [4:4] is the sub-list for extension extendee
-	0,  // [0:4] is the sub-list for field type_name
-}
-
-func init() { file_interact_proto_init() }
-func file_interact_proto_init() {
-	if File_interact_proto != nil {
-		return
-	}
-	if !protoimpl.UnsafeEnabled {
-		file_interact_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFavoriteActionRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFavoriteActionResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFavoriteListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinFavoriteListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinCommentActionRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinCommentActionResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinCommentListRequest); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*DouyinCommentListResponse); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-		file_interact_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
-			switch v := v.(*Comment); i {
-			case 0:
-				return &v.state
-			case 1:
-				return &v.sizeCache
-			case 2:
-				return &v.unknownFields
-			default:
-				return nil
-			}
-		}
-	}
-	file_interact_proto_msgTypes[1].OneofWrappers = []interface{}{}
-	file_interact_proto_msgTypes[3].OneofWrappers = []interface{}{}
-	file_interact_proto_msgTypes[4].OneofWrappers = []interface{}{}
-	file_interact_proto_msgTypes[5].OneofWrappers = []interface{}{}
-	file_interact_proto_msgTypes[7].OneofWrappers = []interface{}{}
-	type x struct{}
-	out := protoimpl.TypeBuilder{
-		File: protoimpl.DescBuilder{
-			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
-			RawDescriptor: file_interact_proto_rawDesc,
-			NumEnums:      0,
-			NumMessages:   9,
-			NumExtensions: 0,
-			NumServices:   1,
-		},
-		GoTypes:           file_interact_proto_goTypes,
-		DependencyIndexes: file_interact_proto_depIdxs,
-		MessageInfos:      file_interact_proto_msgTypes,
-	}.Build()
-	File_interact_proto = out.File
-	file_interact_proto_rawDesc = nil
-	file_interact_proto_goTypes = nil
-	file_interact_proto_depIdxs = nil
-}
-
-var _ context.Context
-
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-type InteractSvr interface {
-	Fav(ctx context.Context, req *DouyinFavoriteActionRequest) (res *DouyinFavoriteActionResponse, err error)
-	FavList(ctx context.Context, req *DouyinFavoriteListRequest) (res *DouyinFavoriteListResponse, err error)
-	Comment(ctx context.Context, req *DouyinCommentActionRequest) (res *DouyinCommentActionResponse, err error)
-	CommentList(ctx context.Context, req *DouyinCommentListRequest) (res *DouyinCommentListResponse, err error)
-}
Index: IDL/relation.proto
===================================================================
diff --git a/IDL/relation.proto b/IDL/relation.proto
deleted file mode 100644
--- a/IDL/relation.proto	
+++ /dev/null	
@@ -1,66 +0,0 @@
-syntax = "proto3";
-package relation;
-option go_package = "relation";
-
-import "user.proto";
-
-message douyin_relation_action_request {
-  string token = 1; // 用户鉴权token
-  int64 to_user_id = 2; // 对方用户id
-  int32 action_type = 3; // 1-关注，2-取消关注
-}
-
-message douyin_relation_action_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-}
-
-message douyin_relation_follow_list_request {
-  int64 user_id = 1; // 用户id
-  string token = 2; // 用户鉴权token
-}
-
-message douyin_relation_follow_list_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated user.User user_list = 3; // 用户信息列表
-}
-
-message douyin_relation_follower_list_request {
-  int64 user_id = 1; // 用户id
-  string token = 2; // 用户鉴权token
-}
-
-message douyin_relation_follower_list_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated user.User user_list = 3; // 用户列表
-}
-
-message douyin_relation_friend_list_request {
-  int64 user_id = 1; // 用户id
-  string token = 2; // 用户鉴权token
-}
-
-message douyin_relation_friend_list_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated FriendUser user_list = 3; // 用户列表
-}
-
-message FriendUser {
-  user.User user = 1;
-  optional string message = 2; // 和该好友的最新聊天消息
-  int64 msgType = 3; // message消息的类型，0 => 当前请求用户接收的消息， 1 => 当前请求用户发送的消息
-}
-
-service RelationSvr {
-  //订阅
-  rpc Sub (douyin_relation_action_request) returns (douyin_relation_action_response);
-  //订阅列表
-  rpc SubList (douyin_relation_follow_list_request) returns (douyin_relation_follow_list_response);
-  //粉丝列表
-  rpc FansList (douyin_relation_follower_list_request) returns (douyin_relation_follower_list_response);
-  //好友列表
-  rpc FriendList (douyin_relation_friend_list_request) returns (douyin_relation_friend_list_response);
-}
Index: kitex_gen/interact/interact.pb.fast.go
===================================================================
diff --git a/kitex_gen/interact/interact.pb.fast.go b/kitex_gen/interact/interact.pb.fast.go
deleted file mode 100644
--- a/kitex_gen/interact/interact.pb.fast.go	
+++ /dev/null	
@@ -1,1123 +0,0 @@
-// Code generated by Fastpb v0.0.2. DO NOT EDIT.
-
-package interact
-
-import (
-	user "dousheng/kitex_gen/user"
-	video "dousheng/kitex_gen/video"
-	fmt "fmt"
-	fastpb "github.com/cloudwego/fastpb"
-)
-
-var (
-	_ = fmt.Errorf
-	_ = fastpb.Skip
-)
-
-func (x *DouyinFavoriteActionRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinFavoriteActionRequest[number], err)
-}
-
-func (x *DouyinFavoriteActionRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteActionRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.VideoId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteActionRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.ActionType, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteActionResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinFavoriteActionResponse[number], err)
-}
-
-func (x *DouyinFavoriteActionResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteActionResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinFavoriteListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinFavoriteListRequest[number], err)
-}
-
-func (x *DouyinFavoriteListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinFavoriteListResponse[number], err)
-}
-
-func (x *DouyinFavoriteListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinFavoriteListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v video.Video
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.VideoList = append(x.VideoList, &v)
-	return offset, nil
-}
-
-func (x *DouyinCommentActionRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 5:
-		offset, err = x.fastReadField5(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinCommentActionRequest[number], err)
-}
-
-func (x *DouyinCommentActionRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinCommentActionRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.VideoId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinCommentActionRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.ActionType, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinCommentActionRequest) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.CommentText = &tmp
-	return offset, err
-}
-
-func (x *DouyinCommentActionRequest) fastReadField5(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadInt64(buf, _type)
-	x.CommentId = &tmp
-	return offset, err
-}
-
-func (x *DouyinCommentActionResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinCommentActionResponse[number], err)
-}
-
-func (x *DouyinCommentActionResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinCommentActionResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinCommentActionResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v Comment
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.Comment = &v
-	return offset, nil
-}
-
-func (x *DouyinCommentListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinCommentListRequest[number], err)
-}
-
-func (x *DouyinCommentListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinCommentListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.VideoId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinCommentListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinCommentListResponse[number], err)
-}
-
-func (x *DouyinCommentListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinCommentListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinCommentListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v Comment
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.CommentList = append(x.CommentList, &v)
-	return offset, nil
-}
-
-func (x *Comment) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_Comment[number], err)
-}
-
-func (x *Comment) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Id, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *Comment) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.User = &v
-	return offset, nil
-}
-
-func (x *Comment) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.Content, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *Comment) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.CreateDate, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFavoriteActionRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinFavoriteActionRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinFavoriteActionRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.VideoId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.VideoId)
-	return offset
-}
-
-func (x *DouyinFavoriteActionRequest) fastWriteField3(buf []byte) (offset int) {
-	if x.ActionType == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 3, x.ActionType)
-	return offset
-}
-
-func (x *DouyinFavoriteActionResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinFavoriteActionResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinFavoriteActionResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinFavoriteListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinFavoriteListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinFavoriteListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinFavoriteListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinFavoriteListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinFavoriteListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinFavoriteListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.VideoList == nil {
-		return offset
-	}
-	for i := range x.VideoList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.VideoList[i])
-	}
-	return offset
-}
-
-func (x *DouyinCommentActionRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	offset += x.fastWriteField5(buf[offset:])
-	return offset
-}
-
-func (x *DouyinCommentActionRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinCommentActionRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.VideoId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.VideoId)
-	return offset
-}
-
-func (x *DouyinCommentActionRequest) fastWriteField3(buf []byte) (offset int) {
-	if x.ActionType == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 3, x.ActionType)
-	return offset
-}
-
-func (x *DouyinCommentActionRequest) fastWriteField4(buf []byte) (offset int) {
-	if x.CommentText == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, *x.CommentText)
-	return offset
-}
-
-func (x *DouyinCommentActionRequest) fastWriteField5(buf []byte) (offset int) {
-	if x.CommentId == nil {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 5, *x.CommentId)
-	return offset
-}
-
-func (x *DouyinCommentActionResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinCommentActionResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinCommentActionResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinCommentActionResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.Comment == nil {
-		return offset
-	}
-	offset += fastpb.WriteMessage(buf[offset:], 3, x.Comment)
-	return offset
-}
-
-func (x *DouyinCommentListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinCommentListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinCommentListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.VideoId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.VideoId)
-	return offset
-}
-
-func (x *DouyinCommentListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinCommentListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinCommentListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinCommentListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.CommentList == nil {
-		return offset
-	}
-	for i := range x.CommentList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.CommentList[i])
-	}
-	return offset
-}
-
-func (x *Comment) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	return offset
-}
-
-func (x *Comment) fastWriteField1(buf []byte) (offset int) {
-	if x.Id == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.Id)
-	return offset
-}
-
-func (x *Comment) fastWriteField2(buf []byte) (offset int) {
-	if x.User == nil {
-		return offset
-	}
-	offset += fastpb.WriteMessage(buf[offset:], 2, x.User)
-	return offset
-}
-
-func (x *Comment) fastWriteField3(buf []byte) (offset int) {
-	if x.Content == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 3, x.Content)
-	return offset
-}
-
-func (x *Comment) fastWriteField4(buf []byte) (offset int) {
-	if x.CreateDate == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.CreateDate)
-	return offset
-}
-
-func (x *DouyinFavoriteActionRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinFavoriteActionRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinFavoriteActionRequest) sizeField2() (n int) {
-	if x.VideoId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.VideoId)
-	return n
-}
-
-func (x *DouyinFavoriteActionRequest) sizeField3() (n int) {
-	if x.ActionType == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(3, x.ActionType)
-	return n
-}
-
-func (x *DouyinFavoriteActionResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinFavoriteActionResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinFavoriteActionResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinFavoriteListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinFavoriteListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinFavoriteListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinFavoriteListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinFavoriteListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinFavoriteListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinFavoriteListResponse) sizeField3() (n int) {
-	if x.VideoList == nil {
-		return n
-	}
-	for i := range x.VideoList {
-		n += fastpb.SizeMessage(3, x.VideoList[i])
-	}
-	return n
-}
-
-func (x *DouyinCommentActionRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	n += x.sizeField5()
-	return n
-}
-
-func (x *DouyinCommentActionRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinCommentActionRequest) sizeField2() (n int) {
-	if x.VideoId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.VideoId)
-	return n
-}
-
-func (x *DouyinCommentActionRequest) sizeField3() (n int) {
-	if x.ActionType == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(3, x.ActionType)
-	return n
-}
-
-func (x *DouyinCommentActionRequest) sizeField4() (n int) {
-	if x.CommentText == nil {
-		return n
-	}
-	n += fastpb.SizeString(4, *x.CommentText)
-	return n
-}
-
-func (x *DouyinCommentActionRequest) sizeField5() (n int) {
-	if x.CommentId == nil {
-		return n
-	}
-	n += fastpb.SizeInt64(5, *x.CommentId)
-	return n
-}
-
-func (x *DouyinCommentActionResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinCommentActionResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinCommentActionResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinCommentActionResponse) sizeField3() (n int) {
-	if x.Comment == nil {
-		return n
-	}
-	n += fastpb.SizeMessage(3, x.Comment)
-	return n
-}
-
-func (x *DouyinCommentListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinCommentListRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinCommentListRequest) sizeField2() (n int) {
-	if x.VideoId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.VideoId)
-	return n
-}
-
-func (x *DouyinCommentListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinCommentListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinCommentListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinCommentListResponse) sizeField3() (n int) {
-	if x.CommentList == nil {
-		return n
-	}
-	for i := range x.CommentList {
-		n += fastpb.SizeMessage(3, x.CommentList[i])
-	}
-	return n
-}
-
-func (x *Comment) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	return n
-}
-
-func (x *Comment) sizeField1() (n int) {
-	if x.Id == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.Id)
-	return n
-}
-
-func (x *Comment) sizeField2() (n int) {
-	if x.User == nil {
-		return n
-	}
-	n += fastpb.SizeMessage(2, x.User)
-	return n
-}
-
-func (x *Comment) sizeField3() (n int) {
-	if x.Content == "" {
-		return n
-	}
-	n += fastpb.SizeString(3, x.Content)
-	return n
-}
-
-func (x *Comment) sizeField4() (n int) {
-	if x.CreateDate == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.CreateDate)
-	return n
-}
-
-var fieldIDToName_DouyinFavoriteActionRequest = map[int32]string{
-	1: "Token",
-	2: "VideoId",
-	3: "ActionType",
-}
-
-var fieldIDToName_DouyinFavoriteActionResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-}
-
-var fieldIDToName_DouyinFavoriteListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinFavoriteListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "VideoList",
-}
-
-var fieldIDToName_DouyinCommentActionRequest = map[int32]string{
-	1: "Token",
-	2: "VideoId",
-	3: "ActionType",
-	4: "CommentText",
-	5: "CommentId",
-}
-
-var fieldIDToName_DouyinCommentActionResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "Comment",
-}
-
-var fieldIDToName_DouyinCommentListRequest = map[int32]string{
-	1: "Token",
-	2: "VideoId",
-}
-
-var fieldIDToName_DouyinCommentListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "CommentList",
-}
-
-var fieldIDToName_Comment = map[int32]string{
-	1: "Id",
-	2: "User",
-	3: "Content",
-	4: "CreateDate",
-}
-
-var _ = user.File_user_proto
-var _ = video.File_video_proto
Index: dal/model/tb_video.gen.go
===================================================================
diff --git a/dal/model/tb_video.gen.go b/dal/model/tb_video.gen.go
deleted file mode 100644
--- a/dal/model/tb_video.gen.go	
+++ /dev/null	
@@ -1,29 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package model
-
-import (
-	"time"
-)
-
-const TableNameVideo = "tb_video"
-
-// Video mapped from table <tb_video>
-type Video struct {
-	VideoID       int64     `gorm:"column:video_id;primaryKey;autoIncrement:true" json:"video_id"`            // 视频id
-	UserID        int64     `gorm:"column:user_id" json:"user_id"`                                            // 用户id
-	PlayURL       string    `gorm:"column:play_url" json:"play_url"`                                          // 视频URL
-	CoverURL      string    `gorm:"column:cover_url" json:"cover_url"`                                        // 封面URL
-	FavoriteCount int32     `gorm:"column:favorite_count" json:"favorite_count"`                              // 点赞总数
-	CommentCount  int32     `gorm:"column:comment_count" json:"comment_count"`                                // 评论总数
-	Title         string    `gorm:"column:title" json:"title"`                                                // 视频标题
-	CreateDate    time.Time `gorm:"column:create_date;not null;default:CURRENT_TIMESTAMP" json:"create_date"` // 创建时间
-	UpdateDate    time.Time `gorm:"column:update_date;not null;default:CURRENT_TIMESTAMP" json:"update_date"` // 更新时间
-}
-
-// TableName Video's table name
-func (*Video) TableName() string {
-	return TableNameVideo
-}
Index: kitex_gen/relation/relationsvr/relationsvr.go
===================================================================
diff --git a/kitex_gen/relation/relationsvr/relationsvr.go b/kitex_gen/relation/relationsvr/relationsvr.go
deleted file mode 100644
--- a/kitex_gen/relation/relationsvr/relationsvr.go	
+++ /dev/null	
@@ -1,672 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package relationsvr
-
-import (
-	"context"
-	relation "dousheng/kitex_gen/relation"
-	"fmt"
-	client "github.com/cloudwego/kitex/client"
-	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
-	streaming "github.com/cloudwego/kitex/pkg/streaming"
-	proto "google.golang.org/protobuf/proto"
-)
-
-func serviceInfo() *kitex.ServiceInfo {
-	return relationSvrServiceInfo
-}
-
-var relationSvrServiceInfo = NewServiceInfo()
-
-func NewServiceInfo() *kitex.ServiceInfo {
-	serviceName := "RelationSvr"
-	handlerType := (*relation.RelationSvr)(nil)
-	methods := map[string]kitex.MethodInfo{
-		"Sub":        kitex.NewMethodInfo(subHandler, newSubArgs, newSubResult, false),
-		"SubList":    kitex.NewMethodInfo(subListHandler, newSubListArgs, newSubListResult, false),
-		"FansList":   kitex.NewMethodInfo(fansListHandler, newFansListArgs, newFansListResult, false),
-		"FriendList": kitex.NewMethodInfo(friendListHandler, newFriendListArgs, newFriendListResult, false),
-	}
-	extra := map[string]interface{}{
-		"PackageName": "relation",
-	}
-	svcInfo := &kitex.ServiceInfo{
-		ServiceName:     serviceName,
-		HandlerType:     handlerType,
-		Methods:         methods,
-		PayloadCodec:    kitex.Protobuf,
-		KiteXGenVersion: "v0.4.4",
-		Extra:           extra,
-	}
-	return svcInfo
-}
-
-func subHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationActionRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).Sub(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *SubArgs:
-		success, err := handler.(relation.RelationSvr).Sub(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*SubResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newSubArgs() interface{} {
-	return &SubArgs{}
-}
-
-func newSubResult() interface{} {
-	return &SubResult{}
-}
-
-type SubArgs struct {
-	Req *relation.DouyinRelationActionRequest
-}
-
-func (p *SubArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationActionRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *SubArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *SubArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *SubArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in SubArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *SubArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationActionRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var SubArgs_Req_DEFAULT *relation.DouyinRelationActionRequest
-
-func (p *SubArgs) GetReq() *relation.DouyinRelationActionRequest {
-	if !p.IsSetReq() {
-		return SubArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *SubArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type SubResult struct {
-	Success *relation.DouyinRelationActionResponse
-}
-
-var SubResult_Success_DEFAULT *relation.DouyinRelationActionResponse
-
-func (p *SubResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationActionResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *SubResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *SubResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *SubResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in SubResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *SubResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationActionResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *SubResult) GetSuccess() *relation.DouyinRelationActionResponse {
-	if !p.IsSetSuccess() {
-		return SubResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *SubResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationActionResponse)
-}
-
-func (p *SubResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func subListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationFollowListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).SubList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *SubListArgs:
-		success, err := handler.(relation.RelationSvr).SubList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*SubListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newSubListArgs() interface{} {
-	return &SubListArgs{}
-}
-
-func newSubListResult() interface{} {
-	return &SubListResult{}
-}
-
-type SubListArgs struct {
-	Req *relation.DouyinRelationFollowListRequest
-}
-
-func (p *SubListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationFollowListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *SubListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *SubListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *SubListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in SubListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *SubListArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var SubListArgs_Req_DEFAULT *relation.DouyinRelationFollowListRequest
-
-func (p *SubListArgs) GetReq() *relation.DouyinRelationFollowListRequest {
-	if !p.IsSetReq() {
-		return SubListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *SubListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type SubListResult struct {
-	Success *relation.DouyinRelationFollowListResponse
-}
-
-var SubListResult_Success_DEFAULT *relation.DouyinRelationFollowListResponse
-
-func (p *SubListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationFollowListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *SubListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *SubListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *SubListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in SubListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *SubListResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *SubListResult) GetSuccess() *relation.DouyinRelationFollowListResponse {
-	if !p.IsSetSuccess() {
-		return SubListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *SubListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationFollowListResponse)
-}
-
-func (p *SubListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func fansListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationFollowerListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).FansList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *FansListArgs:
-		success, err := handler.(relation.RelationSvr).FansList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*FansListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newFansListArgs() interface{} {
-	return &FansListArgs{}
-}
-
-func newFansListResult() interface{} {
-	return &FansListResult{}
-}
-
-type FansListArgs struct {
-	Req *relation.DouyinRelationFollowerListRequest
-}
-
-func (p *FansListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationFollowerListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *FansListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *FansListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *FansListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in FansListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *FansListArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowerListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var FansListArgs_Req_DEFAULT *relation.DouyinRelationFollowerListRequest
-
-func (p *FansListArgs) GetReq() *relation.DouyinRelationFollowerListRequest {
-	if !p.IsSetReq() {
-		return FansListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *FansListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type FansListResult struct {
-	Success *relation.DouyinRelationFollowerListResponse
-}
-
-var FansListResult_Success_DEFAULT *relation.DouyinRelationFollowerListResponse
-
-func (p *FansListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationFollowerListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *FansListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *FansListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *FansListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in FansListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *FansListResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFollowerListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *FansListResult) GetSuccess() *relation.DouyinRelationFollowerListResponse {
-	if !p.IsSetSuccess() {
-		return FansListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *FansListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationFollowerListResponse)
-}
-
-func (p *FansListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func friendListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(relation.DouyinRelationFriendListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(relation.RelationSvr).FriendList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *FriendListArgs:
-		success, err := handler.(relation.RelationSvr).FriendList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*FriendListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newFriendListArgs() interface{} {
-	return &FriendListArgs{}
-}
-
-func newFriendListResult() interface{} {
-	return &FriendListResult{}
-}
-
-type FriendListArgs struct {
-	Req *relation.DouyinRelationFriendListRequest
-}
-
-func (p *FriendListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(relation.DouyinRelationFriendListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *FriendListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *FriendListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *FriendListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in FriendListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *FriendListArgs) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFriendListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var FriendListArgs_Req_DEFAULT *relation.DouyinRelationFriendListRequest
-
-func (p *FriendListArgs) GetReq() *relation.DouyinRelationFriendListRequest {
-	if !p.IsSetReq() {
-		return FriendListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *FriendListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type FriendListResult struct {
-	Success *relation.DouyinRelationFriendListResponse
-}
-
-var FriendListResult_Success_DEFAULT *relation.DouyinRelationFriendListResponse
-
-func (p *FriendListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(relation.DouyinRelationFriendListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *FriendListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *FriendListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *FriendListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in FriendListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *FriendListResult) Unmarshal(in []byte) error {
-	msg := new(relation.DouyinRelationFriendListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *FriendListResult) GetSuccess() *relation.DouyinRelationFriendListResponse {
-	if !p.IsSetSuccess() {
-		return FriendListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *FriendListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*relation.DouyinRelationFriendListResponse)
-}
-
-func (p *FriendListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-type kClient struct {
-	c client.Client
-}
-
-func newServiceClient(c client.Client) *kClient {
-	return &kClient{
-		c: c,
-	}
-}
-
-func (p *kClient) Sub(ctx context.Context, Req *relation.DouyinRelationActionRequest) (r *relation.DouyinRelationActionResponse, err error) {
-	var _args SubArgs
-	_args.Req = Req
-	var _result SubResult
-	if err = p.c.Call(ctx, "Sub", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) SubList(ctx context.Context, Req *relation.DouyinRelationFollowListRequest) (r *relation.DouyinRelationFollowListResponse, err error) {
-	var _args SubListArgs
-	_args.Req = Req
-	var _result SubListResult
-	if err = p.c.Call(ctx, "SubList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) FansList(ctx context.Context, Req *relation.DouyinRelationFollowerListRequest) (r *relation.DouyinRelationFollowerListResponse, err error) {
-	var _args FansListArgs
-	_args.Req = Req
-	var _result FansListResult
-	if err = p.c.Call(ctx, "FansList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) FriendList(ctx context.Context, Req *relation.DouyinRelationFriendListRequest) (r *relation.DouyinRelationFriendListResponse, err error) {
-	var _args FriendListArgs
-	_args.Req = Req
-	var _result FriendListResult
-	if err = p.c.Call(ctx, "FriendList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
Index: kitex_gen/relation/relationsvr/invoker.go
===================================================================
diff --git a/kitex_gen/relation/relationsvr/invoker.go b/kitex_gen/relation/relationsvr/invoker.go
deleted file mode 100644
--- a/kitex_gen/relation/relationsvr/invoker.go	
+++ /dev/null	
@@ -1,24 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package relationsvr
-
-import (
-	relation "dousheng/kitex_gen/relation"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewInvoker creates a server.Invoker with the given handler and options.
-func NewInvoker(handler relation.RelationSvr, opts ...server.Option) server.Invoker {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	s := server.NewInvoker(options...)
-	if err := s.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	if err := s.Init(); err != nil {
-		panic(err)
-	}
-	return s
-}
Index: kitex_gen/user/user.pb.fast.go
===================================================================
diff --git a/kitex_gen/user/user.pb.fast.go b/kitex_gen/user/user.pb.fast.go
deleted file mode 100644
--- a/kitex_gen/user/user.pb.fast.go	
+++ /dev/null	
@@ -1,885 +0,0 @@
-// Code generated by Fastpb v0.0.2. DO NOT EDIT.
-
-package user
-
-import (
-	fmt "fmt"
-	fastpb "github.com/cloudwego/fastpb"
-)
-
-var (
-	_ = fmt.Errorf
-	_ = fastpb.Skip
-)
-
-func (x *DouyinUserRegisterRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserRegisterRequest[number], err)
-}
-
-func (x *DouyinUserRegisterRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Username, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Password, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserRegisterResponse[number], err)
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterResponse) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserLoginRequest[number], err)
-}
-
-func (x *DouyinUserLoginRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Username, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Password, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserLoginResponse[number], err)
-}
-
-func (x *DouyinUserLoginResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserLoginResponse) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserRequest[number], err)
-}
-
-func (x *DouyinUserRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinUserResponse[number], err)
-}
-
-func (x *DouyinUserResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinUserResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.User = &v
-	return offset, nil
-}
-
-func (x *User) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 5:
-		offset, err = x.fastReadField5(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_User[number], err)
-}
-
-func (x *User) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Id, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *User) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Name, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *User) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadInt64(buf, _type)
-	x.FollowCount = &tmp
-	return offset, err
-}
-
-func (x *User) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadInt64(buf, _type)
-	x.FollowerCount = &tmp
-	return offset, err
-}
-
-func (x *User) fastReadField5(buf []byte, _type int8) (offset int, err error) {
-	x.IsFollow, offset, err = fastpb.ReadBool(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinUserRegisterRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserRegisterRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Username == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Username)
-	return offset
-}
-
-func (x *DouyinUserRegisterRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Password == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Password)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, x.UserId)
-	return offset
-}
-
-func (x *DouyinUserRegisterResponse) fastWriteField4(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.Token)
-	return offset
-}
-
-func (x *DouyinUserLoginRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserLoginRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Username == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Username)
-	return offset
-}
-
-func (x *DouyinUserLoginRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Password == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Password)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, x.UserId)
-	return offset
-}
-
-func (x *DouyinUserLoginResponse) fastWriteField4(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.Token)
-	return offset
-}
-
-func (x *DouyinUserRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinUserRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinUserResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinUserResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinUserResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinUserResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.User == nil {
-		return offset
-	}
-	offset += fastpb.WriteMessage(buf[offset:], 3, x.User)
-	return offset
-}
-
-func (x *User) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	offset += x.fastWriteField5(buf[offset:])
-	return offset
-}
-
-func (x *User) fastWriteField1(buf []byte) (offset int) {
-	if x.Id == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.Id)
-	return offset
-}
-
-func (x *User) fastWriteField2(buf []byte) (offset int) {
-	if x.Name == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Name)
-	return offset
-}
-
-func (x *User) fastWriteField3(buf []byte) (offset int) {
-	if x.FollowCount == nil {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, *x.FollowCount)
-	return offset
-}
-
-func (x *User) fastWriteField4(buf []byte) (offset int) {
-	if x.FollowerCount == nil {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 4, *x.FollowerCount)
-	return offset
-}
-
-func (x *User) fastWriteField5(buf []byte) (offset int) {
-	if !x.IsFollow {
-		return offset
-	}
-	offset += fastpb.WriteBool(buf[offset:], 5, x.IsFollow)
-	return offset
-}
-
-func (x *DouyinUserRegisterRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinUserRegisterRequest) sizeField1() (n int) {
-	if x.Username == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Username)
-	return n
-}
-
-func (x *DouyinUserRegisterRequest) sizeField2() (n int) {
-	if x.Password == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Password)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField3() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(3, x.UserId)
-	return n
-}
-
-func (x *DouyinUserRegisterResponse) sizeField4() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.Token)
-	return n
-}
-
-func (x *DouyinUserLoginRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinUserLoginRequest) sizeField1() (n int) {
-	if x.Username == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Username)
-	return n
-}
-
-func (x *DouyinUserLoginRequest) sizeField2() (n int) {
-	if x.Password == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Password)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField3() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(3, x.UserId)
-	return n
-}
-
-func (x *DouyinUserLoginResponse) sizeField4() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.Token)
-	return n
-}
-
-func (x *DouyinUserRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinUserRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinUserRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinUserResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinUserResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinUserResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinUserResponse) sizeField3() (n int) {
-	if x.User == nil {
-		return n
-	}
-	n += fastpb.SizeMessage(3, x.User)
-	return n
-}
-
-func (x *User) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	n += x.sizeField5()
-	return n
-}
-
-func (x *User) sizeField1() (n int) {
-	if x.Id == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.Id)
-	return n
-}
-
-func (x *User) sizeField2() (n int) {
-	if x.Name == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Name)
-	return n
-}
-
-func (x *User) sizeField3() (n int) {
-	if x.FollowCount == nil {
-		return n
-	}
-	n += fastpb.SizeInt64(3, *x.FollowCount)
-	return n
-}
-
-func (x *User) sizeField4() (n int) {
-	if x.FollowerCount == nil {
-		return n
-	}
-	n += fastpb.SizeInt64(4, *x.FollowerCount)
-	return n
-}
-
-func (x *User) sizeField5() (n int) {
-	if !x.IsFollow {
-		return n
-	}
-	n += fastpb.SizeBool(5, x.IsFollow)
-	return n
-}
-
-var fieldIDToName_DouyinUserRegisterRequest = map[int32]string{
-	1: "Username",
-	2: "Password",
-}
-
-var fieldIDToName_DouyinUserRegisterResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserId",
-	4: "Token",
-}
-
-var fieldIDToName_DouyinUserLoginRequest = map[int32]string{
-	1: "Username",
-	2: "Password",
-}
-
-var fieldIDToName_DouyinUserLoginResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserId",
-	4: "Token",
-}
-
-var fieldIDToName_DouyinUserRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinUserResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "User",
-}
-
-var fieldIDToName_User = map[int32]string{
-	1: "Id",
-	2: "Name",
-	3: "FollowCount",
-	4: "FollowerCount",
-	5: "IsFollow",
-}
Index: kitex_gen/video/video.pb.fast.go
===================================================================
diff --git a/kitex_gen/video/video.pb.fast.go b/kitex_gen/video/video.pb.fast.go
deleted file mode 100644
--- a/kitex_gen/video/video.pb.fast.go	
+++ /dev/null	
@@ -1,965 +0,0 @@
-// Code generated by Fastpb v0.0.2. DO NOT EDIT.
-
-package video
-
-import (
-	user "dousheng/kitex_gen/user"
-	fmt "fmt"
-	fastpb "github.com/cloudwego/fastpb"
-)
-
-var (
-	_ = fmt.Errorf
-	_ = fastpb.Skip
-)
-
-func (x *DouyinFeedRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinFeedRequest[number], err)
-}
-
-func (x *DouyinFeedRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadInt64(buf, _type)
-	x.LatestTime = &tmp
-	return offset, err
-}
-
-func (x *DouyinFeedRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.Token = &tmp
-	return offset, err
-}
-
-func (x *DouyinFeedResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinFeedResponse[number], err)
-}
-
-func (x *DouyinFeedResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFeedResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinFeedResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v Video
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.VideoList = append(x.VideoList, &v)
-	return offset, nil
-}
-
-func (x *DouyinFeedResponse) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadInt64(buf, _type)
-	x.NextTime = &tmp
-	return offset, err
-}
-
-func (x *DouyinPublishActionRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinPublishActionRequest[number], err)
-}
-
-func (x *DouyinPublishActionRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinPublishActionRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Data, offset, err = fastpb.ReadBytes(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinPublishActionRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.Title, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinPublishActionResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinPublishActionResponse[number], err)
-}
-
-func (x *DouyinPublishActionResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinPublishActionResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinPublishListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinPublishListRequest[number], err)
-}
-
-func (x *DouyinPublishListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinPublishListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinPublishListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinPublishListResponse[number], err)
-}
-
-func (x *DouyinPublishListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinPublishListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinPublishListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v Video
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.VideoList = append(x.VideoList, &v)
-	return offset, nil
-}
-
-func (x *Video) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 5:
-		offset, err = x.fastReadField5(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 6:
-		offset, err = x.fastReadField6(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 7:
-		offset, err = x.fastReadField7(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 8:
-		offset, err = x.fastReadField8(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_Video[number], err)
-}
-
-func (x *Video) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Id, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *Video) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.Author = &v
-	return offset, nil
-}
-
-func (x *Video) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.PlayUrl, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *Video) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.CoverUrl, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *Video) fastReadField5(buf []byte, _type int8) (offset int, err error) {
-	x.FavoriteCount, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *Video) fastReadField6(buf []byte, _type int8) (offset int, err error) {
-	x.CommentCount, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *Video) fastReadField7(buf []byte, _type int8) (offset int, err error) {
-	x.IsFavorite, offset, err = fastpb.ReadBool(buf, _type)
-	return offset, err
-}
-
-func (x *Video) fastReadField8(buf []byte, _type int8) (offset int, err error) {
-	x.Title, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinFeedRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinFeedRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.LatestTime == nil {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, *x.LatestTime)
-	return offset
-}
-
-func (x *DouyinFeedRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.Token)
-	return offset
-}
-
-func (x *DouyinFeedResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	return offset
-}
-
-func (x *DouyinFeedResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinFeedResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinFeedResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.VideoList == nil {
-		return offset
-	}
-	for i := range x.VideoList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.VideoList[i])
-	}
-	return offset
-}
-
-func (x *DouyinFeedResponse) fastWriteField4(buf []byte) (offset int) {
-	if x.NextTime == nil {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 4, *x.NextTime)
-	return offset
-}
-
-func (x *DouyinPublishActionRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinPublishActionRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinPublishActionRequest) fastWriteField2(buf []byte) (offset int) {
-	if len(x.Data) == 0 {
-		return offset
-	}
-	offset += fastpb.WriteBytes(buf[offset:], 2, x.Data)
-	return offset
-}
-
-func (x *DouyinPublishActionRequest) fastWriteField3(buf []byte) (offset int) {
-	if x.Title == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 3, x.Title)
-	return offset
-}
-
-func (x *DouyinPublishActionResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinPublishActionResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinPublishActionResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinPublishListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinPublishListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinPublishListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinPublishListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinPublishListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinPublishListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinPublishListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.VideoList == nil {
-		return offset
-	}
-	for i := range x.VideoList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.VideoList[i])
-	}
-	return offset
-}
-
-func (x *Video) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	offset += x.fastWriteField5(buf[offset:])
-	offset += x.fastWriteField6(buf[offset:])
-	offset += x.fastWriteField7(buf[offset:])
-	offset += x.fastWriteField8(buf[offset:])
-	return offset
-}
-
-func (x *Video) fastWriteField1(buf []byte) (offset int) {
-	if x.Id == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.Id)
-	return offset
-}
-
-func (x *Video) fastWriteField2(buf []byte) (offset int) {
-	if x.Author == nil {
-		return offset
-	}
-	offset += fastpb.WriteMessage(buf[offset:], 2, x.Author)
-	return offset
-}
-
-func (x *Video) fastWriteField3(buf []byte) (offset int) {
-	if x.PlayUrl == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 3, x.PlayUrl)
-	return offset
-}
-
-func (x *Video) fastWriteField4(buf []byte) (offset int) {
-	if x.CoverUrl == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.CoverUrl)
-	return offset
-}
-
-func (x *Video) fastWriteField5(buf []byte) (offset int) {
-	if x.FavoriteCount == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 5, x.FavoriteCount)
-	return offset
-}
-
-func (x *Video) fastWriteField6(buf []byte) (offset int) {
-	if x.CommentCount == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 6, x.CommentCount)
-	return offset
-}
-
-func (x *Video) fastWriteField7(buf []byte) (offset int) {
-	if !x.IsFavorite {
-		return offset
-	}
-	offset += fastpb.WriteBool(buf[offset:], 7, x.IsFavorite)
-	return offset
-}
-
-func (x *Video) fastWriteField8(buf []byte) (offset int) {
-	if x.Title == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 8, x.Title)
-	return offset
-}
-
-func (x *DouyinFeedRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinFeedRequest) sizeField1() (n int) {
-	if x.LatestTime == nil {
-		return n
-	}
-	n += fastpb.SizeInt64(1, *x.LatestTime)
-	return n
-}
-
-func (x *DouyinFeedRequest) sizeField2() (n int) {
-	if x.Token == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.Token)
-	return n
-}
-
-func (x *DouyinFeedResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	return n
-}
-
-func (x *DouyinFeedResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinFeedResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinFeedResponse) sizeField3() (n int) {
-	if x.VideoList == nil {
-		return n
-	}
-	for i := range x.VideoList {
-		n += fastpb.SizeMessage(3, x.VideoList[i])
-	}
-	return n
-}
-
-func (x *DouyinFeedResponse) sizeField4() (n int) {
-	if x.NextTime == nil {
-		return n
-	}
-	n += fastpb.SizeInt64(4, *x.NextTime)
-	return n
-}
-
-func (x *DouyinPublishActionRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinPublishActionRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinPublishActionRequest) sizeField2() (n int) {
-	if len(x.Data) == 0 {
-		return n
-	}
-	n += fastpb.SizeBytes(2, x.Data)
-	return n
-}
-
-func (x *DouyinPublishActionRequest) sizeField3() (n int) {
-	if x.Title == "" {
-		return n
-	}
-	n += fastpb.SizeString(3, x.Title)
-	return n
-}
-
-func (x *DouyinPublishActionResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinPublishActionResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinPublishActionResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinPublishListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinPublishListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinPublishListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinPublishListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinPublishListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinPublishListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinPublishListResponse) sizeField3() (n int) {
-	if x.VideoList == nil {
-		return n
-	}
-	for i := range x.VideoList {
-		n += fastpb.SizeMessage(3, x.VideoList[i])
-	}
-	return n
-}
-
-func (x *Video) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	n += x.sizeField5()
-	n += x.sizeField6()
-	n += x.sizeField7()
-	n += x.sizeField8()
-	return n
-}
-
-func (x *Video) sizeField1() (n int) {
-	if x.Id == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.Id)
-	return n
-}
-
-func (x *Video) sizeField2() (n int) {
-	if x.Author == nil {
-		return n
-	}
-	n += fastpb.SizeMessage(2, x.Author)
-	return n
-}
-
-func (x *Video) sizeField3() (n int) {
-	if x.PlayUrl == "" {
-		return n
-	}
-	n += fastpb.SizeString(3, x.PlayUrl)
-	return n
-}
-
-func (x *Video) sizeField4() (n int) {
-	if x.CoverUrl == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.CoverUrl)
-	return n
-}
-
-func (x *Video) sizeField5() (n int) {
-	if x.FavoriteCount == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(5, x.FavoriteCount)
-	return n
-}
-
-func (x *Video) sizeField6() (n int) {
-	if x.CommentCount == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(6, x.CommentCount)
-	return n
-}
-
-func (x *Video) sizeField7() (n int) {
-	if !x.IsFavorite {
-		return n
-	}
-	n += fastpb.SizeBool(7, x.IsFavorite)
-	return n
-}
-
-func (x *Video) sizeField8() (n int) {
-	if x.Title == "" {
-		return n
-	}
-	n += fastpb.SizeString(8, x.Title)
-	return n
-}
-
-var fieldIDToName_DouyinFeedRequest = map[int32]string{
-	1: "LatestTime",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinFeedResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "VideoList",
-	4: "NextTime",
-}
-
-var fieldIDToName_DouyinPublishActionRequest = map[int32]string{
-	1: "Token",
-	2: "Data",
-	3: "Title",
-}
-
-var fieldIDToName_DouyinPublishActionResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-}
-
-var fieldIDToName_DouyinPublishListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinPublishListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "VideoList",
-}
-
-var fieldIDToName_Video = map[int32]string{
-	1: "Id",
-	2: "Author",
-	3: "PlayUrl",
-	4: "CoverUrl",
-	5: "FavoriteCount",
-	6: "CommentCount",
-	7: "IsFavorite",
-	8: "Title",
-}
-
-var _ = user.File_user_proto
Index: dal/model/tb_comment.gen.go
===================================================================
diff --git a/dal/model/tb_comment.gen.go b/dal/model/tb_comment.gen.go
deleted file mode 100644
--- a/dal/model/tb_comment.gen.go	
+++ /dev/null	
@@ -1,25 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package model
-
-import (
-	"time"
-)
-
-const TableNameComment = "tb_comment"
-
-// Comment mapped from table <tb_comment>
-type Comment struct {
-	CommentID  int64     `gorm:"column:comment_id;primaryKey;autoIncrement:true" json:"comment_id"`        // 评论id
-	UserID     int64     `gorm:"column:user_id" json:"user_id"`                                            // 用户id
-	VideoID    int64     `gorm:"column:video_id" json:"video_id"`                                          // 视频id
-	Content    string    `gorm:"column:content" json:"content"`                                            // 评论
-	CreateTime time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 创建时间
-}
-
-// TableName Comment's table name
-func (*Comment) TableName() string {
-	return TableNameComment
-}
Index: dal/db/tb_relation.gen.go
===================================================================
diff --git a/dal/db/tb_relation.gen.go b/dal/db/tb_relation.gen.go
deleted file mode 100644
--- a/dal/db/tb_relation.gen.go	
+++ /dev/null	
@@ -1,339 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package db
-
-import (
-	"context"
-
-	"gorm.io/gorm"
-	"gorm.io/gorm/clause"
-	"gorm.io/gorm/schema"
-
-	"gorm.io/gen"
-	"gorm.io/gen/field"
-
-	"gorm.io/plugin/dbresolver"
-
-	"dousheng/dal/model"
-)
-
-func newRelation(db *gorm.DB, opts ...gen.DOOption) relation {
-	_relation := relation{}
-
-	_relation.relationDo.UseDB(db, opts...)
-	_relation.relationDo.UseModel(&model.Relation{})
-
-	tableName := _relation.relationDo.TableName()
-	_relation.ALL = field.NewAsterisk(tableName)
-	_relation.RelationID = field.NewInt64(tableName, "relation_id")
-	_relation.FollowerID = field.NewInt64(tableName, "follower_id")
-	_relation.FollowingID = field.NewInt64(tableName, "following_id")
-	_relation.Isdeleted = field.NewInt32(tableName, "isdeleted")
-	_relation.CreateTime = field.NewTime(tableName, "create_time")
-
-	_relation.fillFieldMap()
-
-	return _relation
-}
-
-type relation struct {
-	relationDo
-
-	ALL         field.Asterisk
-	RelationID  field.Int64 // 关注id
-	FollowerID  field.Int64 // 粉丝id
-	FollowingID field.Int64 // 博主id
-	Isdeleted   field.Int32 // 取消关注
-	CreateTime  field.Time  // 创建时间
-
-	fieldMap map[string]field.Expr
-}
-
-func (r relation) Table(newTableName string) *relation {
-	r.relationDo.UseTable(newTableName)
-	return r.updateTableName(newTableName)
-}
-
-func (r relation) As(alias string) *relation {
-	r.relationDo.DO = *(r.relationDo.As(alias).(*gen.DO))
-	return r.updateTableName(alias)
-}
-
-func (r *relation) updateTableName(table string) *relation {
-	r.ALL = field.NewAsterisk(table)
-	r.RelationID = field.NewInt64(table, "relation_id")
-	r.FollowerID = field.NewInt64(table, "follower_id")
-	r.FollowingID = field.NewInt64(table, "following_id")
-	r.Isdeleted = field.NewInt32(table, "isdeleted")
-	r.CreateTime = field.NewTime(table, "create_time")
-
-	r.fillFieldMap()
-
-	return r
-}
-
-func (r *relation) GetFieldByName(fieldName string) (field.OrderExpr, bool) {
-	_f, ok := r.fieldMap[fieldName]
-	if !ok || _f == nil {
-		return nil, false
-	}
-	_oe, ok := _f.(field.OrderExpr)
-	return _oe, ok
-}
-
-func (r *relation) fillFieldMap() {
-	r.fieldMap = make(map[string]field.Expr, 5)
-	r.fieldMap["relation_id"] = r.RelationID
-	r.fieldMap["follower_id"] = r.FollowerID
-	r.fieldMap["following_id"] = r.FollowingID
-	r.fieldMap["isdeleted"] = r.Isdeleted
-	r.fieldMap["create_time"] = r.CreateTime
-}
-
-func (r relation) clone(db *gorm.DB) relation {
-	r.relationDo.ReplaceConnPool(db.Statement.ConnPool)
-	return r
-}
-
-func (r relation) replaceDB(db *gorm.DB) relation {
-	r.relationDo.ReplaceDB(db)
-	return r
-}
-
-type relationDo struct{ gen.DO }
-
-func (r relationDo) Debug() *relationDo {
-	return r.withDO(r.DO.Debug())
-}
-
-func (r relationDo) WithContext(ctx context.Context) *relationDo {
-	return r.withDO(r.DO.WithContext(ctx))
-}
-
-func (r relationDo) ReadDB() *relationDo {
-	return r.Clauses(dbresolver.Read)
-}
-
-func (r relationDo) WriteDB() *relationDo {
-	return r.Clauses(dbresolver.Write)
-}
-
-func (r relationDo) Session(config *gorm.Session) *relationDo {
-	return r.withDO(r.DO.Session(config))
-}
-
-func (r relationDo) Clauses(conds ...clause.Expression) *relationDo {
-	return r.withDO(r.DO.Clauses(conds...))
-}
-
-func (r relationDo) Returning(value interface{}, columns ...string) *relationDo {
-	return r.withDO(r.DO.Returning(value, columns...))
-}
-
-func (r relationDo) Not(conds ...gen.Condition) *relationDo {
-	return r.withDO(r.DO.Not(conds...))
-}
-
-func (r relationDo) Or(conds ...gen.Condition) *relationDo {
-	return r.withDO(r.DO.Or(conds...))
-}
-
-func (r relationDo) Select(conds ...field.Expr) *relationDo {
-	return r.withDO(r.DO.Select(conds...))
-}
-
-func (r relationDo) Where(conds ...gen.Condition) *relationDo {
-	return r.withDO(r.DO.Where(conds...))
-}
-
-func (r relationDo) Exists(subquery interface{ UnderlyingDB() *gorm.DB }) *relationDo {
-	return r.Where(field.CompareSubQuery(field.ExistsOp, nil, subquery.UnderlyingDB()))
-}
-
-func (r relationDo) Order(conds ...field.Expr) *relationDo {
-	return r.withDO(r.DO.Order(conds...))
-}
-
-func (r relationDo) Distinct(cols ...field.Expr) *relationDo {
-	return r.withDO(r.DO.Distinct(cols...))
-}
-
-func (r relationDo) Omit(cols ...field.Expr) *relationDo {
-	return r.withDO(r.DO.Omit(cols...))
-}
-
-func (r relationDo) Join(table schema.Tabler, on ...field.Expr) *relationDo {
-	return r.withDO(r.DO.Join(table, on...))
-}
-
-func (r relationDo) LeftJoin(table schema.Tabler, on ...field.Expr) *relationDo {
-	return r.withDO(r.DO.LeftJoin(table, on...))
-}
-
-func (r relationDo) RightJoin(table schema.Tabler, on ...field.Expr) *relationDo {
-	return r.withDO(r.DO.RightJoin(table, on...))
-}
-
-func (r relationDo) Group(cols ...field.Expr) *relationDo {
-	return r.withDO(r.DO.Group(cols...))
-}
-
-func (r relationDo) Having(conds ...gen.Condition) *relationDo {
-	return r.withDO(r.DO.Having(conds...))
-}
-
-func (r relationDo) Limit(limit int) *relationDo {
-	return r.withDO(r.DO.Limit(limit))
-}
-
-func (r relationDo) Offset(offset int) *relationDo {
-	return r.withDO(r.DO.Offset(offset))
-}
-
-func (r relationDo) Scopes(funcs ...func(gen.Dao) gen.Dao) *relationDo {
-	return r.withDO(r.DO.Scopes(funcs...))
-}
-
-func (r relationDo) Unscoped() *relationDo {
-	return r.withDO(r.DO.Unscoped())
-}
-
-func (r relationDo) Create(values ...*model.Relation) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return r.DO.Create(values)
-}
-
-func (r relationDo) CreateInBatches(values []*model.Relation, batchSize int) error {
-	return r.DO.CreateInBatches(values, batchSize)
-}
-
-// Save : !!! underlying implementation is different with GORM
-// The method is equivalent to executing the statement: db.Clauses(clause.OnConflict{UpdateAll: true}).Create(values)
-func (r relationDo) Save(values ...*model.Relation) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return r.DO.Save(values)
-}
-
-func (r relationDo) First() (*model.Relation, error) {
-	if result, err := r.DO.First(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Relation), nil
-	}
-}
-
-func (r relationDo) Take() (*model.Relation, error) {
-	if result, err := r.DO.Take(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Relation), nil
-	}
-}
-
-func (r relationDo) Last() (*model.Relation, error) {
-	if result, err := r.DO.Last(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Relation), nil
-	}
-}
-
-func (r relationDo) Find() ([]*model.Relation, error) {
-	result, err := r.DO.Find()
-	return result.([]*model.Relation), err
-}
-
-func (r relationDo) FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*model.Relation, err error) {
-	buf := make([]*model.Relation, 0, batchSize)
-	err = r.DO.FindInBatches(&buf, batchSize, func(tx gen.Dao, batch int) error {
-		defer func() { results = append(results, buf...) }()
-		return fc(tx, batch)
-	})
-	return results, err
-}
-
-func (r relationDo) FindInBatches(result *[]*model.Relation, batchSize int, fc func(tx gen.Dao, batch int) error) error {
-	return r.DO.FindInBatches(result, batchSize, fc)
-}
-
-func (r relationDo) Attrs(attrs ...field.AssignExpr) *relationDo {
-	return r.withDO(r.DO.Attrs(attrs...))
-}
-
-func (r relationDo) Assign(attrs ...field.AssignExpr) *relationDo {
-	return r.withDO(r.DO.Assign(attrs...))
-}
-
-func (r relationDo) Joins(fields ...field.RelationField) *relationDo {
-	for _, _f := range fields {
-		r = *r.withDO(r.DO.Joins(_f))
-	}
-	return &r
-}
-
-func (r relationDo) Preload(fields ...field.RelationField) *relationDo {
-	for _, _f := range fields {
-		r = *r.withDO(r.DO.Preload(_f))
-	}
-	return &r
-}
-
-func (r relationDo) FirstOrInit() (*model.Relation, error) {
-	if result, err := r.DO.FirstOrInit(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Relation), nil
-	}
-}
-
-func (r relationDo) FirstOrCreate() (*model.Relation, error) {
-	if result, err := r.DO.FirstOrCreate(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Relation), nil
-	}
-}
-
-func (r relationDo) FindByPage(offset int, limit int) (result []*model.Relation, count int64, err error) {
-	result, err = r.Offset(offset).Limit(limit).Find()
-	if err != nil {
-		return
-	}
-
-	if size := len(result); 0 < limit && 0 < size && size < limit {
-		count = int64(size + offset)
-		return
-	}
-
-	count, err = r.Offset(-1).Limit(-1).Count()
-	return
-}
-
-func (r relationDo) ScanByPage(result interface{}, offset int, limit int) (count int64, err error) {
-	count, err = r.Count()
-	if err != nil {
-		return
-	}
-
-	err = r.Offset(offset).Limit(limit).Scan(result)
-	return
-}
-
-func (r relationDo) Scan(result interface{}) (err error) {
-	return r.DO.Scan(result)
-}
-
-func (r relationDo) Delete(models ...*model.Relation) (result gen.ResultInfo, err error) {
-	return r.DO.Delete(models)
-}
-
-func (r *relationDo) withDO(do gen.Dao) *relationDo {
-	r.DO = *do.(*gen.DO)
-	return r
-}
Index: handler.go
===================================================================
diff --git a/handler.go b/handler.go
deleted file mode 100644
--- a/handler.go	
+++ /dev/null	
@@ -1,109 +0,0 @@
-package main
-
-import (
-	"context"
-	chat "dousheng/kitex_gen/chat"
-	interact "dousheng/kitex_gen/interact"
-	relation "dousheng/kitex_gen/relation"
-	user "dousheng/kitex_gen/user"
-	video "dousheng/kitex_gen/video"
-)
-
-// VideoSvrImpl implements the last service interface defined in the IDL.
-type VideoSvrImpl struct{}
-
-// Feed implements the VideoSvrImpl interface.
-func (s *VideoSvrImpl) Feed(ctx context.Context, req *video.DouyinFeedRequest) (resp *video.DouyinFeedResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// Publish implements the VideoSvrImpl interface.
-func (s *VideoSvrImpl) Publish(ctx context.Context, req *video.DouyinPublishActionRequest) (resp *video.DouyinPublishActionResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// PublishList implements the VideoSvrImpl interface.
-func (s *VideoSvrImpl) PublishList(ctx context.Context, req *video.DouyinPublishListRequest) (resp *video.DouyinPublishListResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// Register implements the UserSvrImpl interface.
-func (s *UserSvrImpl) Register(ctx context.Context, req *user.DouyinUserRegisterRequest) (resp *user.DouyinUserRegisterResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// Login implements the UserSvrImpl interface.
-func (s *UserSvrImpl) Login(ctx context.Context, req *user.DouyinUserLoginRequest) (resp *user.DouyinUserLoginResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// GetById implements the UserSvrImpl interface.
-func (s *UserSvrImpl) GetById(ctx context.Context, req *user.DouyinUserRequest) (resp *user.DouyinUserResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// Fav implements the InteractSvrImpl interface.
-func (s *InteractSvrImpl) Fav(ctx context.Context, req *interact.DouyinFavoriteActionRequest) (resp *interact.DouyinFavoriteActionResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// FavList implements the InteractSvrImpl interface.
-func (s *InteractSvrImpl) FavList(ctx context.Context, req *interact.DouyinFavoriteListRequest) (resp *interact.DouyinFavoriteListResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// Comment implements the InteractSvrImpl interface.
-func (s *InteractSvrImpl) Comment(ctx context.Context, req *interact.DouyinCommentActionRequest) (resp *interact.DouyinCommentActionResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// CommentList implements the InteractSvrImpl interface.
-func (s *InteractSvrImpl) CommentList(ctx context.Context, req *interact.DouyinCommentListRequest) (resp *interact.DouyinCommentListResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// Sub implements the RelationSvrImpl interface.
-func (s *RelationSvrImpl) Sub(ctx context.Context, req *relation.DouyinRelationActionRequest) (resp *relation.DouyinRelationActionResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// SubList implements the RelationSvrImpl interface.
-func (s *RelationSvrImpl) SubList(ctx context.Context, req *relation.DouyinRelationFollowListRequest) (resp *relation.DouyinRelationFollowListResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// FansList implements the RelationSvrImpl interface.
-func (s *RelationSvrImpl) FansList(ctx context.Context, req *relation.DouyinRelationFollowerListRequest) (resp *relation.DouyinRelationFollowerListResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// FriendList implements the RelationSvrImpl interface.
-func (s *RelationSvrImpl) FriendList(ctx context.Context, req *relation.DouyinRelationFriendListRequest) (resp *relation.DouyinRelationFriendListResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// GetMsg implements the ChatSvrImpl interface.
-func (s *ChatSvrImpl) GetMsg(ctx context.Context, req *chat.DouyinRelationActionRequest) (resp *chat.DouyinRelationActionResponse, err error) {
-	// TODO: Your code here...
-	return
-}
-
-// PostMsg implements the ChatSvrImpl interface.
-func (s *ChatSvrImpl) PostMsg(ctx context.Context, req *chat.DouyinMessageChatRequest) (resp *chat.DouyinMessageChatResponse, err error) {
-	// TODO: Your code here...
-	return
-}
Index: kitex_gen/relation/relation.pb.fast.go
===================================================================
diff --git a/kitex_gen/relation/relation.pb.fast.go b/kitex_gen/relation/relation.pb.fast.go
deleted file mode 100644
--- a/kitex_gen/relation/relation.pb.fast.go	
+++ /dev/null	
@@ -1,1008 +0,0 @@
-// Code generated by Fastpb v0.0.2. DO NOT EDIT.
-
-package relation
-
-import (
-	user "dousheng/kitex_gen/user"
-	fmt "fmt"
-	fastpb "github.com/cloudwego/fastpb"
-)
-
-var (
-	_ = fmt.Errorf
-	_ = fastpb.Skip
-)
-
-func (x *DouyinRelationActionRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationActionRequest[number], err)
-}
-
-func (x *DouyinRelationActionRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.ToUserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.ActionType, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationActionResponse[number], err)
-}
-
-func (x *DouyinRelationActionResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowListRequest[number], err)
-}
-
-func (x *DouyinRelationFollowListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowListResponse[number], err)
-}
-
-func (x *DouyinRelationFollowListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFollowListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.UserList = append(x.UserList, &v)
-	return offset, nil
-}
-
-func (x *DouyinRelationFollowerListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowerListRequest[number], err)
-}
-
-func (x *DouyinRelationFollowerListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFollowerListResponse[number], err)
-}
-
-func (x *DouyinRelationFollowerListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFollowerListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.UserList = append(x.UserList, &v)
-	return offset, nil
-}
-
-func (x *DouyinRelationFriendListRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFriendListRequest[number], err)
-}
-
-func (x *DouyinRelationFriendListRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.UserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationFriendListResponse[number], err)
-}
-
-func (x *DouyinRelationFriendListResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinRelationFriendListResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v FriendUser
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.UserList = append(x.UserList, &v)
-	return offset, nil
-}
-
-func (x *FriendUser) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_FriendUser[number], err)
-}
-
-func (x *FriendUser) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	var v user.User
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.User = &v
-	return offset, nil
-}
-
-func (x *FriendUser) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.Message = &tmp
-	return offset, err
-}
-
-func (x *FriendUser) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.MsgType, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.ToUserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.ToUserId)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField3(buf []byte) (offset int) {
-	if x.ActionType == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 3, x.ActionType)
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFollowListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinRelationFollowListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFollowListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserList == nil {
-		return offset
-	}
-	for i := range x.UserList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.UserList[i])
-	}
-	return offset
-}
-
-func (x *DouyinRelationFollowerListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowerListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFollowerListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserList == nil {
-		return offset
-	}
-	for i := range x.UserList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.UserList[i])
-	}
-	return offset
-}
-
-func (x *DouyinRelationFriendListRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFriendListRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.UserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.UserId)
-	return offset
-}
-
-func (x *DouyinRelationFriendListRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinRelationFriendListResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.UserList == nil {
-		return offset
-	}
-	for i := range x.UserList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.UserList[i])
-	}
-	return offset
-}
-
-func (x *FriendUser) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *FriendUser) fastWriteField1(buf []byte) (offset int) {
-	if x.User == nil {
-		return offset
-	}
-	offset += fastpb.WriteMessage(buf[offset:], 1, x.User)
-	return offset
-}
-
-func (x *FriendUser) fastWriteField2(buf []byte) (offset int) {
-	if x.Message == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.Message)
-	return offset
-}
-
-func (x *FriendUser) fastWriteField3(buf []byte) (offset int) {
-	if x.MsgType == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, x.MsgType)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField2() (n int) {
-	if x.ToUserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.ToUserId)
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField3() (n int) {
-	if x.ActionType == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(3, x.ActionType)
-	return n
-}
-
-func (x *DouyinRelationActionResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationActionResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationActionResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFollowListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationFollowListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinRelationFollowListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFollowListResponse) sizeField3() (n int) {
-	if x.UserList == nil {
-		return n
-	}
-	for i := range x.UserList {
-		n += fastpb.SizeMessage(3, x.UserList[i])
-	}
-	return n
-}
-
-func (x *DouyinRelationFollowerListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationFollowerListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinRelationFollowerListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFollowerListResponse) sizeField3() (n int) {
-	if x.UserList == nil {
-		return n
-	}
-	for i := range x.UserList {
-		n += fastpb.SizeMessage(3, x.UserList[i])
-	}
-	return n
-}
-
-func (x *DouyinRelationFriendListRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationFriendListRequest) sizeField1() (n int) {
-	if x.UserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.UserId)
-	return n
-}
-
-func (x *DouyinRelationFriendListRequest) sizeField2() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(2, x.Token)
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinRelationFriendListResponse) sizeField3() (n int) {
-	if x.UserList == nil {
-		return n
-	}
-	for i := range x.UserList {
-		n += fastpb.SizeMessage(3, x.UserList[i])
-	}
-	return n
-}
-
-func (x *FriendUser) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *FriendUser) sizeField1() (n int) {
-	if x.User == nil {
-		return n
-	}
-	n += fastpb.SizeMessage(1, x.User)
-	return n
-}
-
-func (x *FriendUser) sizeField2() (n int) {
-	if x.Message == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.Message)
-	return n
-}
-
-func (x *FriendUser) sizeField3() (n int) {
-	if x.MsgType == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(3, x.MsgType)
-	return n
-}
-
-var fieldIDToName_DouyinRelationActionRequest = map[int32]string{
-	1: "Token",
-	2: "ToUserId",
-	3: "ActionType",
-}
-
-var fieldIDToName_DouyinRelationActionResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-}
-
-var fieldIDToName_DouyinRelationFollowListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinRelationFollowListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserList",
-}
-
-var fieldIDToName_DouyinRelationFollowerListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinRelationFollowerListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserList",
-}
-
-var fieldIDToName_DouyinRelationFriendListRequest = map[int32]string{
-	1: "UserId",
-	2: "Token",
-}
-
-var fieldIDToName_DouyinRelationFriendListResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "UserList",
-}
-
-var fieldIDToName_FriendUser = map[int32]string{
-	1: "User",
-	2: "Message",
-	3: "MsgType",
-}
-
-var _ = user.File_user_proto
Index: biz/handler/video/video_svr.go
===================================================================
diff --git a/biz/handler/video/video_svr.go b/biz/handler/video/video_svr.go
deleted file mode 100644
--- a/biz/handler/video/video_svr.go	
+++ /dev/null	
@@ -1,10 +0,0 @@
-// Code generated by hertz generator.
-
-package video
-
-import (
-	"context"
-
-	"github.com/cloudwego/hertz/pkg/app"
-	"github.com/cloudwego/hertz/pkg/protocol/consts"
-)
Index: dal/db/gen.go
===================================================================
diff --git a/dal/db/gen.go b/dal/db/gen.go
deleted file mode 100644
--- a/dal/db/gen.go	
+++ /dev/null	
@@ -1,131 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package db
-
-import (
-	"context"
-	"database/sql"
-
-	"gorm.io/gorm"
-
-	"gorm.io/gen"
-
-	"gorm.io/plugin/dbresolver"
-)
-
-var (
-	Q        = new(Query)
-	Comment  *comment
-	Favorite *favorite
-	Relation *relation
-	User     *user
-	Video    *video
-)
-
-func SetDefault(db *gorm.DB, opts ...gen.DOOption) {
-	*Q = *Use(db, opts...)
-	Comment = &Q.Comment
-	Favorite = &Q.Favorite
-	Relation = &Q.Relation
-	User = &Q.User
-	Video = &Q.Video
-}
-
-func Use(db *gorm.DB, opts ...gen.DOOption) *Query {
-	return &Query{
-		db:       db,
-		Comment:  newComment(db, opts...),
-		Favorite: newFavorite(db, opts...),
-		Relation: newRelation(db, opts...),
-		User:     newUser(db, opts...),
-		Video:    newVideo(db, opts...),
-	}
-}
-
-type Query struct {
-	db *gorm.DB
-
-	Comment  comment
-	Favorite favorite
-	Relation relation
-	User     user
-	Video    video
-}
-
-func (q *Query) Available() bool { return q.db != nil }
-
-func (q *Query) clone(db *gorm.DB) *Query {
-	return &Query{
-		db:       db,
-		Comment:  q.Comment.clone(db),
-		Favorite: q.Favorite.clone(db),
-		Relation: q.Relation.clone(db),
-		User:     q.User.clone(db),
-		Video:    q.Video.clone(db),
-	}
-}
-
-func (q *Query) ReadDB() *Query {
-	return q.ReplaceDB(q.db.Clauses(dbresolver.Read))
-}
-
-func (q *Query) WriteDB() *Query {
-	return q.ReplaceDB(q.db.Clauses(dbresolver.Write))
-}
-
-func (q *Query) ReplaceDB(db *gorm.DB) *Query {
-	return &Query{
-		db:       db,
-		Comment:  q.Comment.replaceDB(db),
-		Favorite: q.Favorite.replaceDB(db),
-		Relation: q.Relation.replaceDB(db),
-		User:     q.User.replaceDB(db),
-		Video:    q.Video.replaceDB(db),
-	}
-}
-
-type queryCtx struct {
-	Comment  *commentDo
-	Favorite *favoriteDo
-	Relation *relationDo
-	User     *userDo
-	Video    *videoDo
-}
-
-func (q *Query) WithContext(ctx context.Context) *queryCtx {
-	return &queryCtx{
-		Comment:  q.Comment.WithContext(ctx),
-		Favorite: q.Favorite.WithContext(ctx),
-		Relation: q.Relation.WithContext(ctx),
-		User:     q.User.WithContext(ctx),
-		Video:    q.Video.WithContext(ctx),
-	}
-}
-
-func (q *Query) Transaction(fc func(tx *Query) error, opts ...*sql.TxOptions) error {
-	return q.db.Transaction(func(tx *gorm.DB) error { return fc(q.clone(tx)) }, opts...)
-}
-
-func (q *Query) Begin(opts ...*sql.TxOptions) *QueryTx {
-	return &QueryTx{q.clone(q.db.Begin(opts...))}
-}
-
-type QueryTx struct{ *Query }
-
-func (q *QueryTx) Commit() error {
-	return q.db.Commit().Error
-}
-
-func (q *QueryTx) Rollback() error {
-	return q.db.Rollback().Error
-}
-
-func (q *QueryTx) SavePoint(name string) error {
-	return q.db.SavePoint(name).Error
-}
-
-func (q *QueryTx) RollbackTo(name string) error {
-	return q.db.RollbackTo(name).Error
-}
Index: IDL/interact.proto
===================================================================
diff --git a/IDL/interact.proto b/IDL/interact.proto
deleted file mode 100644
--- a/IDL/interact.proto	
+++ /dev/null	
@@ -1,90 +0,0 @@
-syntax = "proto3";
-package interact;
-option go_package = "interact";
-
-import "user.proto";
-import "video.proto";
-
-message douyin_favorite_action_request {
-  string token = 1; // 用户鉴权token
-  int64 video_id = 2; // 视频id
-  int32 action_type = 3; // 1-点赞，2-取消点赞
-}
-
-message douyin_favorite_action_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-}
-
-message douyin_favorite_list_request {
-  int64 user_id = 1; // 用户id
-  string token = 2; // 用户鉴权token
-}
-
-message douyin_favorite_list_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated video.Video video_list = 3; // 用户点赞视频列表
-}
-
-message douyin_comment_action_request {
-  string token = 1; // 用户鉴权token
-  int64 video_id = 2; // 视频id
-  int32 action_type = 3; // 1-发布评论，2-删除评论
-  optional string comment_text = 4; // 用户填写的评论内容，在action_type=1的时候使用
-  optional int64 comment_id = 5; // 要删除的评论id，在action_type=2的时候使用
-}
-
-message douyin_comment_action_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  optional Comment comment = 3; // 评论成功返回评论内容，不需要重新拉取整个列表
-}
-
-message douyin_comment_list_request {
-  string token = 1; // 用户鉴权token
-  int64 video_id = 2; // 视频id
-}
-
-message douyin_comment_list_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated Comment comment_list = 3; // 评论列表
-}
-
-message Comment {
-  int64 id = 1; // 视频评论id
-  user.User user =2; // 评论用户信息
-  string content = 3; // 评论内容
-  string create_date = 4; // 评论发布日期，格式 mm-dd
-}
-
-//message Video {
-//  int64 id = 1; // 视频唯一标识
-//  User author = 2; // 视频作者信息
-//  string play_url = 3; // 视频播放地址
-//  string cover_url = 4; // 视频封面地址
-//  int64 favorite_count = 5; // 视频的点赞总数
-//  int64 comment_count = 6; // 视频的评论总数
-//  bool is_favorite = 7; // true-已点赞，false-未点赞
-//  string title = 8; // 视频标题
-//}
-
-//message User {
-//  int64 id = 1; // 用户id
-//  string name = 2; // 用户名称
-//  optional int64 follow_count = 3; // 关注总数
-//  optional int64 follower_count = 4; // 粉丝总数
-//  bool is_follow = 5; // true-已关注，false-未关注
-//}
-
-service InteractSvr {
-  //点赞
-  rpc Fav (douyin_favorite_action_request) returns (douyin_favorite_action_response);
-  //点赞列表
-  rpc FavList (douyin_favorite_list_request) returns (douyin_favorite_list_response);
-  //评论
-  rpc Comment (douyin_comment_action_request) returns (douyin_comment_action_response);
-  //评论列表
-  rpc CommentList (douyin_comment_list_request) returns (douyin_comment_list_response);
-}
\ No newline at end of file
Index: kitex_gen/interact/interactsvr/invoker.go
===================================================================
diff --git a/kitex_gen/interact/interactsvr/invoker.go b/kitex_gen/interact/interactsvr/invoker.go
deleted file mode 100644
--- a/kitex_gen/interact/interactsvr/invoker.go	
+++ /dev/null	
@@ -1,24 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package interactsvr
-
-import (
-	interact "dousheng/kitex_gen/interact"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewInvoker creates a server.Invoker with the given handler and options.
-func NewInvoker(handler interact.InteractSvr, opts ...server.Option) server.Invoker {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	s := server.NewInvoker(options...)
-	if err := s.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	if err := s.Init(); err != nil {
-		panic(err)
-	}
-	return s
-}
Index: kitex_gen/interact/interactsvr/interactsvr.go
===================================================================
diff --git a/kitex_gen/interact/interactsvr/interactsvr.go b/kitex_gen/interact/interactsvr/interactsvr.go
deleted file mode 100644
--- a/kitex_gen/interact/interactsvr/interactsvr.go	
+++ /dev/null	
@@ -1,672 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package interactsvr
-
-import (
-	"context"
-	interact "dousheng/kitex_gen/interact"
-	"fmt"
-	client "github.com/cloudwego/kitex/client"
-	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
-	streaming "github.com/cloudwego/kitex/pkg/streaming"
-	proto "google.golang.org/protobuf/proto"
-)
-
-func serviceInfo() *kitex.ServiceInfo {
-	return interactSvrServiceInfo
-}
-
-var interactSvrServiceInfo = NewServiceInfo()
-
-func NewServiceInfo() *kitex.ServiceInfo {
-	serviceName := "InteractSvr"
-	handlerType := (*interact.InteractSvr)(nil)
-	methods := map[string]kitex.MethodInfo{
-		"Fav":         kitex.NewMethodInfo(favHandler, newFavArgs, newFavResult, false),
-		"FavList":     kitex.NewMethodInfo(favListHandler, newFavListArgs, newFavListResult, false),
-		"Comment":     kitex.NewMethodInfo(commentHandler, newCommentArgs, newCommentResult, false),
-		"CommentList": kitex.NewMethodInfo(commentListHandler, newCommentListArgs, newCommentListResult, false),
-	}
-	extra := map[string]interface{}{
-		"PackageName": "interact",
-	}
-	svcInfo := &kitex.ServiceInfo{
-		ServiceName:     serviceName,
-		HandlerType:     handlerType,
-		Methods:         methods,
-		PayloadCodec:    kitex.Protobuf,
-		KiteXGenVersion: "v0.4.4",
-		Extra:           extra,
-	}
-	return svcInfo
-}
-
-func favHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(interact.DouyinFavoriteActionRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(interact.InteractSvr).Fav(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *FavArgs:
-		success, err := handler.(interact.InteractSvr).Fav(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*FavResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newFavArgs() interface{} {
-	return &FavArgs{}
-}
-
-func newFavResult() interface{} {
-	return &FavResult{}
-}
-
-type FavArgs struct {
-	Req *interact.DouyinFavoriteActionRequest
-}
-
-func (p *FavArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(interact.DouyinFavoriteActionRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *FavArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *FavArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *FavArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in FavArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *FavArgs) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinFavoriteActionRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var FavArgs_Req_DEFAULT *interact.DouyinFavoriteActionRequest
-
-func (p *FavArgs) GetReq() *interact.DouyinFavoriteActionRequest {
-	if !p.IsSetReq() {
-		return FavArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *FavArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type FavResult struct {
-	Success *interact.DouyinFavoriteActionResponse
-}
-
-var FavResult_Success_DEFAULT *interact.DouyinFavoriteActionResponse
-
-func (p *FavResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(interact.DouyinFavoriteActionResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *FavResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *FavResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *FavResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in FavResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *FavResult) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinFavoriteActionResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *FavResult) GetSuccess() *interact.DouyinFavoriteActionResponse {
-	if !p.IsSetSuccess() {
-		return FavResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *FavResult) SetSuccess(x interface{}) {
-	p.Success = x.(*interact.DouyinFavoriteActionResponse)
-}
-
-func (p *FavResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func favListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(interact.DouyinFavoriteListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(interact.InteractSvr).FavList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *FavListArgs:
-		success, err := handler.(interact.InteractSvr).FavList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*FavListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newFavListArgs() interface{} {
-	return &FavListArgs{}
-}
-
-func newFavListResult() interface{} {
-	return &FavListResult{}
-}
-
-type FavListArgs struct {
-	Req *interact.DouyinFavoriteListRequest
-}
-
-func (p *FavListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(interact.DouyinFavoriteListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *FavListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *FavListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *FavListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in FavListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *FavListArgs) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinFavoriteListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var FavListArgs_Req_DEFAULT *interact.DouyinFavoriteListRequest
-
-func (p *FavListArgs) GetReq() *interact.DouyinFavoriteListRequest {
-	if !p.IsSetReq() {
-		return FavListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *FavListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type FavListResult struct {
-	Success *interact.DouyinFavoriteListResponse
-}
-
-var FavListResult_Success_DEFAULT *interact.DouyinFavoriteListResponse
-
-func (p *FavListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(interact.DouyinFavoriteListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *FavListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *FavListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *FavListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in FavListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *FavListResult) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinFavoriteListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *FavListResult) GetSuccess() *interact.DouyinFavoriteListResponse {
-	if !p.IsSetSuccess() {
-		return FavListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *FavListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*interact.DouyinFavoriteListResponse)
-}
-
-func (p *FavListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func commentHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(interact.DouyinCommentActionRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(interact.InteractSvr).Comment(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *CommentArgs:
-		success, err := handler.(interact.InteractSvr).Comment(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*CommentResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newCommentArgs() interface{} {
-	return &CommentArgs{}
-}
-
-func newCommentResult() interface{} {
-	return &CommentResult{}
-}
-
-type CommentArgs struct {
-	Req *interact.DouyinCommentActionRequest
-}
-
-func (p *CommentArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(interact.DouyinCommentActionRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *CommentArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *CommentArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *CommentArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in CommentArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *CommentArgs) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinCommentActionRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var CommentArgs_Req_DEFAULT *interact.DouyinCommentActionRequest
-
-func (p *CommentArgs) GetReq() *interact.DouyinCommentActionRequest {
-	if !p.IsSetReq() {
-		return CommentArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *CommentArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type CommentResult struct {
-	Success *interact.DouyinCommentActionResponse
-}
-
-var CommentResult_Success_DEFAULT *interact.DouyinCommentActionResponse
-
-func (p *CommentResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(interact.DouyinCommentActionResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *CommentResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *CommentResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *CommentResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in CommentResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *CommentResult) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinCommentActionResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *CommentResult) GetSuccess() *interact.DouyinCommentActionResponse {
-	if !p.IsSetSuccess() {
-		return CommentResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *CommentResult) SetSuccess(x interface{}) {
-	p.Success = x.(*interact.DouyinCommentActionResponse)
-}
-
-func (p *CommentResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func commentListHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(interact.DouyinCommentListRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(interact.InteractSvr).CommentList(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *CommentListArgs:
-		success, err := handler.(interact.InteractSvr).CommentList(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*CommentListResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newCommentListArgs() interface{} {
-	return &CommentListArgs{}
-}
-
-func newCommentListResult() interface{} {
-	return &CommentListResult{}
-}
-
-type CommentListArgs struct {
-	Req *interact.DouyinCommentListRequest
-}
-
-func (p *CommentListArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(interact.DouyinCommentListRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *CommentListArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *CommentListArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *CommentListArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in CommentListArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *CommentListArgs) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinCommentListRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var CommentListArgs_Req_DEFAULT *interact.DouyinCommentListRequest
-
-func (p *CommentListArgs) GetReq() *interact.DouyinCommentListRequest {
-	if !p.IsSetReq() {
-		return CommentListArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *CommentListArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type CommentListResult struct {
-	Success *interact.DouyinCommentListResponse
-}
-
-var CommentListResult_Success_DEFAULT *interact.DouyinCommentListResponse
-
-func (p *CommentListResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(interact.DouyinCommentListResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *CommentListResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *CommentListResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *CommentListResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in CommentListResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *CommentListResult) Unmarshal(in []byte) error {
-	msg := new(interact.DouyinCommentListResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *CommentListResult) GetSuccess() *interact.DouyinCommentListResponse {
-	if !p.IsSetSuccess() {
-		return CommentListResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *CommentListResult) SetSuccess(x interface{}) {
-	p.Success = x.(*interact.DouyinCommentListResponse)
-}
-
-func (p *CommentListResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-type kClient struct {
-	c client.Client
-}
-
-func newServiceClient(c client.Client) *kClient {
-	return &kClient{
-		c: c,
-	}
-}
-
-func (p *kClient) Fav(ctx context.Context, Req *interact.DouyinFavoriteActionRequest) (r *interact.DouyinFavoriteActionResponse, err error) {
-	var _args FavArgs
-	_args.Req = Req
-	var _result FavResult
-	if err = p.c.Call(ctx, "Fav", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) FavList(ctx context.Context, Req *interact.DouyinFavoriteListRequest) (r *interact.DouyinFavoriteListResponse, err error) {
-	var _args FavListArgs
-	_args.Req = Req
-	var _result FavListResult
-	if err = p.c.Call(ctx, "FavList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) Comment(ctx context.Context, Req *interact.DouyinCommentActionRequest) (r *interact.DouyinCommentActionResponse, err error) {
-	var _args CommentArgs
-	_args.Req = Req
-	var _result CommentResult
-	if err = p.c.Call(ctx, "Comment", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) CommentList(ctx context.Context, Req *interact.DouyinCommentListRequest) (r *interact.DouyinCommentListResponse, err error) {
-	var _args CommentListArgs
-	_args.Req = Req
-	var _result CommentListResult
-	if err = p.c.Call(ctx, "CommentList", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
Index: kitex_gen/video/script/bootstrap.sh
===================================================================
diff --git a/kitex_gen/video/script/bootstrap.sh b/kitex_gen/video/script/bootstrap.sh
deleted file mode 100644
--- a/kitex_gen/video/script/bootstrap.sh	
+++ /dev/null	
@@ -1,22 +0,0 @@
-#! /usr/bin/env bash
-CURDIR=$(cd $(dirname $0); pwd)
-
-if [ "X$1" != "X" ]; then
-    RUNTIME_ROOT=$1
-else
-    RUNTIME_ROOT=${CURDIR}
-fi
-
-export KITEX_RUNTIME_ROOT=$RUNTIME_ROOT
-export KITEX_LOG_DIR="$RUNTIME_ROOT/log"
-
-if [ ! -d "$KITEX_LOG_DIR/app" ]; then
-    mkdir -p "$KITEX_LOG_DIR/app"
-fi
-
-if [ ! -d "$KITEX_LOG_DIR/rpc" ]; then
-    mkdir -p "$KITEX_LOG_DIR/rpc"
-fi
-
-exec "$CURDIR/bin/video"
-
Index: biz/router/video/video.go
===================================================================
diff --git a/biz/router/video/video.go b/biz/router/video/video.go
deleted file mode 100644
--- a/biz/router/video/video.go	
+++ /dev/null	
@@ -1,19 +0,0 @@
-// Code generated by hertz generator. DO NOT EDIT.
-
-package Video
-
-import (
-	video "dousheng/biz/handler/video"
-	"github.com/cloudwego/hertz/pkg/app/server"
-)
-
-/*
- This file will register all the routes of the services in the master idl.
- And it will update automatically when you use the "update" command for the idl.
- So don't modify the contents of the file, or your code will be deleted when it is updated.
-*/
-
-// Register register routes based on the IDL 'api.${HTTP Method}' annotation.
-func Register(r *server.Hertz) {
-
-}
Index: kitex_gen/chat/chatsvr/server.go
===================================================================
diff --git a/kitex_gen/chat/chatsvr/server.go b/kitex_gen/chat/chatsvr/server.go
deleted file mode 100644
--- a/kitex_gen/chat/chatsvr/server.go	
+++ /dev/null	
@@ -1,20 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-package chatsvr
-
-import (
-	chat "dousheng/kitex_gen/chat"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewServer creates a server.Server with the given handler and options.
-func NewServer(handler chat.ChatSvr, opts ...server.Option) server.Server {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	svr := server.NewServer(options...)
-	if err := svr.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	return svr
-}
Index: kitex_gen/relation/script/bootstrap.sh
===================================================================
diff --git a/kitex_gen/relation/script/bootstrap.sh b/kitex_gen/relation/script/bootstrap.sh
deleted file mode 100644
--- a/kitex_gen/relation/script/bootstrap.sh	
+++ /dev/null	
@@ -1,22 +0,0 @@
-#! /usr/bin/env bash
-CURDIR=$(cd $(dirname $0); pwd)
-
-if [ "X$1" != "X" ]; then
-    RUNTIME_ROOT=$1
-else
-    RUNTIME_ROOT=${CURDIR}
-fi
-
-export KITEX_RUNTIME_ROOT=$RUNTIME_ROOT
-export KITEX_LOG_DIR="$RUNTIME_ROOT/log"
-
-if [ ! -d "$KITEX_LOG_DIR/app" ]; then
-    mkdir -p "$KITEX_LOG_DIR/app"
-fi
-
-if [ ! -d "$KITEX_LOG_DIR/rpc" ]; then
-    mkdir -p "$KITEX_LOG_DIR/rpc"
-fi
-
-exec "$CURDIR/bin/relation"
-
Index: kitex_gen/chat/chatsvr/client.go
===================================================================
diff --git a/kitex_gen/chat/chatsvr/client.go b/kitex_gen/chat/chatsvr/client.go
deleted file mode 100644
--- a/kitex_gen/chat/chatsvr/client.go	
+++ /dev/null	
@@ -1,55 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package chatsvr
-
-import (
-	"context"
-	chat "dousheng/kitex_gen/chat"
-	client "github.com/cloudwego/kitex/client"
-	callopt "github.com/cloudwego/kitex/client/callopt"
-)
-
-// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
-type Client interface {
-	GetMsg(ctx context.Context, Req *chat.DouyinRelationActionRequest, callOptions ...callopt.Option) (r *chat.DouyinRelationActionResponse, err error)
-	PostMsg(ctx context.Context, Req *chat.DouyinMessageChatRequest, callOptions ...callopt.Option) (r *chat.DouyinMessageChatResponse, err error)
-}
-
-// NewClient creates a client for the service defined in IDL.
-func NewClient(destService string, opts ...client.Option) (Client, error) {
-	var options []client.Option
-	options = append(options, client.WithDestService(destService))
-
-	options = append(options, opts...)
-
-	kc, err := client.NewClient(serviceInfo(), options...)
-	if err != nil {
-		return nil, err
-	}
-	return &kChatSvrClient{
-		kClient: newServiceClient(kc),
-	}, nil
-}
-
-// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
-func MustNewClient(destService string, opts ...client.Option) Client {
-	kc, err := NewClient(destService, opts...)
-	if err != nil {
-		panic(err)
-	}
-	return kc
-}
-
-type kChatSvrClient struct {
-	*kClient
-}
-
-func (p *kChatSvrClient) GetMsg(ctx context.Context, Req *chat.DouyinRelationActionRequest, callOptions ...callopt.Option) (r *chat.DouyinRelationActionResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.GetMsg(ctx, Req)
-}
-
-func (p *kChatSvrClient) PostMsg(ctx context.Context, Req *chat.DouyinMessageChatRequest, callOptions ...callopt.Option) (r *chat.DouyinMessageChatResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.PostMsg(ctx, Req)
-}
Index: kitex_gen/chat/script/bootstrap.sh
===================================================================
diff --git a/kitex_gen/chat/script/bootstrap.sh b/kitex_gen/chat/script/bootstrap.sh
deleted file mode 100644
--- a/kitex_gen/chat/script/bootstrap.sh	
+++ /dev/null	
@@ -1,22 +0,0 @@
-#! /usr/bin/env bash
-CURDIR=$(cd $(dirname $0); pwd)
-
-if [ "X$1" != "X" ]; then
-    RUNTIME_ROOT=$1
-else
-    RUNTIME_ROOT=${CURDIR}
-fi
-
-export KITEX_RUNTIME_ROOT=$RUNTIME_ROOT
-export KITEX_LOG_DIR="$RUNTIME_ROOT/log"
-
-if [ ! -d "$KITEX_LOG_DIR/app" ]; then
-    mkdir -p "$KITEX_LOG_DIR/app"
-fi
-
-if [ ! -d "$KITEX_LOG_DIR/rpc" ]; then
-    mkdir -p "$KITEX_LOG_DIR/rpc"
-fi
-
-exec "$CURDIR/bin/chat"
-
Index: kitex_gen/video/videosvr/client.go
===================================================================
diff --git a/kitex_gen/video/videosvr/client.go b/kitex_gen/video/videosvr/client.go
deleted file mode 100644
--- a/kitex_gen/video/videosvr/client.go	
+++ /dev/null	
@@ -1,61 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package videosvr
-
-import (
-	"context"
-	video "dousheng/kitex_gen/video"
-	client "github.com/cloudwego/kitex/client"
-	callopt "github.com/cloudwego/kitex/client/callopt"
-)
-
-// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
-type Client interface {
-	Feed(ctx context.Context, Req *video.DouyinFeedRequest, callOptions ...callopt.Option) (r *video.DouyinFeedResponse, err error)
-	Publish(ctx context.Context, Req *video.DouyinPublishActionRequest, callOptions ...callopt.Option) (r *video.DouyinPublishActionResponse, err error)
-	PublishList(ctx context.Context, Req *video.DouyinPublishListRequest, callOptions ...callopt.Option) (r *video.DouyinPublishListResponse, err error)
-}
-
-// NewClient creates a client for the service defined in IDL.
-func NewClient(destService string, opts ...client.Option) (Client, error) {
-	var options []client.Option
-	options = append(options, client.WithDestService(destService))
-
-	options = append(options, opts...)
-
-	kc, err := client.NewClient(serviceInfo(), options...)
-	if err != nil {
-		return nil, err
-	}
-	return &kVideoSvrClient{
-		kClient: newServiceClient(kc),
-	}, nil
-}
-
-// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
-func MustNewClient(destService string, opts ...client.Option) Client {
-	kc, err := NewClient(destService, opts...)
-	if err != nil {
-		panic(err)
-	}
-	return kc
-}
-
-type kVideoSvrClient struct {
-	*kClient
-}
-
-func (p *kVideoSvrClient) Feed(ctx context.Context, Req *video.DouyinFeedRequest, callOptions ...callopt.Option) (r *video.DouyinFeedResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.Feed(ctx, Req)
-}
-
-func (p *kVideoSvrClient) Publish(ctx context.Context, Req *video.DouyinPublishActionRequest, callOptions ...callopt.Option) (r *video.DouyinPublishActionResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.Publish(ctx, Req)
-}
-
-func (p *kVideoSvrClient) PublishList(ctx context.Context, Req *video.DouyinPublishListRequest, callOptions ...callopt.Option) (r *video.DouyinPublishListResponse, err error) {
-	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
-	return p.kClient.PublishList(ctx, Req)
-}
Index: dal/db/tb_comment.gen.go
===================================================================
diff --git a/dal/db/tb_comment.gen.go b/dal/db/tb_comment.gen.go
deleted file mode 100644
--- a/dal/db/tb_comment.gen.go	
+++ /dev/null	
@@ -1,339 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package db
-
-import (
-	"context"
-
-	"gorm.io/gorm"
-	"gorm.io/gorm/clause"
-	"gorm.io/gorm/schema"
-
-	"gorm.io/gen"
-	"gorm.io/gen/field"
-
-	"gorm.io/plugin/dbresolver"
-
-	"dousheng/dal/model"
-)
-
-func newComment(db *gorm.DB, opts ...gen.DOOption) comment {
-	_comment := comment{}
-
-	_comment.commentDo.UseDB(db, opts...)
-	_comment.commentDo.UseModel(&model.Comment{})
-
-	tableName := _comment.commentDo.TableName()
-	_comment.ALL = field.NewAsterisk(tableName)
-	_comment.CommentID = field.NewInt64(tableName, "comment_id")
-	_comment.UserID = field.NewInt64(tableName, "user_id")
-	_comment.VideoID = field.NewInt64(tableName, "video_id")
-	_comment.Content = field.NewString(tableName, "content")
-	_comment.CreateTime = field.NewTime(tableName, "create_time")
-
-	_comment.fillFieldMap()
-
-	return _comment
-}
-
-type comment struct {
-	commentDo
-
-	ALL        field.Asterisk
-	CommentID  field.Int64  // 评论id
-	UserID     field.Int64  // 用户id
-	VideoID    field.Int64  // 视频id
-	Content    field.String // 评论
-	CreateTime field.Time   // 创建时间
-
-	fieldMap map[string]field.Expr
-}
-
-func (c comment) Table(newTableName string) *comment {
-	c.commentDo.UseTable(newTableName)
-	return c.updateTableName(newTableName)
-}
-
-func (c comment) As(alias string) *comment {
-	c.commentDo.DO = *(c.commentDo.As(alias).(*gen.DO))
-	return c.updateTableName(alias)
-}
-
-func (c *comment) updateTableName(table string) *comment {
-	c.ALL = field.NewAsterisk(table)
-	c.CommentID = field.NewInt64(table, "comment_id")
-	c.UserID = field.NewInt64(table, "user_id")
-	c.VideoID = field.NewInt64(table, "video_id")
-	c.Content = field.NewString(table, "content")
-	c.CreateTime = field.NewTime(table, "create_time")
-
-	c.fillFieldMap()
-
-	return c
-}
-
-func (c *comment) GetFieldByName(fieldName string) (field.OrderExpr, bool) {
-	_f, ok := c.fieldMap[fieldName]
-	if !ok || _f == nil {
-		return nil, false
-	}
-	_oe, ok := _f.(field.OrderExpr)
-	return _oe, ok
-}
-
-func (c *comment) fillFieldMap() {
-	c.fieldMap = make(map[string]field.Expr, 5)
-	c.fieldMap["comment_id"] = c.CommentID
-	c.fieldMap["user_id"] = c.UserID
-	c.fieldMap["video_id"] = c.VideoID
-	c.fieldMap["content"] = c.Content
-	c.fieldMap["create_time"] = c.CreateTime
-}
-
-func (c comment) clone(db *gorm.DB) comment {
-	c.commentDo.ReplaceConnPool(db.Statement.ConnPool)
-	return c
-}
-
-func (c comment) replaceDB(db *gorm.DB) comment {
-	c.commentDo.ReplaceDB(db)
-	return c
-}
-
-type commentDo struct{ gen.DO }
-
-func (c commentDo) Debug() *commentDo {
-	return c.withDO(c.DO.Debug())
-}
-
-func (c commentDo) WithContext(ctx context.Context) *commentDo {
-	return c.withDO(c.DO.WithContext(ctx))
-}
-
-func (c commentDo) ReadDB() *commentDo {
-	return c.Clauses(dbresolver.Read)
-}
-
-func (c commentDo) WriteDB() *commentDo {
-	return c.Clauses(dbresolver.Write)
-}
-
-func (c commentDo) Session(config *gorm.Session) *commentDo {
-	return c.withDO(c.DO.Session(config))
-}
-
-func (c commentDo) Clauses(conds ...clause.Expression) *commentDo {
-	return c.withDO(c.DO.Clauses(conds...))
-}
-
-func (c commentDo) Returning(value interface{}, columns ...string) *commentDo {
-	return c.withDO(c.DO.Returning(value, columns...))
-}
-
-func (c commentDo) Not(conds ...gen.Condition) *commentDo {
-	return c.withDO(c.DO.Not(conds...))
-}
-
-func (c commentDo) Or(conds ...gen.Condition) *commentDo {
-	return c.withDO(c.DO.Or(conds...))
-}
-
-func (c commentDo) Select(conds ...field.Expr) *commentDo {
-	return c.withDO(c.DO.Select(conds...))
-}
-
-func (c commentDo) Where(conds ...gen.Condition) *commentDo {
-	return c.withDO(c.DO.Where(conds...))
-}
-
-func (c commentDo) Exists(subquery interface{ UnderlyingDB() *gorm.DB }) *commentDo {
-	return c.Where(field.CompareSubQuery(field.ExistsOp, nil, subquery.UnderlyingDB()))
-}
-
-func (c commentDo) Order(conds ...field.Expr) *commentDo {
-	return c.withDO(c.DO.Order(conds...))
-}
-
-func (c commentDo) Distinct(cols ...field.Expr) *commentDo {
-	return c.withDO(c.DO.Distinct(cols...))
-}
-
-func (c commentDo) Omit(cols ...field.Expr) *commentDo {
-	return c.withDO(c.DO.Omit(cols...))
-}
-
-func (c commentDo) Join(table schema.Tabler, on ...field.Expr) *commentDo {
-	return c.withDO(c.DO.Join(table, on...))
-}
-
-func (c commentDo) LeftJoin(table schema.Tabler, on ...field.Expr) *commentDo {
-	return c.withDO(c.DO.LeftJoin(table, on...))
-}
-
-func (c commentDo) RightJoin(table schema.Tabler, on ...field.Expr) *commentDo {
-	return c.withDO(c.DO.RightJoin(table, on...))
-}
-
-func (c commentDo) Group(cols ...field.Expr) *commentDo {
-	return c.withDO(c.DO.Group(cols...))
-}
-
-func (c commentDo) Having(conds ...gen.Condition) *commentDo {
-	return c.withDO(c.DO.Having(conds...))
-}
-
-func (c commentDo) Limit(limit int) *commentDo {
-	return c.withDO(c.DO.Limit(limit))
-}
-
-func (c commentDo) Offset(offset int) *commentDo {
-	return c.withDO(c.DO.Offset(offset))
-}
-
-func (c commentDo) Scopes(funcs ...func(gen.Dao) gen.Dao) *commentDo {
-	return c.withDO(c.DO.Scopes(funcs...))
-}
-
-func (c commentDo) Unscoped() *commentDo {
-	return c.withDO(c.DO.Unscoped())
-}
-
-func (c commentDo) Create(values ...*model.Comment) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return c.DO.Create(values)
-}
-
-func (c commentDo) CreateInBatches(values []*model.Comment, batchSize int) error {
-	return c.DO.CreateInBatches(values, batchSize)
-}
-
-// Save : !!! underlying implementation is different with GORM
-// The method is equivalent to executing the statement: db.Clauses(clause.OnConflict{UpdateAll: true}).Create(values)
-func (c commentDo) Save(values ...*model.Comment) error {
-	if len(values) == 0 {
-		return nil
-	}
-	return c.DO.Save(values)
-}
-
-func (c commentDo) First() (*model.Comment, error) {
-	if result, err := c.DO.First(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Comment), nil
-	}
-}
-
-func (c commentDo) Take() (*model.Comment, error) {
-	if result, err := c.DO.Take(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Comment), nil
-	}
-}
-
-func (c commentDo) Last() (*model.Comment, error) {
-	if result, err := c.DO.Last(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Comment), nil
-	}
-}
-
-func (c commentDo) Find() ([]*model.Comment, error) {
-	result, err := c.DO.Find()
-	return result.([]*model.Comment), err
-}
-
-func (c commentDo) FindInBatch(batchSize int, fc func(tx gen.Dao, batch int) error) (results []*model.Comment, err error) {
-	buf := make([]*model.Comment, 0, batchSize)
-	err = c.DO.FindInBatches(&buf, batchSize, func(tx gen.Dao, batch int) error {
-		defer func() { results = append(results, buf...) }()
-		return fc(tx, batch)
-	})
-	return results, err
-}
-
-func (c commentDo) FindInBatches(result *[]*model.Comment, batchSize int, fc func(tx gen.Dao, batch int) error) error {
-	return c.DO.FindInBatches(result, batchSize, fc)
-}
-
-func (c commentDo) Attrs(attrs ...field.AssignExpr) *commentDo {
-	return c.withDO(c.DO.Attrs(attrs...))
-}
-
-func (c commentDo) Assign(attrs ...field.AssignExpr) *commentDo {
-	return c.withDO(c.DO.Assign(attrs...))
-}
-
-func (c commentDo) Joins(fields ...field.RelationField) *commentDo {
-	for _, _f := range fields {
-		c = *c.withDO(c.DO.Joins(_f))
-	}
-	return &c
-}
-
-func (c commentDo) Preload(fields ...field.RelationField) *commentDo {
-	for _, _f := range fields {
-		c = *c.withDO(c.DO.Preload(_f))
-	}
-	return &c
-}
-
-func (c commentDo) FirstOrInit() (*model.Comment, error) {
-	if result, err := c.DO.FirstOrInit(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Comment), nil
-	}
-}
-
-func (c commentDo) FirstOrCreate() (*model.Comment, error) {
-	if result, err := c.DO.FirstOrCreate(); err != nil {
-		return nil, err
-	} else {
-		return result.(*model.Comment), nil
-	}
-}
-
-func (c commentDo) FindByPage(offset int, limit int) (result []*model.Comment, count int64, err error) {
-	result, err = c.Offset(offset).Limit(limit).Find()
-	if err != nil {
-		return
-	}
-
-	if size := len(result); 0 < limit && 0 < size && size < limit {
-		count = int64(size + offset)
-		return
-	}
-
-	count, err = c.Offset(-1).Limit(-1).Count()
-	return
-}
-
-func (c commentDo) ScanByPage(result interface{}, offset int, limit int) (count int64, err error) {
-	count, err = c.Count()
-	if err != nil {
-		return
-	}
-
-	err = c.Offset(offset).Limit(limit).Scan(result)
-	return
-}
-
-func (c commentDo) Scan(result interface{}) (err error) {
-	return c.DO.Scan(result)
-}
-
-func (c commentDo) Delete(models ...*model.Comment) (result gen.ResultInfo, err error) {
-	return c.DO.Delete(models)
-}
-
-func (c *commentDo) withDO(do gen.Dao) *commentDo {
-	c.DO = *do.(*gen.DO)
-	return c
-}
Index: kitex_gen/user/script/bootstrap.sh
===================================================================
diff --git a/kitex_gen/user/script/bootstrap.sh b/kitex_gen/user/script/bootstrap.sh
deleted file mode 100644
--- a/kitex_gen/user/script/bootstrap.sh	
+++ /dev/null	
@@ -1,22 +0,0 @@
-#! /usr/bin/env bash
-CURDIR=$(cd $(dirname $0); pwd)
-
-if [ "X$1" != "X" ]; then
-    RUNTIME_ROOT=$1
-else
-    RUNTIME_ROOT=${CURDIR}
-fi
-
-export KITEX_RUNTIME_ROOT=$RUNTIME_ROOT
-export KITEX_LOG_DIR="$RUNTIME_ROOT/log"
-
-if [ ! -d "$KITEX_LOG_DIR/app" ]; then
-    mkdir -p "$KITEX_LOG_DIR/app"
-fi
-
-if [ ! -d "$KITEX_LOG_DIR/rpc" ]; then
-    mkdir -p "$KITEX_LOG_DIR/rpc"
-fi
-
-exec "$CURDIR/bin/user"
-
Index: IDL/video.proto
===================================================================
diff --git a/IDL/video.proto b/IDL/video.proto
deleted file mode 100644
--- a/IDL/video.proto	
+++ /dev/null	
@@ -1,69 +0,0 @@
-syntax = "proto3";
-package video;
-option go_package = "video";
-
-import "user.proto";
-
-message douyin_feed_request {
-  optional int64 latest_time = 1; // 可选参数，限制返回视频的最新投稿时间戳，精确到秒，不填表示当前时间
-  optional string token = 2; // 可选参数，登录用户设置
-}
-
-message douyin_feed_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated Video video_list = 3; // 视频列表
-  optional int64 next_time = 4; // 本次返回的视频中，发布最早的时间，作为下次请求时的latest_time
-}
-
-message douyin_publish_action_request {
-  string token = 1; // 用户鉴权token
-  bytes data = 2; // 视频数据
-  string title = 3; // 视频标题
-}
-
-message douyin_publish_action_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-}
-
-message douyin_publish_list_request {
-  int64 user_id = 1; // 用户id
-  string token = 2; // 用户鉴权token
-}
-
-message douyin_publish_list_response {
-  int32 status_code = 1; // 状态码，0-成功，其他值-失败
-  optional string status_msg = 2; // 返回状态描述
-  repeated Video video_list = 3; // 用户发布的视频列表
-}
-
-message Video {
-  int64 id = 1; // 视频唯一标识
-  user.User author = 2; // 视频作者信息
-  string play_url = 3; // 视频播放地址
-  string cover_url = 4; // 视频封面地址
-  int64 favorite_count = 5; // 视频的点赞总数
-  int64 comment_count = 6; // 视频的评论总数
-  bool is_favorite = 7; // true-已点赞，false-未点赞
-  string title = 8; // 视频标题
-}
-
-//message User {
-//  int64 id = 1; // 用户id
-//  string name = 2; // 用户名称
-//  optional int64 follow_count = 3; // 关注总数
-//  optional int64 follower_count = 4; // 粉丝总数
-//  bool is_follow = 5; // true-已关注，false-未关注
-//}
-
-service VideoSvr {
-  //返回视频列表
-  rpc Feed(douyin_feed_request) returns (douyin_feed_response);
-  //视频发布
-  rpc Publish (douyin_publish_action_request) returns (douyin_publish_action_response);
-  //用户视频列表
-  rpc PublishList (douyin_publish_list_request) returns (douyin_publish_list_response);
-}
-
-
Index: biz/router/register.go
===================================================================
diff --git a/biz/router/register.go b/biz/router/register.go
deleted file mode 100644
--- a/biz/router/register.go	
+++ /dev/null	
@@ -1,15 +0,0 @@
-// Code generated by hertz generator. DO NOT EDIT.
-
-package router
-
-import (
-	video "dousheng/biz/router/video"
-	"github.com/cloudwego/hertz/pkg/app/server"
-)
-
-// GeneratedRegister registers routers generated by IDL.
-func GeneratedRegister(r *server.Hertz) {
-	//INSERT_POINT: DO NOT DELETE THIS LINE!
-	video.Register(r)
-
-}
Index: kitex_gen/chat/chatsvr/invoker.go
===================================================================
diff --git a/kitex_gen/chat/chatsvr/invoker.go b/kitex_gen/chat/chatsvr/invoker.go
deleted file mode 100644
--- a/kitex_gen/chat/chatsvr/invoker.go	
+++ /dev/null	
@@ -1,24 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package chatsvr
-
-import (
-	chat "dousheng/kitex_gen/chat"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewInvoker creates a server.Invoker with the given handler and options.
-func NewInvoker(handler chat.ChatSvr, opts ...server.Option) server.Invoker {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	s := server.NewInvoker(options...)
-	if err := s.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	if err := s.Init(); err != nil {
-		panic(err)
-	}
-	return s
-}
Index: kitex_gen/user/usersvr/server.go
===================================================================
diff --git a/kitex_gen/user/usersvr/server.go b/kitex_gen/user/usersvr/server.go
deleted file mode 100644
--- a/kitex_gen/user/usersvr/server.go	
+++ /dev/null	
@@ -1,20 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-package usersvr
-
-import (
-	user "dousheng/kitex_gen/user"
-	server "github.com/cloudwego/kitex/server"
-)
-
-// NewServer creates a server.Server with the given handler and options.
-func NewServer(handler user.UserSvr, opts ...server.Option) server.Server {
-	var options []server.Option
-
-	options = append(options, opts...)
-
-	svr := server.NewServer(options...)
-	if err := svr.RegisterService(serviceInfo(), handler); err != nil {
-		panic(err)
-	}
-	return svr
-}
Index: kitex_gen/user/usersvr/usersvr.go
===================================================================
diff --git a/kitex_gen/user/usersvr/usersvr.go b/kitex_gen/user/usersvr/usersvr.go
deleted file mode 100644
--- a/kitex_gen/user/usersvr/usersvr.go	
+++ /dev/null	
@@ -1,516 +0,0 @@
-// Code generated by Kitex v0.4.4. DO NOT EDIT.
-
-package usersvr
-
-import (
-	"context"
-	user "dousheng/kitex_gen/user"
-	"fmt"
-	client "github.com/cloudwego/kitex/client"
-	kitex "github.com/cloudwego/kitex/pkg/serviceinfo"
-	streaming "github.com/cloudwego/kitex/pkg/streaming"
-	proto "google.golang.org/protobuf/proto"
-)
-
-func serviceInfo() *kitex.ServiceInfo {
-	return userSvrServiceInfo
-}
-
-var userSvrServiceInfo = NewServiceInfo()
-
-func NewServiceInfo() *kitex.ServiceInfo {
-	serviceName := "UserSvr"
-	handlerType := (*user.UserSvr)(nil)
-	methods := map[string]kitex.MethodInfo{
-		"Register": kitex.NewMethodInfo(registerHandler, newRegisterArgs, newRegisterResult, false),
-		"Login":    kitex.NewMethodInfo(loginHandler, newLoginArgs, newLoginResult, false),
-		"GetById":  kitex.NewMethodInfo(getByIdHandler, newGetByIdArgs, newGetByIdResult, false),
-	}
-	extra := map[string]interface{}{
-		"PackageName": "user",
-	}
-	svcInfo := &kitex.ServiceInfo{
-		ServiceName:     serviceName,
-		HandlerType:     handlerType,
-		Methods:         methods,
-		PayloadCodec:    kitex.Protobuf,
-		KiteXGenVersion: "v0.4.4",
-		Extra:           extra,
-	}
-	return svcInfo
-}
-
-func registerHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(user.DouyinUserRegisterRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(user.UserSvr).Register(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *RegisterArgs:
-		success, err := handler.(user.UserSvr).Register(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*RegisterResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newRegisterArgs() interface{} {
-	return &RegisterArgs{}
-}
-
-func newRegisterResult() interface{} {
-	return &RegisterResult{}
-}
-
-type RegisterArgs struct {
-	Req *user.DouyinUserRegisterRequest
-}
-
-func (p *RegisterArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(user.DouyinUserRegisterRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *RegisterArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *RegisterArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *RegisterArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in RegisterArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *RegisterArgs) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserRegisterRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var RegisterArgs_Req_DEFAULT *user.DouyinUserRegisterRequest
-
-func (p *RegisterArgs) GetReq() *user.DouyinUserRegisterRequest {
-	if !p.IsSetReq() {
-		return RegisterArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *RegisterArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type RegisterResult struct {
-	Success *user.DouyinUserRegisterResponse
-}
-
-var RegisterResult_Success_DEFAULT *user.DouyinUserRegisterResponse
-
-func (p *RegisterResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(user.DouyinUserRegisterResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *RegisterResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *RegisterResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *RegisterResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in RegisterResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *RegisterResult) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserRegisterResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *RegisterResult) GetSuccess() *user.DouyinUserRegisterResponse {
-	if !p.IsSetSuccess() {
-		return RegisterResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *RegisterResult) SetSuccess(x interface{}) {
-	p.Success = x.(*user.DouyinUserRegisterResponse)
-}
-
-func (p *RegisterResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func loginHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(user.DouyinUserLoginRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(user.UserSvr).Login(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *LoginArgs:
-		success, err := handler.(user.UserSvr).Login(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*LoginResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newLoginArgs() interface{} {
-	return &LoginArgs{}
-}
-
-func newLoginResult() interface{} {
-	return &LoginResult{}
-}
-
-type LoginArgs struct {
-	Req *user.DouyinUserLoginRequest
-}
-
-func (p *LoginArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(user.DouyinUserLoginRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *LoginArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *LoginArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *LoginArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in LoginArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *LoginArgs) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserLoginRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var LoginArgs_Req_DEFAULT *user.DouyinUserLoginRequest
-
-func (p *LoginArgs) GetReq() *user.DouyinUserLoginRequest {
-	if !p.IsSetReq() {
-		return LoginArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *LoginArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type LoginResult struct {
-	Success *user.DouyinUserLoginResponse
-}
-
-var LoginResult_Success_DEFAULT *user.DouyinUserLoginResponse
-
-func (p *LoginResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(user.DouyinUserLoginResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *LoginResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *LoginResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *LoginResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in LoginResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *LoginResult) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserLoginResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *LoginResult) GetSuccess() *user.DouyinUserLoginResponse {
-	if !p.IsSetSuccess() {
-		return LoginResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *LoginResult) SetSuccess(x interface{}) {
-	p.Success = x.(*user.DouyinUserLoginResponse)
-}
-
-func (p *LoginResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-func getByIdHandler(ctx context.Context, handler interface{}, arg, result interface{}) error {
-	switch s := arg.(type) {
-	case *streaming.Args:
-		st := s.Stream
-		req := new(user.DouyinUserRequest)
-		if err := st.RecvMsg(req); err != nil {
-			return err
-		}
-		resp, err := handler.(user.UserSvr).GetById(ctx, req)
-		if err != nil {
-			return err
-		}
-		if err := st.SendMsg(resp); err != nil {
-			return err
-		}
-	case *GetByIdArgs:
-		success, err := handler.(user.UserSvr).GetById(ctx, s.Req)
-		if err != nil {
-			return err
-		}
-		realResult := result.(*GetByIdResult)
-		realResult.Success = success
-	}
-	return nil
-}
-func newGetByIdArgs() interface{} {
-	return &GetByIdArgs{}
-}
-
-func newGetByIdResult() interface{} {
-	return &GetByIdResult{}
-}
-
-type GetByIdArgs struct {
-	Req *user.DouyinUserRequest
-}
-
-func (p *GetByIdArgs) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetReq() {
-		p.Req = new(user.DouyinUserRequest)
-	}
-	return p.Req.FastRead(buf, _type, number)
-}
-
-func (p *GetByIdArgs) FastWrite(buf []byte) (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.FastWrite(buf)
-}
-
-func (p *GetByIdArgs) Size() (n int) {
-	if !p.IsSetReq() {
-		return 0
-	}
-	return p.Req.Size()
-}
-
-func (p *GetByIdArgs) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetReq() {
-		return out, fmt.Errorf("No req in GetByIdArgs")
-	}
-	return proto.Marshal(p.Req)
-}
-
-func (p *GetByIdArgs) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserRequest)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Req = msg
-	return nil
-}
-
-var GetByIdArgs_Req_DEFAULT *user.DouyinUserRequest
-
-func (p *GetByIdArgs) GetReq() *user.DouyinUserRequest {
-	if !p.IsSetReq() {
-		return GetByIdArgs_Req_DEFAULT
-	}
-	return p.Req
-}
-
-func (p *GetByIdArgs) IsSetReq() bool {
-	return p.Req != nil
-}
-
-type GetByIdResult struct {
-	Success *user.DouyinUserResponse
-}
-
-var GetByIdResult_Success_DEFAULT *user.DouyinUserResponse
-
-func (p *GetByIdResult) FastRead(buf []byte, _type int8, number int32) (n int, err error) {
-	if !p.IsSetSuccess() {
-		p.Success = new(user.DouyinUserResponse)
-	}
-	return p.Success.FastRead(buf, _type, number)
-}
-
-func (p *GetByIdResult) FastWrite(buf []byte) (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.FastWrite(buf)
-}
-
-func (p *GetByIdResult) Size() (n int) {
-	if !p.IsSetSuccess() {
-		return 0
-	}
-	return p.Success.Size()
-}
-
-func (p *GetByIdResult) Marshal(out []byte) ([]byte, error) {
-	if !p.IsSetSuccess() {
-		return out, fmt.Errorf("No req in GetByIdResult")
-	}
-	return proto.Marshal(p.Success)
-}
-
-func (p *GetByIdResult) Unmarshal(in []byte) error {
-	msg := new(user.DouyinUserResponse)
-	if err := proto.Unmarshal(in, msg); err != nil {
-		return err
-	}
-	p.Success = msg
-	return nil
-}
-
-func (p *GetByIdResult) GetSuccess() *user.DouyinUserResponse {
-	if !p.IsSetSuccess() {
-		return GetByIdResult_Success_DEFAULT
-	}
-	return p.Success
-}
-
-func (p *GetByIdResult) SetSuccess(x interface{}) {
-	p.Success = x.(*user.DouyinUserResponse)
-}
-
-func (p *GetByIdResult) IsSetSuccess() bool {
-	return p.Success != nil
-}
-
-type kClient struct {
-	c client.Client
-}
-
-func newServiceClient(c client.Client) *kClient {
-	return &kClient{
-		c: c,
-	}
-}
-
-func (p *kClient) Register(ctx context.Context, Req *user.DouyinUserRegisterRequest) (r *user.DouyinUserRegisterResponse, err error) {
-	var _args RegisterArgs
-	_args.Req = Req
-	var _result RegisterResult
-	if err = p.c.Call(ctx, "Register", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) Login(ctx context.Context, Req *user.DouyinUserLoginRequest) (r *user.DouyinUserLoginResponse, err error) {
-	var _args LoginArgs
-	_args.Req = Req
-	var _result LoginResult
-	if err = p.c.Call(ctx, "Login", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
-
-func (p *kClient) GetById(ctx context.Context, Req *user.DouyinUserRequest) (r *user.DouyinUserResponse, err error) {
-	var _args GetByIdArgs
-	_args.Req = Req
-	var _result GetByIdResult
-	if err = p.c.Call(ctx, "GetById", &_args, &_result); err != nil {
-		return
-	}
-	return _result.GetSuccess(), nil
-}
Index: kitex_gen/interact/script/bootstrap.sh
===================================================================
diff --git a/kitex_gen/interact/script/bootstrap.sh b/kitex_gen/interact/script/bootstrap.sh
deleted file mode 100644
--- a/kitex_gen/interact/script/bootstrap.sh	
+++ /dev/null	
@@ -1,22 +0,0 @@
-#! /usr/bin/env bash
-CURDIR=$(cd $(dirname $0); pwd)
-
-if [ "X$1" != "X" ]; then
-    RUNTIME_ROOT=$1
-else
-    RUNTIME_ROOT=${CURDIR}
-fi
-
-export KITEX_RUNTIME_ROOT=$RUNTIME_ROOT
-export KITEX_LOG_DIR="$RUNTIME_ROOT/log"
-
-if [ ! -d "$KITEX_LOG_DIR/app" ]; then
-    mkdir -p "$KITEX_LOG_DIR/app"
-fi
-
-if [ ! -d "$KITEX_LOG_DIR/rpc" ]; then
-    mkdir -p "$KITEX_LOG_DIR/rpc"
-fi
-
-exec "$CURDIR/bin/interact"
-
Index: build.sh
===================================================================
diff --git a/build.sh b/build.sh
deleted file mode 100644
--- a/build.sh	
+++ /dev/null	
@@ -1,13 +0,0 @@
-#!/usr/bin/env bash
-RUN_NAME="video"
-
-mkdir -p output/bin
-cp script/* output/
-chmod +x output/bootstrap.sh
-
-if [ "$IS_SYSTEM_TEST_ENV" != "1" ]; then
-    go build -o output/bin/${RUN_NAME}
-else
-    go test -c -covermode=set -o output/bin/${RUN_NAME} -coverpkg=./...
-fi
-
Index: go.sum
===================================================================
diff --git a/go.sum b/go.sum
deleted file mode 100644
--- a/go.sum	
+++ /dev/null	
@@ -1,451 +0,0 @@
-cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=
-github.com/Azure/azure-sdk-for-go/sdk/azcore v0.19.0/go.mod h1:h6H6c8enJmmocHUbLiiGY6sx7f9i+X3m1CHdd5c6Rdw=
-github.com/Azure/azure-sdk-for-go/sdk/azidentity v0.11.0/go.mod h1:HcM1YX14R7CJcghJGOYCgdezslRSVzqwLf/q+4Y2r/0=
-github.com/Azure/azure-sdk-for-go/sdk/internal v0.7.0/go.mod h1:yqy467j36fJxcRV2TzfVZ1pCb5vxm4BtZPUdYWe/Xo8=
-github.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=
-github.com/Masterminds/semver/v3 v3.1.1/go.mod h1:VPu/7SZ7ePZ3QOrcuXROw5FAcLl4a0cBrbBpGY/8hQs=
-github.com/apache/thrift v0.13.0 h1:5hryIiq9gtn+MiLVn0wP37kb/uTeRZgN08WoCsAhIhI=
-github.com/apache/thrift v0.13.0/go.mod h1:cp2SuWMxlEZw2r+iP2GNCdIi4C1qmUzdZFSVb+bacwQ=
-github.com/brianvoe/gofakeit/v6 v6.16.0/go.mod h1:Ow6qC71xtwm79anlwKRlWZW6zVq9D2XHE4QSSMP/rU8=
-github.com/bytedance/go-tagexpr/v2 v2.9.2 h1:QySJaAIQgOEDQBLS3x9BxOWrnhqu5sQ+f6HaZIxD39I=
-github.com/bytedance/go-tagexpr/v2 v2.9.2/go.mod h1:5qsx05dYOiUXOUgnQ7w3Oz8BYs2qtM/bJokdLb79wRM=
-github.com/bytedance/gopkg v0.0.0-20220413063733-65bf48ffb3a7/go.mod h1:2ZlV9BaUH4+NXIBF0aMdKKAnHTzqH+iMU4KUjAbL23Q=
-github.com/bytedance/gopkg v0.0.0-20220509134931-d1878f638986/go.mod h1:2ZlV9BaUH4+NXIBF0aMdKKAnHTzqH+iMU4KUjAbL23Q=
-github.com/bytedance/gopkg v0.0.0-20220531084716-665b4f21126f h1:2YCF3cgO6XCub0HIsLrA8ZGhmAPGZfOeSaGjT6Kx4Mc=
-github.com/bytedance/gopkg v0.0.0-20220531084716-665b4f21126f/go.mod h1:2ZlV9BaUH4+NXIBF0aMdKKAnHTzqH+iMU4KUjAbL23Q=
-github.com/bytedance/sonic v1.5.0 h1:XWdTi8bwPgxIML+eNV1IwNuTROK6EUrQ65ey8yd6fRQ=
-github.com/bytedance/sonic v1.5.0/go.mod h1:ED5hyg4y6t3/9Ku1R6dU/4KyJ48DZ4jPhfY1O2AihPM=
-github.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=
-github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06 h1:1sDoSuDPWzhkdzNVxCxtIaKiAe96ESVPv8coGwc1gZ4=
-github.com/chenzhuoyu/base64x v0.0.0-20211019084208-fb5309c8db06/go.mod h1:DH46F32mSOjUmXrMHnKwZdA8wcEefY7UVqBKYGjpdQY=
-github.com/chenzhuoyu/iasm v0.0.0-20220818063314-28c361dae733 h1:Hx6Jxqln+bHRrtjUdgrehhF3gtWVJ2S7bjO/YTNn8Fg=
-github.com/chenzhuoyu/iasm v0.0.0-20220818063314-28c361dae733/go.mod h1:wOQ0nsbeOLa2awv8bUYFW/EHXbjQMlZ10fAlXDB2sz8=
-github.com/choleraehyq/pid v0.0.13/go.mod h1:uhzeFgxJZWQsZulelVQZwdASxQ9TIPZYL4TPkQMtL/U=
-github.com/choleraehyq/pid v0.0.15 h1:PejhUZowqxxssjwyaw4OZURRFjnvftZfeEWK9UoWPXU=
-github.com/choleraehyq/pid v0.0.15/go.mod h1:uhzeFgxJZWQsZulelVQZwdASxQ9TIPZYL4TPkQMtL/U=
-github.com/chzyer/logex v1.2.0/go.mod h1:9+9sk7u7pGNWYMkh0hdiL++6OeibzJccyQU4p4MedaY=
-github.com/chzyer/readline v1.5.0/go.mod h1:x22KAscuvRqlLoK9CsoYsmxoXZMMFVyOl86cAH8qUic=
-github.com/chzyer/test v0.0.0-20210722231415-061457976a23/go.mod h1:Q3SI9o4m/ZMnBNeIyt5eFwwo7qiLfzFZmjNmxjkiQlU=
-github.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=
-github.com/cloudwego/fastpb v0.0.3 h1:GZE0WzlnjQFE3+vkYFZd964PGT9AXOuvir+JGzuBSPM=
-github.com/cloudwego/fastpb v0.0.3/go.mod h1:/V13XFTq2TUkxj2qWReV8MwfPC4NnPcy6FsrojnsSG0=
-github.com/cloudwego/frugal v0.1.3 h1:tw3+hh4YMmtHFHRue3OGYjAnkxnZRHqeAyG18+7z5aI=
-github.com/cloudwego/frugal v0.1.3/go.mod h1:b981ViPYdhI56aFYsoMjl9kv6yeqYSO+iEz2jrhkCgI=
-github.com/cloudwego/hertz v0.5.2 h1:SOxmJo1KXjjWQjJ7OwxCvEePiR92PScdW5JM1p1HpHo=
-github.com/cloudwego/hertz v0.5.2/go.mod h1:K1U0RlU07CDeBINfHNbafH/3j9uSgIW8otbjUys3OPY=
-github.com/cloudwego/kitex v0.3.2/go.mod h1:/XD07VpUD9VQWmmoepASgZ6iw//vgWikVA9MpzLC5i0=
-github.com/cloudwego/kitex v0.4.4 h1:/oInvgh0Nz8OpzXBrXkD3qVBkiQmCCdCVLdIpktj6q0=
-github.com/cloudwego/kitex v0.4.4/go.mod h1:3FcH5h9Qw+dhRljSzuGSpWuThttA8DvK0BsL7HUYydo=
-github.com/cloudwego/netpoll v0.2.4/go.mod h1:1T2WVuQ+MQw6h6DpE45MohSvDTKdy2DlzCx2KsnPI4E=
-github.com/cloudwego/netpoll v0.3.1 h1:xByoORmCLIyKZ8gS+da06WDo3j+jvmhaqS2KeKejtBk=
-github.com/cloudwego/netpoll v0.3.1/go.mod h1:1T2WVuQ+MQw6h6DpE45MohSvDTKdy2DlzCx2KsnPI4E=
-github.com/cloudwego/thriftgo v0.1.2/go.mod h1:LzeafuLSiHA9JTiWC8TIMIq64iadeObgRUhmVG1OC/w=
-github.com/cloudwego/thriftgo v0.2.4 h1:o3JTSygQXaNHmggZYqAkfCBdPGWuKH1Q8XCflCvsSIY=
-github.com/cloudwego/thriftgo v0.2.4/go.mod h1:8i9AF5uDdWHGqzUhXDlubCjx4MEfKvWXGQlMWyR0tM4=
-github.com/cncf/udpa/go v0.0.0-20201120205902-5459f2c99403/go.mod h1:WmhPx2Nbnhtbo57+VJT5O0JRkEi1Wbu0z5j0R8u5Hbk=
-github.com/cockroachdb/apd v1.1.0/go.mod h1:8Sl8LxpKi29FqWXR16WEFZRNSz3SoPzUzeMeY4+DwBQ=
-github.com/coreos/go-systemd v0.0.0-20190321100706-95778dfbb74e/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=
-github.com/coreos/go-systemd v0.0.0-20190719114852-fd7a80b32e1f/go.mod h1:F5haX7vjVVG0kc13fIWeqUViNPyEJxv/OmvnBo0Yme4=
-github.com/creack/pty v1.1.7/go.mod h1:lj5s0c3V2DBrqTV7llrYr5NG6My20zk30Fl46Y7DoTY=
-github.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
-github.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=
-github.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=
-github.com/denisenkom/go-mssqldb v0.12.0/go.mod h1:iiK0YP1ZeepvmBQk/QpLEhhTNJgfzrpArPY/aFvc9yU=
-github.com/denisenkom/go-mssqldb v0.12.2 h1:1OcPn5GBIobjWNd+8yjfHNIaFX14B1pWI3F9HZy5KXw=
-github.com/dnaeon/go-vcr v1.2.0/go.mod h1:R4UdLID7HZT3taECzJs4YgbbH6PIGXB6W/sc5OLb6RQ=
-github.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
-github.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=
-github.com/envoyproxy/go-control-plane v0.9.9-0.20201210154907-fd9021fe5dad/go.mod h1:cXg6YxExXjJnVBQHBLXeUAgxn2UodCpnH306RInaBQk=
-github.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=
-github.com/fsnotify/fsnotify v1.5.4 h1:jRbGcIw6P2Meqdwuo0H1p6JVLbL5DHKAKlYndzMwVZI=
-github.com/fsnotify/fsnotify v1.5.4/go.mod h1:OVB6XrOHzAwXMpEM7uPOzcehqUV2UqJxmVXmkdnm1bU=
-github.com/go-kit/log v0.1.0/go.mod h1:zbhenjAZHb184qTLMA9ZjW7ThYL0H2mk7Q6pNt4vbaY=
-github.com/go-logfmt/logfmt v0.5.0/go.mod h1:wCYkCAKZfumFQihp8CzCvQ3paCTfi41vtzG1KdI/P7A=
-github.com/go-sql-driver/mysql v1.6.0/go.mod h1:DCzpHaOWr8IXmIStZouvnhqoel9Qv2LBy8hT2VhHyBg=
-github.com/go-sql-driver/mysql v1.7.0 h1:ueSltNNllEqE3qcWBTD0iQd3IpL/6U+mJxLkazJ7YPc=
-github.com/go-sql-driver/mysql v1.7.0/go.mod h1:OXbVy3sEdcQ2Doequ6Z5BW6fXNQTmx+9S1MCJN5yJMI=
-github.com/go-stack/stack v1.8.0/go.mod h1:v0f6uXyyMGvRgIKkXu+yp6POWl0qKG85gN/melR3HDY=
-github.com/gofrs/uuid v4.0.0+incompatible/go.mod h1:b2aQJv3Z4Fp6yNu3cdSllBxTCLRxnplIgP/c0N/04lM=
-github.com/gogo/protobuf v1.3.2/go.mod h1:P1XiOD3dCwIKUDQYPy72D8LYyHL2YPYrpS2s69NZV8Q=
-github.com/golang-sql/civil v0.0.0-20190719163853-cb61b32ac6fe/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=
-github.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9 h1:au07oEsX2xN0ktxqI+Sida1w446QrXBRJ0nee3SNZlA=
-github.com/golang-sql/civil v0.0.0-20220223132316-b832511892a9/go.mod h1:8vg3r2VgvsThLBIFL93Qb5yWzgyZWhEmBwUJWevAkK0=
-github.com/golang-sql/sqlexp v0.0.0-20170517235910-f1bb20e5a188/go.mod h1:vXjM/+wXQnTPR4KqTKDgJukSZ6amVRtWMPEjE6sQoK8=
-github.com/golang-sql/sqlexp v0.1.0 h1:ZCD6MBpcuOVfGVqsEmY5/4FtYiKz6tSyUv9LPEDei6A=
-github.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=
-github.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=
-github.com/golang/mock v1.6.0 h1:ErTB+efbowRARo13NNdxyJji2egdxLGQhRaY+DUumQc=
-github.com/golang/mock v1.6.0/go.mod h1:p6yTPP+5HYm5mzsMV8JkE6ZKdX+/wYM6Hr+LicevLPs=
-github.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=
-github.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=
-github.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=
-github.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=
-github.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=
-github.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=
-github.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=
-github.com/golang/protobuf v1.4.2/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=
-github.com/golang/protobuf v1.5.0/go.mod h1:FsONVRAS9T7sI+LIUmWTfcYkHO4aIWwzhcaSAoJOfIk=
-github.com/golang/protobuf v1.5.2 h1:ROPKBNFfQgOUMifHyP+KYbvpjbdoFNs+aK7DXlji0Tw=
-github.com/golang/protobuf v1.5.2/go.mod h1:XVQd3VNwM+JqD3oG2Ue2ip4fOMUkwXdXDdiuN0vRsmY=
-github.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=
-github.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
-github.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=
-github.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/go-cmp v0.5.5 h1:Khx7svrCpmxxtHBq5j2mp/xVjsi8hQMfNLvJFAlrGgU=
-github.com/google/go-cmp v0.5.5/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=
-github.com/google/gofuzz v1.0.0/go.mod h1:dBl0BpW6vV/+mYPU4Po3pmUjxk6FQPldtuIdl/M65Eg=
-github.com/google/pprof v0.0.0-20220608213341-c488b8fa1db3 h1:mpL/HvfIgIejhVwAfxBQkwEjlhP5o0O9RAeTAjpwzxc=
-github.com/google/pprof v0.0.0-20220608213341-c488b8fa1db3/go.mod h1:gSuNB+gJaOiQKLEZ+q+PK9Mq3SOzhRcw2GsGS/FhYDk=
-github.com/google/renameio v0.1.0/go.mod h1:KWCgfxg9yswjAJkECMjeO8J8rahYeXnNhOm40UhjYkI=
-github.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=
-github.com/gordonklaus/ineffassign v0.0.0-20200309095847-7953dde2c7bf/go.mod h1:cuNKsD1zp2v6XfE/orVX2QE1LC+i254ceGcVeDT3pTU=
-github.com/henrylee2cn/ameda v1.4.8/go.mod h1:liZulR8DgHxdK+MEwvZIylGnmcjzQ6N6f2PlWe7nEO4=
-github.com/henrylee2cn/ameda v1.4.10 h1:JdvI2Ekq7tapdPsuhrc4CaFiqw6QXFvZIULWJgQyCAk=
-github.com/henrylee2cn/ameda v1.4.10/go.mod h1:liZulR8DgHxdK+MEwvZIylGnmcjzQ6N6f2PlWe7nEO4=
-github.com/henrylee2cn/goutil v0.0.0-20210127050712-89660552f6f8 h1:yE9ULgp02BhYIrO6sdV/FPe0xQM6fNHkVQW2IAymfM0=
-github.com/henrylee2cn/goutil v0.0.0-20210127050712-89660552f6f8/go.mod h1:Nhe/DM3671a5udlv2AdV2ni/MZzgfv2qrPL5nIi3EGQ=
-github.com/ianlancetaylor/demangle v0.0.0-20220319035150-800ac71e25c2/go.mod h1:aYm2/VgdVmcIU8iMfdMvDMsRAQjcfZSKFby6HOFvi/w=
-github.com/jackc/chunkreader v1.0.0 h1:4s39bBR8ByfqH+DKm8rQA3E1LHZWB9XWcrz8fqaZbe0=
-github.com/jackc/chunkreader v1.0.0/go.mod h1:RT6O25fNZIuasFJRyZ4R/Y2BbhasbmZXF9QQ7T3kePo=
-github.com/jackc/chunkreader/v2 v2.0.0/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=
-github.com/jackc/chunkreader/v2 v2.0.1 h1:i+RDz65UE+mmpjTfyz0MoVTnzeYxroil2G82ki7MGG8=
-github.com/jackc/chunkreader/v2 v2.0.1/go.mod h1:odVSm741yZoC3dpHEUXIqA9tQRhFrgOHwnPIn9lDKlk=
-github.com/jackc/pgconn v0.0.0-20190420214824-7e0022ef6ba3/go.mod h1:jkELnwuX+w9qN5YIfX0fl88Ehu4XC3keFuOJJk9pcnA=
-github.com/jackc/pgconn v0.0.0-20190824142844-760dd75542eb/go.mod h1:lLjNuW/+OfW9/pnVKPazfWOgNfH2aPem8YQ7ilXGvJE=
-github.com/jackc/pgconn v0.0.0-20190831204454-2fabfa3c18b7/go.mod h1:ZJKsE/KZfsUgOEh9hBm+xYTstcNHg7UPMVJqRfQxq4s=
-github.com/jackc/pgconn v1.8.0/go.mod h1:1C2Pb36bGIP9QHGBYCjnyhqu7Rv3sGshaQUvmfGIB/o=
-github.com/jackc/pgconn v1.9.0/go.mod h1:YctiPyvzfU11JFxoXokUOOKQXQmDMoJL9vJzHH8/2JY=
-github.com/jackc/pgconn v1.9.1-0.20210724152538-d89c8390a530/go.mod h1:4z2w8XhRbP1hYxkpTuBjTS3ne3J48K83+u0zoyvg2pI=
-github.com/jackc/pgconn v1.11.0/go.mod h1:4z2w8XhRbP1hYxkpTuBjTS3ne3J48K83+u0zoyvg2pI=
-github.com/jackc/pgconn v1.13.0 h1:3L1XMNV2Zvca/8BYhzcRFS70Lr0WlDg16Di6SFGAbys=
-github.com/jackc/pgio v1.0.0 h1:g12B9UwVnzGhueNavwioyEEpAmqMe1E/BN9ES+8ovkE=
-github.com/jackc/pgio v1.0.0/go.mod h1:oP+2QK2wFfUWgr+gxjoBH9KGBb31Eio69xUb0w5bYf8=
-github.com/jackc/pgmock v0.0.0-20190831213851-13a1b77aafa2/go.mod h1:fGZlG77KXmcq05nJLRkk0+p82V8B8Dw8KN2/V9c/OAE=
-github.com/jackc/pgmock v0.0.0-20201204152224-4fe30f7445fd/go.mod h1:hrBW0Enj2AZTNpt/7Y5rr2xe/9Mn757Wtb2xeBzPv2c=
-github.com/jackc/pgmock v0.0.0-20210724152146-4ad1a8207f65/go.mod h1:5R2h2EEX+qri8jOWMbJCtaPWkrrNc7OHwsp2TCqp7ak=
-github.com/jackc/pgpassfile v1.0.0 h1:/6Hmqy13Ss2zCq62VdNG8tM1wchn8zjSGOBJ6icpsIM=
-github.com/jackc/pgpassfile v1.0.0/go.mod h1:CEx0iS5ambNFdcRtxPj5JhEz+xB6uRky5eyVu/W2HEg=
-github.com/jackc/pgproto3 v1.1.0 h1:FYYE4yRw+AgI8wXIinMlNjBbp/UitDJwfj5LqqewP1A=
-github.com/jackc/pgproto3 v1.1.0/go.mod h1:eR5FA3leWg7p9aeAqi37XOTgTIbkABlvcPB3E5rlc78=
-github.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190420180111-c116219b62db/go.mod h1:bhq50y+xrl9n5mRYyCBFKkpRVTLYJVWeCc+mEAI3yXA=
-github.com/jackc/pgproto3/v2 v2.0.0-alpha1.0.20190609003834-432c2951c711/go.mod h1:uH0AWtUmuShn0bcesswc4aBTWGvw0cAxIJp+6OB//Wg=
-github.com/jackc/pgproto3/v2 v2.0.0-rc3/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=
-github.com/jackc/pgproto3/v2 v2.0.0-rc3.0.20190831210041-4c03ce451f29/go.mod h1:ryONWYqW6dqSg1Lw6vXNMXoBJhpzvWKnT95C46ckYeM=
-github.com/jackc/pgproto3/v2 v2.0.6/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=
-github.com/jackc/pgproto3/v2 v2.1.1/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=
-github.com/jackc/pgproto3/v2 v2.2.0/go.mod h1:WfJCnwN3HIg9Ish/j3sgWXnAfK8A9Y0bwXYU5xKaEdA=
-github.com/jackc/pgproto3/v2 v2.3.1 h1:nwj7qwf0S+Q7ISFfBndqeLwSwxs+4DPsbRFjECT1Y4Y=
-github.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b h1:C8S2+VttkHFdOOCXJe+YGfa4vHYwlt4Zx+IVXQ97jYg=
-github.com/jackc/pgservicefile v0.0.0-20200714003250-2b9c44734f2b/go.mod h1:vsD4gTJCa9TptPL8sPkXrLZ+hDuNrZCnj29CQpr4X1E=
-github.com/jackc/pgtype v0.0.0-20190421001408-4ed0de4755e0/go.mod h1:hdSHsc1V01CGwFsrv11mJRHWJ6aifDLfdV3aVjFF0zg=
-github.com/jackc/pgtype v0.0.0-20190824184912-ab885b375b90/go.mod h1:KcahbBH1nCMSo2DXpzsoWOAfFkdEtEJpPbVLq8eE+mc=
-github.com/jackc/pgtype v0.0.0-20190828014616-a8802b16cc59/go.mod h1:MWlu30kVJrUS8lot6TQqcg7mtthZ9T0EoIBFiJcmcyw=
-github.com/jackc/pgtype v1.8.1-0.20210724151600-32e20a603178/go.mod h1:C516IlIV9NKqfsMCXTdChteoXmwgUceqaLfjg2e3NlM=
-github.com/jackc/pgtype v1.10.0/go.mod h1:LUMuVrfsFfdKGLw+AFFVv6KtHOFMwRgDDzBt76IqCA4=
-github.com/jackc/pgtype v1.12.0 h1:Dlq8Qvcch7kiehm8wPGIW0W3KsCCHJnRacKW0UM8n5w=
-github.com/jackc/pgx/v4 v4.0.0-20190420224344-cc3461e65d96/go.mod h1:mdxmSJJuR08CZQyj1PVQBHy9XOp5p8/SHH6a0psbY9Y=
-github.com/jackc/pgx/v4 v4.0.0-20190421002000-1b8f0016e912/go.mod h1:no/Y67Jkk/9WuGR0JG/JseM9irFbnEPbuWV2EELPNuM=
-github.com/jackc/pgx/v4 v4.0.0-pre1.0.20190824185557-6972a5742186/go.mod h1:X+GQnOEnf1dqHGpw7JmHqHc1NxDoalibchSk9/RWuDc=
-github.com/jackc/pgx/v4 v4.12.1-0.20210724153913-640aa07df17c/go.mod h1:1QD0+tgSXP7iUjYm9C1NxKhny7lq6ee99u/z+IHFcgs=
-github.com/jackc/pgx/v4 v4.15.0/go.mod h1:D/zyOyXiaM1TmVWnOM18p0xdDtdakRBa0RsVGI3U3bw=
-github.com/jackc/pgx/v4 v4.17.2 h1:0Ut0rpeKwvIVbMQ1KbMBU4h6wxehBI535LK6Flheh8E=
-github.com/jackc/puddle v0.0.0-20190413234325-e4ced69a3a2b/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=
-github.com/jackc/puddle v0.0.0-20190608224051-11cab39313c9/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=
-github.com/jackc/puddle v1.1.3/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=
-github.com/jackc/puddle v1.2.1/go.mod h1:m4B5Dj62Y0fbyuIc15OsIqK0+JU8nkqQjsgx7dvjSWk=
-github.com/jhump/protoreflect v1.8.2 h1:k2xE7wcUomeqwY0LDCYA16y4WWfyTcMx5mKhk0d4ua0=
-github.com/jhump/protoreflect v1.8.2/go.mod h1:7GcYQDdMU/O/BBrl/cX6PNHpXh6cenjd8pneu5yW7Tg=
-github.com/jinzhu/inflection v1.0.0 h1:K317FqzuhWc8YvSVlFMCCUb36O/S9MCKRDI7QkRKD/E=
-github.com/jinzhu/inflection v1.0.0/go.mod h1:h+uFLlag+Qp1Va5pdKtLDYj+kHp5pxUVkryuEj+Srlc=
-github.com/jinzhu/now v1.1.2/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=
-github.com/jinzhu/now v1.1.4/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=
-github.com/jinzhu/now v1.1.5 h1:/o9tlHleP7gOFmsnYNz3RGnqzefHA47wQpKrrdTIwXQ=
-github.com/jinzhu/now v1.1.5/go.mod h1:d3SSVoowX0Lcu0IBviAWJpolVfI5UJVZZ7cO71lE/z8=
-github.com/json-iterator/go v1.1.12 h1:PV8peI4a0ysnczrg+LtxykD8LfKY9ML6u2jnxaEnrnM=
-github.com/json-iterator/go v1.1.12/go.mod h1:e30LSqwooZae/UwlEbR2852Gd8hjQvJoHmT4TnhNGBo=
-github.com/kisielk/errcheck v1.5.0/go.mod h1:pFxgyoBC7bSaBwPgfKdkLd5X25qrDl4LWUI2bnpBCr8=
-github.com/kisielk/gotool v1.0.0/go.mod h1:XhKaO+MFFWcvkIS/tQcRk01m1F5IRFswLeQ+oQHNcck=
-github.com/klauspost/cpuid/v2 v2.0.9/go.mod h1:FInQzS24/EEf25PyTYn52gqo7WaD8xa0213Md/qVLRg=
-github.com/klauspost/cpuid/v2 v2.1.0 h1:eyi1Ad2aNJMW95zcSbmGg7Cg6cq3ADwLpMAP96d8rF0=
-github.com/klauspost/cpuid/v2 v2.1.0/go.mod h1:RVVoqg1df56z8g3pUjL/3lE5UfnlrJX8tyFgg4nqhuY=
-github.com/knz/go-libedit v1.10.1/go.mod h1:MZTVkCWyz0oBc7JOWP3wNAzd002ZbM/5hgShxwh4x8M=
-github.com/konsorten/go-windows-terminal-sequences v1.0.1/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=
-github.com/konsorten/go-windows-terminal-sequences v1.0.2/go.mod h1:T0+1ngSBFLxvqU3pZ+m/2kptfBszLMUkC4ZK/EgS/cQ=
-github.com/kr/pretty v0.1.0 h1:L/CwN0zerZDmRFUapSPitk6f+Q3+0za1rQkzVuMiMFI=
-github.com/kr/pretty v0.1.0/go.mod h1:dAy3ld7l9f0ibDNOQOHHMYYIIbhfbHSm3C4ZsoJORNo=
-github.com/kr/pty v1.1.1/go.mod h1:pFQYn66WHrOpPYNljwOMqo10TkYh1fy3cYio2l3bCsQ=
-github.com/kr/pty v1.1.8/go.mod h1:O1sed60cT9XZ5uDucP5qwvh+TE3NnUj51EiZO/lmSfw=
-github.com/kr/text v0.1.0 h1:45sCR5RtlFHMR4UwH9sdQ5TC8v0qDQCHnXt+kaKSTVE=
-github.com/kr/text v0.1.0/go.mod h1:4Jbv+DJW3UT/LiOwJeYQe1efqtUx/iVham/4vfdArNI=
-github.com/lib/pq v1.0.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=
-github.com/lib/pq v1.1.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=
-github.com/lib/pq v1.2.0/go.mod h1:5WUZQaWbwv1U+lTReE5YruASi9Al49XbQIvNi/34Woo=
-github.com/lib/pq v1.10.2/go.mod h1:AlVN5x4E4T544tWzH6hKfbfQvm3HdbOxrmggDNAPY9o=
-github.com/mattn/go-colorable v0.1.1/go.mod h1:FuOcm+DKB9mbwrcAfNl7/TZVBZ6rcnceauSikq3lYCQ=
-github.com/mattn/go-colorable v0.1.6/go.mod h1:u6P/XSegPjTcexA+o6vUJrdnUu04hMope9wVRipJSqc=
-github.com/mattn/go-isatty v0.0.5/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=
-github.com/mattn/go-isatty v0.0.7/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=
-github.com/mattn/go-isatty v0.0.12/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=
-github.com/mattn/go-isatty v0.0.13/go.mod h1:cbi8OIDigv2wuxKPP5vlRcQ1OAZbq2CE4Kysco4FUpU=
-github.com/mattn/go-sqlite3 v1.14.8/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=
-github.com/mattn/go-sqlite3 v1.14.9/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=
-github.com/mattn/go-sqlite3 v1.14.12/go.mod h1:NyWgC/yNuGj7Q9rpYnZvas74GogHl5/Z4A/KQRfk6bU=
-github.com/mattn/go-sqlite3 v1.14.15 h1:vfoHhTN1af61xCRSWzFIWzx2YskyMTwHLrExkBOjvxI=
-github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421 h1:ZqeYNhU3OHLH3mGKHDcjJRFFRrJa6eAM5H+CtDdOsPc=
-github.com/modern-go/concurrent v0.0.0-20180228061459-e0a39a4cb421/go.mod h1:6dJC0mAP4ikYIbvyc7fijjWJddQyLn8Ig3JB5CqoB9Q=
-github.com/modern-go/reflect2 v1.0.2 h1:xBagoLtFs94CBntxluKeaWgTMpvLxC4ur3nMaC9Gz0M=
-github.com/modern-go/reflect2 v1.0.2/go.mod h1:yWuevngMOJpCy52FWWMvUC8ws7m/LJsjYzDa0/r8luk=
-github.com/modocache/gover v0.0.0-20171022184752-b58185e213c5/go.mod h1:caMODM3PzxT8aQXRPkAt8xlV/e7d7w8GM5g0fa5F0D8=
-github.com/nishanths/predeclared v0.0.0-20200524104333-86fad755b4d3/go.mod h1:nt3d53pc1VYcphSCIaYAJtnPYnr3Zyn8fMq2wvPGPso=
-github.com/nyaruka/phonenumbers v1.0.55 h1:bj0nTO88Y68KeUQ/n3Lo2KgK7lM1hF7L9NFuwcCl3yg=
-github.com/nyaruka/phonenumbers v1.0.55/go.mod h1:sDaTZ/KPX5f8qyV9qN+hIm+4ZBARJrupC6LuhshJq1U=
-github.com/oleiade/lane v1.0.1 h1:hXofkn7GEOubzTwNpeL9MaNy8WxolCYb9cInAIeqShU=
-github.com/oleiade/lane v1.0.1/go.mod h1:IyTkraa4maLfjq/GmHR+Dxb4kCMtEGeb+qmhlrQ5Mk4=
-github.com/pkg/browser v0.0.0-20180916011732-0a3d74bf9ce4/go.mod h1:4OwLy04Bl9Ef3GJJCoec+30X3LQs/0/m4HFRt/2LUSA=
-github.com/pkg/errors v0.8.1/go.mod h1:bwawxfHBFNV+L2hUp1rHADufV3IMtnDRdf1r5NINEl0=
-github.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=
-github.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=
-github.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=
-github.com/rogpeppe/go-internal v1.3.0/go.mod h1:M8bDsm7K2OlrFYOpmOWEs/qY81heoFRclV5y23lUDJ4=
-github.com/rs/xid v1.2.1/go.mod h1:+uKXf+4Djp6Md1KODXJxgGQPKngRmWyn10oCKFzNHOQ=
-github.com/rs/zerolog v1.13.0/go.mod h1:YbFCdg8HfsridGWAh22vktObvhZbQsZXe4/zB0OKkWU=
-github.com/rs/zerolog v1.15.0/go.mod h1:xYTKnLHcpfU2225ny5qZjxnj9NvkumZYjJHlAThCjNc=
-github.com/satori/go.uuid v1.2.0/go.mod h1:dA0hQrYB0VpLJoorglMZABFdXlWrHn1NEOzdhQKdks0=
-github.com/shopspring/decimal v0.0.0-20180709203117-cd690d0c9e24/go.mod h1:M+9NzErvs504Cn4c5DxATwIqPbtswREoFCre64PpcG4=
-github.com/shopspring/decimal v1.2.0/go.mod h1:DKyhrW/HYNuLGql+MJL6WCR6knT2jwCFRcu2hWCYk4o=
-github.com/sirupsen/logrus v1.4.1/go.mod h1:ni0Sbl8bgC9z8RoU9G6nDWqqs/fq4eDPysMBDgk/93Q=
-github.com/sirupsen/logrus v1.4.2/go.mod h1:tLMulIdttU9McNUspp0xgXVQah82FyeX6MwdIuYE2rE=
-github.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
-github.com/stretchr/objx v0.1.1/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=
-github.com/stretchr/objx v0.2.0/go.mod h1:qt09Ya8vawLte6SNmTgCsAVtYtaKzEcn8ATUoHMkEqE=
-github.com/stretchr/testify v1.2.2/go.mod h1:a8OnRcib4nhh0OaRAV+Yts87kKdq0PP7pXfy6kDkUVs=
-github.com/stretchr/testify v1.3.0/go.mod h1:M5WIy9Dh21IEIfnGCwXGc5bZfKNJtfHm1UVUgZn+9EI=
-github.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=
-github.com/stretchr/testify v1.5.1/go.mod h1:5W2xD1RspED5o8YsWQXVCued0rvSQ+mT+I5cxcmMvtA=
-github.com/stretchr/testify v1.7.0 h1:nwc3DEeHmmLAfoZucVR881uASk0Mfjw8xYJ99tb5CcY=
-github.com/stretchr/testify v1.7.0/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=
-github.com/tidwall/gjson v1.9.3/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=
-github.com/tidwall/gjson v1.13.0 h1:3TFY9yxOQShrvmjdM76K+jc66zJeT6D3/VFFYCGQf7M=
-github.com/tidwall/gjson v1.13.0/go.mod h1:/wbyibRr2FHMks5tjHJ5F8dMZh3AcwJEMf5vlfC0lxk=
-github.com/tidwall/match v1.1.1 h1:+Ho715JplO36QYgwN9PGYNhgZvoUSc9X2c80KVTi+GA=
-github.com/tidwall/match v1.1.1/go.mod h1:eRSPERbgtNPcGhD8UCthc6PmLEQXEWd3PRB5JTxsfmM=
-github.com/tidwall/pretty v1.2.0 h1:RWIZEg2iJ8/g6fDDYzMpobmaoGh5OLl4AXtGUGPcqCs=
-github.com/tidwall/pretty v1.2.0/go.mod h1:ITEVvHYasfjBbM0u2Pg8T2nJnzm8xPwvNhhsoaGGjNU=
-github.com/twitchyliquid64/golang-asm v0.15.1 h1:SU5vSMR7hnwNxj24w34ZyCi/FmDZTkS4MhqMhdFk5YI=
-github.com/twitchyliquid64/golang-asm v0.15.1/go.mod h1:a1lVb/DtPvCB8fslRZhAngC2+aY1QWCk3Cedj/Gdt08=
-github.com/yuin/goldmark v1.1.27/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
-github.com/yuin/goldmark v1.1.32/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
-github.com/yuin/goldmark v1.2.1/go.mod h1:3hX8gzYuyVAZsxl0MRgGTJEmQBFcNTphYh9decYSb74=
-github.com/yuin/goldmark v1.3.5/go.mod h1:mwnBkeHKe2W/ZEtQ+71ViKU8L12m81fl3OWwC1Zlc8k=
-github.com/zenazn/goji v0.9.0/go.mod h1:7S9M489iMyHBNxwZnk9/EHS098H4/F6TATF2mIxtB1Q=
-go.uber.org/atomic v1.3.2/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=
-go.uber.org/atomic v1.4.0/go.mod h1:gD2HeocX3+yG+ygLZcrzQJaqmWj9AIm7n08wl/qW/PE=
-go.uber.org/atomic v1.5.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=
-go.uber.org/atomic v1.6.0/go.mod h1:sABNBOSYdrvTF6hTgEIbc7YasKWGhgEQZyfxyTvoXHQ=
-go.uber.org/multierr v1.1.0/go.mod h1:wR5kodmAFQ0UK8QlbwjlSNy0Z68gJhDJUG5sjR94q/0=
-go.uber.org/multierr v1.3.0/go.mod h1:VgVr7evmIr6uPjLBxg28wmKNXyqE9akIJ5XnfpiKl+4=
-go.uber.org/multierr v1.5.0/go.mod h1:FeouvMocqHpRaaGuG9EjoKcStLC43Zu/fmqdUMPcKYU=
-go.uber.org/tools v0.0.0-20190618225709-2cfd321de3ee/go.mod h1:vJERXedbb3MVM5f9Ejo0C68/HhF8uaILCdgjnY+goOA=
-go.uber.org/zap v1.9.1/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=
-go.uber.org/zap v1.10.0/go.mod h1:vwi/ZaCAaUcBkycHslxD9B2zi4UTXhF60s6SWpuDF0Q=
-go.uber.org/zap v1.13.0/go.mod h1:zwrFLgMcdUuIBviXEYEH1YKNaOBnKXsx2IPda5bBwHM=
-golang.org/x/arch v0.0.0-20210923205945-b76863e36670/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=
-golang.org/x/arch v0.0.0-20220722155209-00200b7164a7 h1:VBQqJMNMRfQsWSiCTLgz9XjAfWlgnJAPv8nsp1HF8Tw=
-golang.org/x/arch v0.0.0-20220722155209-00200b7164a7/go.mod h1:5om86z9Hs0C8fWVUuoMHwpExlXzs5Tkyp9hOrfG7pp8=
-golang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=
-golang.org/x/crypto v0.0.0-20190411191339-88737f569e3a/go.mod h1:WFFai1msRO1wXaEeE5yQxYXgSfI8pQAWXbQop6sCtWE=
-golang.org/x/crypto v0.0.0-20190510104115-cbcb75029529/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
-golang.org/x/crypto v0.0.0-20190820162420-60c769a6c586/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
-golang.org/x/crypto v0.0.0-20191011191535-87dc89f01550/go.mod h1:yigFU9vqHzYiE8UmvKecakEJjdnWj3jj499lnFckfCI=
-golang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
-golang.org/x/crypto v0.0.0-20201016220609-9e8e0b390897/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=
-golang.org/x/crypto v0.0.0-20201203163018-be400aefbc4c/go.mod h1:jdWPYTVW3xRLrWPugEBEK3UY2ZEsg3UU495nc5E+M+I=
-golang.org/x/crypto v0.0.0-20210616213533-5ff15b29337e/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
-golang.org/x/crypto v0.0.0-20210711020723-a769d52b0f97/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
-golang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=
-golang.org/x/crypto v0.0.0-20220214200702-86341886e292/go.mod h1:IxCIyHEi3zRg3s0A5j5BB6A9Jmi73HwBIUl50j+osU4=
-golang.org/x/crypto v0.0.0-20221005025214-4161e89ecf1b h1:huxqepDufQpLLIRXiVkTvnxrzJlpwmIWAObmcCcUFr0=
-golang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=
-golang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=
-golang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=
-golang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
-golang.org/x/lint v0.0.0-20190930215403-16217165b5de/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=
-golang.org/x/lint v0.0.0-20201208152925-83fdc39ff7b5/go.mod h1:3xt1FjdF8hUf6vQPIChWIBhFzV8gjjsPE/fR3IyQdNY=
-golang.org/x/mod v0.0.0-20190513183733-4bf6d317e70e/go.mod h1:mXi4GBBbnImb6dmsKGUJ2LatrhH/nqhxcFungHvyanc=
-golang.org/x/mod v0.1.1-0.20191105210325-c90efee705ee/go.mod h1:QqPTAvyqsEbceGzBzNggFXnrqF1CaUcvgkdR5Ot7KZg=
-golang.org/x/mod v0.2.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
-golang.org/x/mod v0.3.0/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
-golang.org/x/mod v0.4.2/go.mod h1:s0Qsj1ACt9ePp/hMypM3fl4fZqREWJwdYDEqhRiZZUA=
-golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4 h1:6zppjxzCulZykYSLyVDYbneBfbaBIQPYMevg0bEwv2s=
-golang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=
-golang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=
-golang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
-golang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=
-golang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
-golang.org/x/net v0.0.0-20190813141303-74dc4d7220e7/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
-golang.org/x/net v0.0.0-20200226121028-0de0cce0169b/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=
-golang.org/x/net v0.0.0-20200625001655-4c5254603344/go.mod h1:/O7V0waA8r7cgGh81Ro3o1hOxt32SMVPicZroKQ2sZA=
-golang.org/x/net v0.0.0-20201021035429-f5854403a974/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=
-golang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=
-golang.org/x/net v0.0.0-20210316092652-d523dce5a7f4/go.mod h1:RBQZq4jEuRlivfhVLdyRGr576XBO4/greRjx4P4O3yc=
-golang.org/x/net v0.0.0-20210405180319-a5a99cb37ef4/go.mod h1:p54w0d4576C0XHj96bSt6lcn1PtDYWL6XObtHCRCNQM=
-golang.org/x/net v0.0.0-20210610132358-84b48f89b13b/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
-golang.org/x/net v0.0.0-20210614182718-04defd469f4e/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
-golang.org/x/net v0.0.0-20211112202133-69e39bad7dc2/go.mod h1:9nx3DQGgdP8bBQD5qxJ1jj9UTztislL4KSBs9R2vV5Y=
-golang.org/x/net v0.0.0-20220722155237-a158d28d115b h1:PxfKdU9lEEDYjdIzOtC4qFWgkU2rGHdKlKowJSMN9h0=
-golang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=
-golang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=
-golang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20190911185100-cd5d95a43a6e/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20200625203802-6e8e738ad208/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20201020160332-67f06af15bc9/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20210220032951-036812b2e83c/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4 h1:uVc8UZUe6tr40fFVnUP5Oj+veunVezqYl9z7DYw9xzw=
-golang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=
-golang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20180905080454-ebe1bf3edb33/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=
-golang.org/x/sys v0.0.0-20190403152447-81d4e9dc473e/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190422165155-953cdadca894/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20190813064441-fde4db37ae7a/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20191026070338-33540a1f6037/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200116001909-b77594299b42/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200223170610-d5e6a3e2c0ae/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200323222414-85ca7c5b95cd/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210119212857-b64e53b001e4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210315160823-c6e025ad8005/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210320140829-1e4c9ba3b0c4/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210330210617-4fbd30eecc44/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210423082822-04245dca01da/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=
-golang.org/x/sys v0.0.0-20210510120138-977fb7262007/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20210818153620-00dd8d7831e7/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220110181412-a018aaa089fe/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220310020820-b874c991c1a5/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220412211240-33da011f77ad/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220704084225-05e143d24a9e/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20220817070843-5a390386f1f2/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/sys v0.0.0-20221006211917-84dc82d7e875 h1:AzgQNqF+FKwyQ5LbVrVqOcuuFB67N47F9+htZYH0wFM=
-golang.org/x/sys v0.0.0-20221006211917-84dc82d7e875/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=
-golang.org/x/term v0.0.0-20201117132131-f5c789dd3221/go.mod h1:Nr5EML6q2oocZ2LXRh80K7BxOlk5/8JxuGnuhpl+muw=
-golang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=
-golang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=
-golang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=
-golang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.4/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.5/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.6/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=
-golang.org/x/text v0.3.7 h1:olpwvP2KacW1ZWvsR7uQhoyTYvKAupfQrRGBFM352Gk=
-golang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=
-golang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
-golang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=
-golang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=
-golang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=
-golang.org/x/tools v0.0.0-20190425163242-31fd60d6bfdc/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
-golang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=
-golang.org/x/tools v0.0.0-20190621195816-6e04913cbbac/go.mod h1:/rFqwRUd4F7ZHNgwSSTFct+R/Kf4OFW1sUzUTQQTgfc=
-golang.org/x/tools v0.0.0-20190823170909-c4a336ef6a2f/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20191029041327-9cc4af7d6b2c/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20191029190741-b9c20aec41a5/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20191130070609-6e064ea0cf2d/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=
-golang.org/x/tools v0.0.0-20200103221440-774c71fcf114/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
-golang.org/x/tools v0.0.0-20200130002326-2f3ba24bd6e7/go.mod h1:TB2adYChydJhpapKDTa4BR/hXlZSLoq2Wpct/0txZ28=
-golang.org/x/tools v0.0.0-20200522201501-cb1345f3a375/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
-golang.org/x/tools v0.0.0-20200619180055-7c47624df98f/go.mod h1:EkVYQZoAsY45+roYkvgYkIh4xh/qjgUK9TdY2XT94GE=
-golang.org/x/tools v0.0.0-20200717024301-6ddee64345a6/go.mod h1:njjCfa9FT2d7l9Bc6FUM5FLjQPp3cFF28FI3qnDFljA=
-golang.org/x/tools v0.0.0-20210106214847-113979e3529a/go.mod h1:emZCQorbCU4vsT4fOWvOPXz4eW1wZW4PmDk9uLelYpA=
-golang.org/x/tools v0.1.0/go.mod h1:xkSsbof2nBLbhDlRMhhhyNLN/zl3eTqcnHD5viDpcZ0=
-golang.org/x/tools v0.1.1/go.mod h1:o0xws9oXOQQZyjljx8fwUC0k7L1pTE6eaCbjGeHmOkk=
-golang.org/x/tools v0.1.12 h1:VveCTK38A2rkS8ZqFY25HIDFscX5X9OoEhJd3quQmXU=
-golang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=
-golang.org/x/xerrors v0.0.0-20190410155217-1f06c39b4373/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20190513163551-3ee3066db522/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20191011141410-1b5146add898/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1 h1:go1bK/D/BFZV2I8cIQd1NKEZ+0owSTG1fDTci4IqFcE=
-golang.org/x/xerrors v0.0.0-20200804184101-5ec99f83aff1/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=
-google.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=
-google.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=
-google.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=
-google.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=
-google.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=
-google.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384 h1:z+j74wi4yV+P7EtK9gPLGukOk7mFOy9wMQaC0wNb7eY=
-google.golang.org/genproto v0.0.0-20210513213006-bf773b8c8384/go.mod h1:P3QM42oQyzQSnHPnZ/vqoCdDmzH28fzWByN9asMeM8A=
-google.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=
-google.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=
-google.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=
-google.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=
-google.golang.org/grpc v1.36.1 h1:cmUfbeGKnz9+2DD/UYsMQXeqbHZqZDs4eQwW0sFOpBY=
-google.golang.org/grpc v1.36.1/go.mod h1:qjiiYl8FncCW8feJPdyg3v6XW24KsRHe+dy9BAGRRjU=
-google.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=
-google.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=
-google.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=
-google.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=
-google.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=
-google.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
-google.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
-google.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=
-google.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=
-google.golang.org/protobuf v1.25.1-0.20200805231151-a709e31e5d12/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=
-google.golang.org/protobuf v1.26.0-rc.1/go.mod h1:jlhhOSvTdKEhbULTjvd4ARK9grFBp09yW+WbY/TyQbw=
-google.golang.org/protobuf v1.26.0/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
-google.golang.org/protobuf v1.27.1/go.mod h1:9q0QmTI4eRPtz6boOQmLYwt+qCgq0jsYwAQnmE0givc=
-google.golang.org/protobuf v1.28.0/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=
-google.golang.org/protobuf v1.28.1 h1:d0NfwRgPtno5B1Wa6L2DAG+KivqkdutMf1UhdNx175w=
-google.golang.org/protobuf v1.28.1/go.mod h1:HV8QOd/L58Z+nl8r43ehVNZIU/HEI6OcFqwMG9pJV4I=
-gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
-gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127 h1:qIbj1fsPNlZgppZ+VLlY7N33q108Sa+fhmuc+sWQYwY=
-gopkg.in/check.v1 v1.0.0-20180628173108-788fd7840127/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=
-gopkg.in/errgo.v2 v2.1.0/go.mod h1:hNsd1EY+bozCKY1Ytp96fpM3vjJbqLJn88ws8XvfDNI=
-gopkg.in/inconshreveable/log15.v2 v2.0.0-20180818164646-67afb5ed74ec/go.mod h1:aPpfJ7XW+gOuirDoZ8gHhLh3kZ1B08FtV2bbmy7Jv3s=
-gopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.2.8/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=
-gopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=
-gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
-gopkg.in/yaml.v3 v3.0.0-20210107192922-496545a6307b/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
-gopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=
-gopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=
-gorm.io/datatypes v1.0.7 h1:8NhJN4+annFjwV1WufDhFiPjdUvV1lSGUdg1UCjQIWY=
-gorm.io/datatypes v1.0.7/go.mod h1:l9qkCuy0CdzDEop9HKUdcnC9gHC2sRlaFtHkTzsZRqg=
-gorm.io/driver/mysql v1.3.2/go.mod h1:ChK6AHbHgDCFZyJp0F+BmVGb06PSIoh9uVYKAlRbb2U=
-gorm.io/driver/mysql v1.4.6 h1:5zS3vIKcyb46byXZNcYxaT9EWNIhXzu0gPuvvVrwZ8s=
-gorm.io/driver/mysql v1.4.6/go.mod h1:SxzItlnT1cb6e1e4ZRpgJN2VYtcqJgqnHxWr4wsP8oc=
-gorm.io/driver/postgres v1.3.4/go.mod h1:y0vEuInFKJtijuSGu9e5bs5hzzSzPK+LancpKpvbRBw=
-gorm.io/driver/postgres v1.4.1 h1:DutsKq2LK2Ag65q/+VygWth0/L4GAVOp+sCtg6WzZjs=
-gorm.io/driver/sqlite v1.1.6/go.mod h1:W8LmC/6UvVbHKah0+QOC7Ja66EaZXHwUTjgXY8YNWX8=
-gorm.io/driver/sqlite v1.3.1/go.mod h1:wJx0hJspfycZ6myN38x1O/AqLtNS6c5o9TndewFbELg=
-gorm.io/driver/sqlite v1.4.1 h1:ThZ3dRIbTbWGvaMHSVjgf0sb6SRJMNRyQAwfLo25+cM=
-gorm.io/driver/sqlserver v1.3.1/go.mod h1:w25Vrx2BG+CJNUu/xKbFhaKlGxT/nzRkhWCCoptX8tQ=
-gorm.io/driver/sqlserver v1.4.0 h1:3fjbsNkr/YqocSBW5CP16Lq6+APjRrWMzu7NbkXr9QU=
-gorm.io/gen v0.3.21 h1:t8329wT4tW1ZZWOm7vn4LV6OIrz8a5zCg+p78ezt+rA=
-gorm.io/gen v0.3.21/go.mod h1:aWgvoKdG9f8Des4TegSa0N5a+gwhGsFo0JJMaLwokvk=
-gorm.io/gorm v1.21.15/go.mod h1:F+OptMscr0P2F2qU97WT1WimdH9GaQPoDW7AYd5i2Y0=
-gorm.io/gorm v1.22.2/go.mod h1:F+OptMscr0P2F2qU97WT1WimdH9GaQPoDW7AYd5i2Y0=
-gorm.io/gorm v1.23.1/go.mod h1:l2lP/RyAtc1ynaTjFksBde/O8v9oOGIApu2/xRitmZk=
-gorm.io/gorm v1.23.6/go.mod h1:l2lP/RyAtc1ynaTjFksBde/O8v9oOGIApu2/xRitmZk=
-gorm.io/gorm v1.23.8/go.mod h1:l2lP/RyAtc1ynaTjFksBde/O8v9oOGIApu2/xRitmZk=
-gorm.io/gorm v1.24.0/go.mod h1:DVrVomtaYTbqs7gB/x2uVvqnXzv0nqjB396B8cG4dBA=
-gorm.io/gorm v1.24.5 h1:g6OPREKqqlWq4kh/3MCQbZKImeB9e6Xgc4zD+JgNZGE=
-gorm.io/gorm v1.24.5/go.mod h1:DVrVomtaYTbqs7gB/x2uVvqnXzv0nqjB396B8cG4dBA=
-gorm.io/hints v1.1.0 h1:Lp4z3rxREufSdxn4qmkK3TLDltrM10FLTHiuqwDPvXw=
-gorm.io/hints v1.1.0/go.mod h1:lKQ0JjySsPBj3uslFzY3JhYDtqEwzm+G1hv8rWujB6Y=
-gorm.io/plugin/dbresolver v1.3.0 h1:uFDX3bIuH9Lhj5LY2oyqR/bU6pqWuDgas35NAPF4X3M=
-gorm.io/plugin/dbresolver v1.3.0/go.mod h1:Pr7p5+JFlgDaiM6sOrli5olekJD16YRunMyA2S7ZfKk=
-honnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
-honnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=
-honnef.co/go/tools v0.0.1-2019.2.3/go.mod h1:a3bituU0lyd329TUQxRnasdCoJDkEUEAqEt0JzvZhAg=
-honnef.co/go/tools v0.0.1-2020.1.4/go.mod h1:X/FiERA/W4tHapMX5mGpAtMSVEeEUOyHaw9vFzvIQ3k=
-nullprogram.com/x/optparse v1.0.0/go.mod h1:KdyPE+Igbe0jQUrVfMqDMeJQIJZEuyV7pjYmp6pbG50=
-rsc.io/pdf v0.1.1/go.mod h1:n8OzWcQ6Sp37PL01nO98y4iUCRdTGarVfzxY20ICaU4=
Index: kitex_gen/chat/chat.pb.fast.go
===================================================================
diff --git a/kitex_gen/chat/chat.pb.fast.go b/kitex_gen/chat/chat.pb.fast.go
deleted file mode 100644
--- a/kitex_gen/chat/chat.pb.fast.go	
+++ /dev/null	
@@ -1,649 +0,0 @@
-// Code generated by Fastpb v0.0.2. DO NOT EDIT.
-
-package chat
-
-import (
-	fmt "fmt"
-	fastpb "github.com/cloudwego/fastpb"
-)
-
-var (
-	_ = fmt.Errorf
-	_ = fastpb.Skip
-)
-
-func (x *DouyinMessageChatRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinMessageChatRequest[number], err)
-}
-
-func (x *DouyinMessageChatRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinMessageChatRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.ToUserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinMessageChatResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinMessageChatResponse[number], err)
-}
-
-func (x *DouyinMessageChatResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinMessageChatResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *DouyinMessageChatResponse) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	var v Message
-	offset, err = fastpb.ReadMessage(buf, _type, &v)
-	if err != nil {
-		return offset, err
-	}
-	x.MessageList = append(x.MessageList, &v)
-	return offset, nil
-}
-
-func (x *DouyinRelationActionRequest) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationActionRequest[number], err)
-}
-
-func (x *DouyinRelationActionRequest) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Token, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.ToUserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.ActionType, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionRequest) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.Content, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionResponse) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_DouyinRelationActionResponse[number], err)
-}
-
-func (x *DouyinRelationActionResponse) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.StatusCode, offset, err = fastpb.ReadInt32(buf, _type)
-	return offset, err
-}
-
-func (x *DouyinRelationActionResponse) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.StatusMsg = &tmp
-	return offset, err
-}
-
-func (x *Message) FastRead(buf []byte, _type int8, number int32) (offset int, err error) {
-	switch number {
-	case 1:
-		offset, err = x.fastReadField1(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 2:
-		offset, err = x.fastReadField2(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 3:
-		offset, err = x.fastReadField3(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 4:
-		offset, err = x.fastReadField4(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	case 5:
-		offset, err = x.fastReadField5(buf, _type)
-		if err != nil {
-			goto ReadFieldError
-		}
-	default:
-		offset, err = fastpb.Skip(buf, _type, number)
-		if err != nil {
-			goto SkipFieldError
-		}
-	}
-	return offset, nil
-SkipFieldError:
-	return offset, fmt.Errorf("%T cannot parse invalid wire-format data, error: %s", x, err)
-ReadFieldError:
-	return offset, fmt.Errorf("%T read field %d '%s' error: %s", x, number, fieldIDToName_Message[number], err)
-}
-
-func (x *Message) fastReadField1(buf []byte, _type int8) (offset int, err error) {
-	x.Id, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *Message) fastReadField2(buf []byte, _type int8) (offset int, err error) {
-	x.ToUserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *Message) fastReadField3(buf []byte, _type int8) (offset int, err error) {
-	x.FromUserId, offset, err = fastpb.ReadInt64(buf, _type)
-	return offset, err
-}
-
-func (x *Message) fastReadField4(buf []byte, _type int8) (offset int, err error) {
-	x.Content, offset, err = fastpb.ReadString(buf, _type)
-	return offset, err
-}
-
-func (x *Message) fastReadField5(buf []byte, _type int8) (offset int, err error) {
-	tmp, offset, err := fastpb.ReadString(buf, _type)
-	x.CreateTime = &tmp
-	return offset, err
-}
-
-func (x *DouyinMessageChatRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinMessageChatRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinMessageChatRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.ToUserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.ToUserId)
-	return offset
-}
-
-func (x *DouyinMessageChatResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	return offset
-}
-
-func (x *DouyinMessageChatResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinMessageChatResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *DouyinMessageChatResponse) fastWriteField3(buf []byte) (offset int) {
-	if x.MessageList == nil {
-		return offset
-	}
-	for i := range x.MessageList {
-		offset += fastpb.WriteMessage(buf[offset:], 3, x.MessageList[i])
-	}
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField1(buf []byte) (offset int) {
-	if x.Token == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 1, x.Token)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField2(buf []byte) (offset int) {
-	if x.ToUserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.ToUserId)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField3(buf []byte) (offset int) {
-	if x.ActionType == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 3, x.ActionType)
-	return offset
-}
-
-func (x *DouyinRelationActionRequest) fastWriteField4(buf []byte) (offset int) {
-	if x.Content == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.Content)
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) fastWriteField1(buf []byte) (offset int) {
-	if x.StatusCode == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt32(buf[offset:], 1, x.StatusCode)
-	return offset
-}
-
-func (x *DouyinRelationActionResponse) fastWriteField2(buf []byte) (offset int) {
-	if x.StatusMsg == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 2, *x.StatusMsg)
-	return offset
-}
-
-func (x *Message) FastWrite(buf []byte) (offset int) {
-	if x == nil {
-		return offset
-	}
-	offset += x.fastWriteField1(buf[offset:])
-	offset += x.fastWriteField2(buf[offset:])
-	offset += x.fastWriteField3(buf[offset:])
-	offset += x.fastWriteField4(buf[offset:])
-	offset += x.fastWriteField5(buf[offset:])
-	return offset
-}
-
-func (x *Message) fastWriteField1(buf []byte) (offset int) {
-	if x.Id == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 1, x.Id)
-	return offset
-}
-
-func (x *Message) fastWriteField2(buf []byte) (offset int) {
-	if x.ToUserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 2, x.ToUserId)
-	return offset
-}
-
-func (x *Message) fastWriteField3(buf []byte) (offset int) {
-	if x.FromUserId == 0 {
-		return offset
-	}
-	offset += fastpb.WriteInt64(buf[offset:], 3, x.FromUserId)
-	return offset
-}
-
-func (x *Message) fastWriteField4(buf []byte) (offset int) {
-	if x.Content == "" {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 4, x.Content)
-	return offset
-}
-
-func (x *Message) fastWriteField5(buf []byte) (offset int) {
-	if x.CreateTime == nil {
-		return offset
-	}
-	offset += fastpb.WriteString(buf[offset:], 5, *x.CreateTime)
-	return offset
-}
-
-func (x *DouyinMessageChatRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinMessageChatRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinMessageChatRequest) sizeField2() (n int) {
-	if x.ToUserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.ToUserId)
-	return n
-}
-
-func (x *DouyinMessageChatResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	return n
-}
-
-func (x *DouyinMessageChatResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinMessageChatResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *DouyinMessageChatResponse) sizeField3() (n int) {
-	if x.MessageList == nil {
-		return n
-	}
-	for i := range x.MessageList {
-		n += fastpb.SizeMessage(3, x.MessageList[i])
-	}
-	return n
-}
-
-func (x *DouyinRelationActionRequest) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField1() (n int) {
-	if x.Token == "" {
-		return n
-	}
-	n += fastpb.SizeString(1, x.Token)
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField2() (n int) {
-	if x.ToUserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.ToUserId)
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField3() (n int) {
-	if x.ActionType == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(3, x.ActionType)
-	return n
-}
-
-func (x *DouyinRelationActionRequest) sizeField4() (n int) {
-	if x.Content == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.Content)
-	return n
-}
-
-func (x *DouyinRelationActionResponse) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	return n
-}
-
-func (x *DouyinRelationActionResponse) sizeField1() (n int) {
-	if x.StatusCode == 0 {
-		return n
-	}
-	n += fastpb.SizeInt32(1, x.StatusCode)
-	return n
-}
-
-func (x *DouyinRelationActionResponse) sizeField2() (n int) {
-	if x.StatusMsg == nil {
-		return n
-	}
-	n += fastpb.SizeString(2, *x.StatusMsg)
-	return n
-}
-
-func (x *Message) Size() (n int) {
-	if x == nil {
-		return n
-	}
-	n += x.sizeField1()
-	n += x.sizeField2()
-	n += x.sizeField3()
-	n += x.sizeField4()
-	n += x.sizeField5()
-	return n
-}
-
-func (x *Message) sizeField1() (n int) {
-	if x.Id == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(1, x.Id)
-	return n
-}
-
-func (x *Message) sizeField2() (n int) {
-	if x.ToUserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(2, x.ToUserId)
-	return n
-}
-
-func (x *Message) sizeField3() (n int) {
-	if x.FromUserId == 0 {
-		return n
-	}
-	n += fastpb.SizeInt64(3, x.FromUserId)
-	return n
-}
-
-func (x *Message) sizeField4() (n int) {
-	if x.Content == "" {
-		return n
-	}
-	n += fastpb.SizeString(4, x.Content)
-	return n
-}
-
-func (x *Message) sizeField5() (n int) {
-	if x.CreateTime == nil {
-		return n
-	}
-	n += fastpb.SizeString(5, *x.CreateTime)
-	return n
-}
-
-var fieldIDToName_DouyinMessageChatRequest = map[int32]string{
-	1: "Token",
-	2: "ToUserId",
-}
-
-var fieldIDToName_DouyinMessageChatResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-	3: "MessageList",
-}
-
-var fieldIDToName_DouyinRelationActionRequest = map[int32]string{
-	1: "Token",
-	2: "ToUserId",
-	3: "ActionType",
-	4: "Content",
-}
-
-var fieldIDToName_DouyinRelationActionResponse = map[int32]string{
-	1: "StatusCode",
-	2: "StatusMsg",
-}
-
-var fieldIDToName_Message = map[int32]string{
-	1: "Id",
-	2: "ToUserId",
-	3: "FromUserId",
-	4: "Content",
-	5: "CreateTime",
-}
Index: dal/model/tb_relation.gen.go
===================================================================
diff --git a/dal/model/tb_relation.gen.go b/dal/model/tb_relation.gen.go
deleted file mode 100644
--- a/dal/model/tb_relation.gen.go	
+++ /dev/null	
@@ -1,25 +0,0 @@
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-// Code generated by gorm.io/gen. DO NOT EDIT.
-
-package model
-
-import (
-	"time"
-)
-
-const TableNameRelation = "tb_relation"
-
-// Relation mapped from table <tb_relation>
-type Relation struct {
-	RelationID  int64     `gorm:"column:relation_id;primaryKey;autoIncrement:true" json:"relation_id"`      // 关注id
-	FollowerID  int64     `gorm:"column:follower_id" json:"follower_id"`                                    // 粉丝id
-	FollowingID int64     `gorm:"column:following_id" json:"following_id"`                                  // 博主id
-	Isdeleted   int32     `gorm:"column:isdeleted" json:"isdeleted"`                                        // 取消关注
-	CreateTime  time.Time `gorm:"column:create_time;not null;default:CURRENT_TIMESTAMP" json:"create_time"` // 创建时间
-}
-
-// TableName Relation's table name
-func (*Relation) TableName() string {
-	return TableNameRelation
-}
Index: biz/handler/ping.go
===================================================================
diff --git a/biz/handler/ping.go b/biz/handler/ping.go
deleted file mode 100644
--- a/biz/handler/ping.go	
+++ /dev/null	
@@ -1,18 +0,0 @@
-// Code generated by hertz generator.
-
-package handler
-
-import (
-	"context"
-
-	"github.com/cloudwego/hertz/pkg/app"
-	"github.com/cloudwego/hertz/pkg/common/utils"
-	"github.com/cloudwego/hertz/pkg/protocol/consts"
-)
-
-// Ping .
-func Ping(ctx context.Context, c *app.RequestContext) {
-	c.JSON(consts.StatusOK, utils.H{
-		"message": "pong",
-	})
-}
Index: router_gen.go
===================================================================
diff --git a/router_gen.go b/router_gen.go
deleted file mode 100644
--- a/router_gen.go	
+++ /dev/null	
@@ -1,16 +0,0 @@
-// Code generated by hertz generator. DO NOT EDIT.
-
-package main
-
-import (
-	router "dousheng/biz/router"
-	"github.com/cloudwego/hertz/pkg/app/server"
-)
-
-// register registers all routers.
-func register(r *server.Hertz) {
-
-	router.GeneratedRegister(r)
-
-	customizedRegister(r)
-}
